{
 "permissions": [
  {
   "name": "accesscontextmanager.accessLevels.create",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.accessLevels.delete",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accessapproval.settings.delete",
   "roles": [
    "roles/accessapproval.configEditor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.accessLevels.get",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyReader",
    "roles/accesscontextmanager.policyEditor",
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accessapproval.settings.get",
   "roles": [
    "roles/accessapproval.configEditor",
    "roles/accessapproval.viewer",
    "roles/accessapproval.approver",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accesscontextmanager.accessLevels.list",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyReader",
    "roles/accesscontextmanager.policyEditor",
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accessapproval.settings.update",
   "roles": [
    "roles/accessapproval.configEditor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.accessLevels.replaceAll",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "resourcemanager.projects.get",
   "roles": [
    "roles/accessapproval.configEditor",
    "roles/accesscontextmanager.policyAdmin",
    "roles/accessapproval.viewer",
    "roles/dialogflow.admin",
    "roles/cloudmigration.inframanager",
    "roles/cloudprivatecatalog.consumer",
    "roles/cloudscheduler.admin",
    "roles/cloudprivatecatalogproducer.admin",
    "roles/accesscontextmanager.policyReader",
    "roles/actions.Admin",
    "roles/accesscontextmanager.policyEditor",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprofiler.user",
    "roles/cloudscheduler.jobRunner",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/cloudscheduler.viewer",
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/aiplatform.featurestoreAdmin",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/cloudsql.viewer",
    "roles/cloudsupport.techSupportEditor",
    "roles/cloudtrace.admin",
    "roles/actions.Viewer",
    "roles/aiplatform.serviceAgent",
    "roles/aiplatform.user",
    "roles/cloudsupport.techSupportViewer",
    "roles/aiplatform.admin",
    "roles/cloudsecurityscanner.editor",
    "roles/cloudtasks.admin",
    "roles/cloudtasks.enqueuer",
    "roles/cloudtasks.queueAdmin",
    "roles/codelabapikeys.viewer",
    "roles/cloudtasks.taskDeleter",
    "roles/cloudtasks.taskRunner",
    "roles/cloudtasks.viewer",
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/cloudtpu.serviceAgent",
    "roles/apigateway.admin",
    "roles/cloudtrace.user",
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/assuredworkloads.reader",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/automl.admin",
    "roles/apigateway.viewer",
    "roles/cloudtranslate.user",
    "roles/automl.predictor",
    "roles/cloudtranslate.viewer",
    "roles/codelabapikeys.admin",
    "roles/codelabapikeys.editor",
    "roles/apigee.admin",
    "roles/aiplatform.viewer",
    "roles/apigee.analyticsEditor",
    "roles/assuredworkloads.admin",
    "roles/assuredworkloads.editor",
    "roles/apigee.analyticsViewer",
    "roles/composer.environmentAndStorageObjectViewer",
    "roles/composer.serviceAgent",
    "roles/apigee.apiAdmin",
    "roles/composer.worker",
    "roles/compute.admin",
    "roles/apigee.apiReader",
    "roles/compute.osLogin",
    "roles/compute.imageUser",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/apigee.developerAdmin",
    "roles/compute.loadBalancerAdmin",
    "roles/automlrecommendations.editor",
    "roles/compute.packetMirroringAdmin",
    "roles/bigquery.jobUser",
    "roles/accessapproval.approver",
    "roles/compute.serviceAgent",
    "roles/bigquery.admin",
    "roles/compute.storageAdmin",
    "roles/compute.networkUser",
    "roles/appengine.serviceAdmin",
    "roles/bigquery.metadataViewer",
    "roles/bigquery.resourceAdmin",
    "roles/container.clusterAdmin",
    "roles/binaryauthorization.continuousValidationConfigViewer",
    "roles/binaryauthorization.policyEditor",
    "roles/bigtable.reader",
    "roles/containeranalysis.notes.editor",
    "roles/cloudfunctions.admin",
    "roles/binaryauthorization.attestorsAdmin",
    "roles/binaryauthorization.continuousValidationConfigEditor",
    "roles/compute.networkViewer",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/cloudbuild.builds.builder",
    "roles/compute.orgFirewallPolicyUser",
    "roles/apigee.portalAdmin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/cloudconfig.viewer",
    "roles/cloudjobdiscovery.profilesEditor",
    "roles/cloudkms.cryptoKeyDecrypter",
    "roles/compute.orgSecurityResourceAdmin",
    "roles/cloudkms.cryptoKeyEncrypterDecrypter",
    "roles/cloudjobdiscovery.profilesViewer",
    "roles/cloudjobdiscovery.admin",
    "roles/datafusion.serviceAgent",
    "roles/cloudkms.signer",
    "roles/datafusion.viewer",
    "roles/cloudkms.signerVerifier",
    "roles/cloudkms.admin",
    "roles/compute.osAdminLogin",
    "roles/datalabeling.serviceAgent",
    "roles/apigee.readOnlyAdmin",
    "roles/bigquery.dataViewer",
    "roles/automl.viewer",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/compute.networkAdmin",
    "roles/automlrecommendations.serviceAgent",
    "roles/compute.packetMirroringUser",
    "roles/automlrecommendations.viewer",
    "roles/autoscaling.sitesAdmin",
    "roles/compute.publicIpAdmin",
    "roles/axt.admin",
    "roles/compute.securityAdmin",
    "roles/appengine.appAdmin",
    "roles/automl.editor",
    "roles/appengine.appCreator",
    "roles/appengine.appViewer",
    "roles/appengine.codeViewer",
    "roles/compute.viewer",
    "roles/bigquery.dataEditor",
    "roles/appengine.deployer",
    "roles/compute.xpnAdmin",
    "roles/computescanning.serviceAgent",
    "roles/consumerprocurement.entitlementManager",
    "roles/bigquery.dataOwner",
    "roles/apigee.environmentAdmin",
    "roles/consumerprocurement.entitlementViewer",
    "roles/appengineflex.serviceAgent",
    "roles/binaryauthorization.attestorsEditor",
    "roles/binaryauthorization.attestorsVerifier",
    "roles/bigquery.readSessionUser",
    "roles/binaryauthorization.attestorsViewer",
    "roles/container.admin",
    "roles/binaryauthorization.continuousValidationConfigAdmin",
    "roles/container.clusterViewer",
    "roles/container.developer",
    "roles/bigquery.resourceEditor",
    "roles/bigquery.resourceViewer",
    "roles/binaryauthorization.policyAdmin",
    "roles/bigquery.user",
    "roles/binaryauthorization.policyViewer",
    "roles/binaryauthorization.serviceAgent",
    "roles/container.serviceAgent",
    "roles/containeranalysis.ServiceAgent",
    "roles/browser",
    "roles/container.viewer",
    "roles/bigtable.admin",
    "roles/containeranalysis.admin",
    "roles/bigquerydatatransfer.serviceAgent",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/containeranalysis.notes.viewer",
    "roles/containeranalysis.occurrences.editor",
    "roles/containeranalysis.occurrences.viewer",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudfunctions.developer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/datacatalog.admin",
    "roles/datacatalog.categoryAdmin",
    "roles/cloudfunctions.serviceAgent",
    "roles/datacatalog.entryGroupCreator",
    "roles/cloudfunctions.viewer",
    "roles/datacatalog.entryGroupOwner",
    "roles/cloudbuild.builds.editor",
    "roles/datacatalog.entryOwner",
    "roles/cloudbuild.builds.viewer",
    "roles/cloudbuild.serviceAgent",
    "roles/datacatalog.entryViewer",
    "roles/cloudconfig.admin",
    "roles/datacatalog.tagTemplateOwner",
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/compute.orgSecurityPolicyUser",
    "roles/datacatalog.tagTemplateUser",
    "roles/cloudjobdiscovery.jobsViewer",
    "roles/datacatalog.tagTemplateViewer",
    "roles/datacatalog.viewer",
    "roles/cloudkms.cryptoKeyEncrypter",
    "roles/dataflow.admin",
    "roles/dataflow.developer",
    "roles/cloudkms.importer",
    "roles/dataflow.serviceAgent",
    "roles/dataflow.viewer",
    "roles/datafusion.admin",
    "roles/cloudkms.publicKeyViewer",
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datastore.importExportAdmin",
    "roles/datastore.indexAdmin",
    "roles/datalabeling.editor",
    "roles/dellemccloudonefs.user",
    "roles/dellemccloudonefs.viewer",
    "roles/datastore.owner",
    "roles/deploymentmanager.editor",
    "roles/datastore.user",
    "roles/deploymentmanager.typeViewer",
    "roles/deploymentmanager.typeEditor",
    "roles/datastore.viewer",
    "roles/dataproc.hubAgent",
    "roles/deploymentmanager.viewer",
    "roles/datamigration.admin",
    "roles/dataprep.serviceAgent",
    "roles/dellemccloudonefs.admin",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/dataprep.projects.user",
    "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
    "roles/dialogflow.consoleAgentEditor",
    "roles/endpoints.portalAdmin",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/dns.admin",
    "roles/dns.reader",
    "roles/documentai.admin",
    "roles/dlp.serviceAgent",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/domains.admin",
    "roles/errorreporting.admin",
    "roles/errorreporting.user",
    "roles/errorreporting.viewer",
    "roles/domains.viewer",
    "roles/eventarc.admin",
    "roles/earthengine.admin",
    "roles/eventarc.viewer",
    "roles/exploreanthos.serviceAgent",
    "roles/file.serviceAgent",
    "roles/firebase.admin",
    "roles/earthengine.viewer",
    "roles/firebase.analyticsAdmin",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/firebase.analyticsViewer",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.managementServiceAgent",
    "roles/lifesciences.serviceAgent",
    "roles/firebaseabt.viewer",
    "roles/firebaseauth.admin",
    "roles/lifesciences.viewer",
    "roles/integrations.apigeeIntegrationAdmin",
    "roles/firebaseappdistro.viewer",
    "roles/firebase.qualityViewer",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasedatabase.admin",
    "roles/kuberun.eventsDataPlaneServiceAgent",
    "roles/firebase.viewer",
    "roles/firebasehosting.admin",
    "roles/firebasehosting.viewer",
    "roles/firebaseabt.admin",
    "roles/firebaseappdistro.admin",
    "roles/firebaseauth.viewer",
    "roles/firebasecrash.symbolMappingsAdmin",
    "roles/gameservices.serviceAgent",
    "roles/firebasecrashlytics.admin",
    "roles/logging.admin",
    "roles/firebasecrashlytics.viewer",
    "roles/logging.configWriter",
    "roles/firebasenotifications.admin",
    "roles/firebasedatabase.viewer",
    "roles/firebasedynamiclinks.admin",
    "roles/logging.privateLogViewer",
    "roles/firebasedynamiclinks.viewer",
    "roles/genomics.serviceAgent",
    "roles/firebasestorage.admin",
    "roles/firebasestorage.viewer",
    "roles/logging.viewer",
    "roles/managedidentities.admin",
    "roles/gsuiteaddons.reader",
    "roles/managedidentities.domainAdmin",
    "roles/ml.viewer",
    "roles/managedidentities.serviceAgent",
    "roles/healthcare.annotationEditor",
    "roles/gkehub.admin",
    "roles/managedidentities.viewer",
    "roles/firebaseinappmessaging.admin",
    "roles/monitoring.editor",
    "roles/healthcare.attributeDefinitionReader",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/firebaseinappmessaging.viewer",
    "roles/memcache.editor",
    "roles/firebaseml.admin",
    "roles/gsuiteaddons.developer",
    "roles/memcache.serviceAgent",
    "roles/firebaseml.viewer",
    "roles/memcache.viewer",
    "roles/firebasemods.serviceAgent",
    "roles/healthcare.consentStoreViewer",
    "roles/healthcare.datasetAdmin",
    "roles/gameservices.viewer",
    "roles/netappcloudvolumes.viewer",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/healthcare.dicomViewer",
    "roles/notebooks.admin",
    "roles/metastore.metadataOperator",
    "roles/metastore.user",
    "roles/healthcare.fhirStoreViewer",
    "roles/ml.admin",
    "roles/firebasenotifications.viewer",
    "roles/ml.developer",
    "roles/firebaseperformance.admin",
    "roles/healthcare.nlpServiceViewer",
    "roles/firebaseperformance.viewer",
    "roles/healthcare.serviceAgent",
    "roles/firebasepredictions.admin",
    "roles/osconfig.guestPolicyAdmin",
    "roles/iam.organizationRoleAdmin",
    "roles/iam.serviceAccountCreator",
    "roles/iam.serviceAccountKeyAdmin",
    "roles/iam.serviceAccountDeleter",
    "roles/osconfig.guestPolicyEditor",
    "roles/firebasepredictions.viewer",
    "roles/iam.serviceAccountUser",
    "roles/iam.workloadIdentityPoolAdmin",
    "roles/iam.workloadIdentityPoolViewer",
    "roles/osconfig.patchDeploymentAdmin",
    "roles/firebaserules.admin",
    "roles/redisenterprisecloud.viewer",
    "roles/ml.serviceAgent",
    "roles/firebaserules.viewer",
    "roles/gsuiteaddons.tester",
    "roles/gameservices.admin",
    "roles/monitoring.admin",
    "roles/osconfig.serviceAgent",
    "roles/healthcare.annotationReader",
    "roles/healthcare.annotationStoreAdmin",
    "roles/healthcare.annotationStoreViewer",
    "roles/memcache.admin",
    "roles/proximitybeacon.attachmentPublisher",
    "roles/proximitybeacon.attachmentViewer",
    "roles/gkehub.viewer",
    "roles/recaptchaenterprise.viewer",
    "roles/healthcare.consentArtifactAdmin",
    "roles/healthcare.consentArtifactEditor",
    "roles/healthcare.consentArtifactReader",
    "roles/healthcare.consentEditor",
    "roles/healthcare.consentReader",
    "roles/healthcare.consentStoreAdmin",
    "roles/monitoring.viewer",
    "roles/recommender.iamViewer",
    "roles/netappcloudvolumes.admin",
    "roles/recommender.projectCudViewer",
    "roles/healthcare.datasetViewer",
    "roles/redis.admin",
    "roles/healthcare.dicomEditor",
    "roles/healthcare.dicomStoreAdmin",
    "roles/redis.viewer",
    "roles/redisenterprisecloud.admin",
    "roles/networkmanagement.admin",
    "roles/redis.serviceAgent",
    "roles/healthcare.dicomStoreViewer",
    "roles/networkmanagement.viewer",
    "roles/healthcare.fhirResourceEditor",
    "roles/healthcare.fhirResourceReader",
    "roles/notebooks.legacyAdmin",
    "roles/healthcare.fhirStoreAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/healthcare.hl7V2Consumer",
    "roles/healthcare.hl7V2Editor",
    "roles/notebooks.viewer",
    "roles/healthcare.hl7V2Ingest",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/healthcare.hl7V2StoreViewer",
    "roles/healthcare.userDataMappingEditor",
    "roles/healthcare.userDataMappingReader",
    "roles/iam.serviceAccountAdmin",
    "roles/iam.organizationRoleViewer",
    "roles/iam.roleAdmin",
    "roles/iam.roleViewer",
    "roles/iam.serviceAccountTokenCreator",
    "roles/osconfig.guestPolicyViewer",
    "roles/osconfig.patchDeploymentViewer",
    "roles/osconfig.patchJobExecutor",
    "roles/osconfig.patchJobViewer",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/proximitybeacon.attachmentEditor",
    "roles/recaptchaenterprise.admin",
    "roles/proximitybeacon.beaconEditor",
    "roles/recaptchaenterprise.agent",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.serviceAgent",
    "roles/pubsub.viewer",
    "roles/recommender.productSuggestionAdmin",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/recommender.firewallAdmin",
    "roles/recommender.firewallViewer",
    "roles/recommender.iamAdmin",
    "roles/recommender.productSuggestionViewer",
    "roles/redis.editor",
    "roles/recommender.projectCudAdmin",
    "roles/resourcemanager.folderCreator",
    "roles/resourcemanager.folderEditor",
    "roles/resourcemanager.projectMover",
    "roles/workflows.viewer",
    "roles/servicemanagement.quotaAdmin",
    "roles/securedlandingzone.serviceAgent",
    "roles/securitycenter.adminEditor",
    "roles/stackdriver.accounts.editor",
    "roles/stackdriver.accounts.viewer",
    "roles/securitycenter.automationServiceAgent",
    "roles/spanner.databaseAdmin",
    "roles/securitycenter.admin",
    "roles/storage.hmacKeyAdmin",
    "roles/viewer",
    "roles/spanner.restoreAdmin",
    "roles/vpcaccess.serviceAgent",
    "roles/resourcemanager.folderViewer",
    "roles/vpcaccess.user",
    "roles/resourcemanager.folderAdmin",
    "roles/securitycenter.controlServiceAgent",
    "roles/resourcemanager.organizationAdmin",
    "roles/resourcemanager.projectIamAdmin",
    "roles/storage.objectAdmin",
    "roles/servicenetworking.serviceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/resourcemanager.tagUser",
    "roles/securitycenter.serviceAgent",
    "roles/retail.serviceAgent",
    "roles/run.admin",
    "roles/storage.objectCreator",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent",
    "roles/storage.objectViewer",
    "roles/run.viewer",
    "roles/secretmanager.admin",
    "roles/secretmanager.secretAccessor",
    "roles/storagetransfer.admin",
    "roles/secretmanager.secretVersionAdder",
    "roles/servicedirectory.admin",
    "roles/secretmanager.secretVersionManager",
    "roles/servicedirectory.editor",
    "roles/secretmanager.viewer",
    "roles/servicedirectory.viewer",
    "roles/storagetransfer.user",
    "roles/servicemanagement.admin",
    "roles/storagetransfer.viewer",
    "roles/spanner.viewer",
    "roles/subscribewithgoogledeveloper.developer",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin",
    "roles/tpu.admin",
    "roles/storage.admin",
    "roles/tpu.serviceAgent",
    "roles/tpu.viewer",
    "roles/transcoder.admin",
    "roles/transcoder.viewer",
    "roles/vpcaccess.viewer",
    "roles/vpcaccess.admin",
    "roles/workflows.admin",
    "roles/workflows.editor",
    "roles/workflows.invoker"
   ]
  },
  {
   "name": "resourcemanager.projects.list",
   "roles": [
    "roles/accessapproval.configEditor",
    "roles/accesscontextmanager.policyAdmin",
    "roles/accessapproval.viewer",
    "roles/cloudprivatecatalog.consumer",
    "roles/cloudscheduler.admin",
    "roles/cloudprivatecatalogproducer.admin",
    "roles/accesscontextmanager.policyReader",
    "roles/actions.Admin",
    "roles/accesscontextmanager.policyEditor",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprofiler.user",
    "roles/cloudscheduler.jobRunner",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/cloudscheduler.viewer",
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/aiplatform.featurestoreAdmin",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/cloudsql.viewer",
    "roles/cloudsupport.techSupportEditor",
    "roles/cloudtrace.admin",
    "roles/actions.Viewer",
    "roles/aiplatform.serviceAgent",
    "roles/aiplatform.user",
    "roles/cloudsupport.techSupportViewer",
    "roles/aiplatform.admin",
    "roles/cloudsecurityscanner.editor",
    "roles/cloudtasks.admin",
    "roles/cloudtasks.enqueuer",
    "roles/cloudtasks.queueAdmin",
    "roles/codelabapikeys.viewer",
    "roles/cloudtasks.taskDeleter",
    "roles/cloudtasks.taskRunner",
    "roles/cloudtasks.viewer",
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/cloudtpu.serviceAgent",
    "roles/apigateway.admin",
    "roles/cloudtrace.user",
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/assuredworkloads.reader",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/automl.admin",
    "roles/apigateway.viewer",
    "roles/cloudtranslate.user",
    "roles/automl.predictor",
    "roles/cloudtranslate.viewer",
    "roles/codelabapikeys.admin",
    "roles/codelabapikeys.editor",
    "roles/apigee.admin",
    "roles/aiplatform.viewer",
    "roles/apigee.analyticsEditor",
    "roles/assuredworkloads.admin",
    "roles/assuredworkloads.editor",
    "roles/apigee.analyticsViewer",
    "roles/composer.environmentAndStorageObjectViewer",
    "roles/composer.serviceAgent",
    "roles/apigee.apiAdmin",
    "roles/composer.worker",
    "roles/compute.admin",
    "roles/apigee.apiReader",
    "roles/compute.osLogin",
    "roles/compute.imageUser",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/apigee.developerAdmin",
    "roles/compute.loadBalancerAdmin",
    "roles/automlrecommendations.editor",
    "roles/compute.packetMirroringAdmin",
    "roles/bigquery.jobUser",
    "roles/accessapproval.approver",
    "roles/compute.serviceAgent",
    "roles/bigquery.admin",
    "roles/compute.storageAdmin",
    "roles/compute.networkUser",
    "roles/appengine.serviceAdmin",
    "roles/bigquery.metadataViewer",
    "roles/bigquery.resourceAdmin",
    "roles/container.clusterAdmin",
    "roles/binaryauthorization.continuousValidationConfigViewer",
    "roles/binaryauthorization.policyEditor",
    "roles/containeranalysis.notes.editor",
    "roles/binaryauthorization.attestorsAdmin",
    "roles/binaryauthorization.continuousValidationConfigEditor",
    "roles/compute.networkViewer",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/cloudbuild.builds.builder",
    "roles/compute.orgFirewallPolicyUser",
    "roles/apigee.portalAdmin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/cloudconfig.viewer",
    "roles/cloudjobdiscovery.profilesEditor",
    "roles/compute.orgSecurityResourceAdmin",
    "roles/cloudjobdiscovery.profilesViewer",
    "roles/cloudjobdiscovery.admin",
    "roles/datafusion.serviceAgent",
    "roles/datafusion.viewer",
    "roles/compute.osAdminLogin",
    "roles/datalabeling.serviceAgent",
    "roles/apigee.readOnlyAdmin",
    "roles/bigquery.dataViewer",
    "roles/automl.viewer",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/compute.networkAdmin",
    "roles/automlrecommendations.serviceAgent",
    "roles/compute.packetMirroringUser",
    "roles/automlrecommendations.viewer",
    "roles/autoscaling.sitesAdmin",
    "roles/compute.publicIpAdmin",
    "roles/axt.admin",
    "roles/compute.securityAdmin",
    "roles/appengine.appAdmin",
    "roles/automl.editor",
    "roles/appengine.appCreator",
    "roles/appengine.appViewer",
    "roles/appengine.codeViewer",
    "roles/compute.viewer",
    "roles/bigquery.dataEditor",
    "roles/appengine.deployer",
    "roles/compute.xpnAdmin",
    "roles/computescanning.serviceAgent",
    "roles/consumerprocurement.entitlementManager",
    "roles/bigquery.dataOwner",
    "roles/apigee.environmentAdmin",
    "roles/consumerprocurement.entitlementViewer",
    "roles/binaryauthorization.attestorsEditor",
    "roles/binaryauthorization.attestorsVerifier",
    "roles/bigquery.readSessionUser",
    "roles/binaryauthorization.attestorsViewer",
    "roles/container.admin",
    "roles/binaryauthorization.continuousValidationConfigAdmin",
    "roles/container.clusterViewer",
    "roles/container.developer",
    "roles/bigquery.resourceEditor",
    "roles/bigquery.resourceViewer",
    "roles/binaryauthorization.policyAdmin",
    "roles/bigquery.user",
    "roles/binaryauthorization.policyViewer",
    "roles/binaryauthorization.serviceAgent",
    "roles/container.serviceAgent",
    "roles/containeranalysis.ServiceAgent",
    "roles/browser",
    "roles/container.viewer",
    "roles/containeranalysis.admin",
    "roles/bigquerydatatransfer.serviceAgent",
    "roles/containeranalysis.notes.viewer",
    "roles/containeranalysis.occurrences.editor",
    "roles/containeranalysis.occurrences.viewer",
    "roles/containerscanning.ServiceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/datacatalog.admin",
    "roles/datacatalog.categoryAdmin",
    "roles/cloudfunctions.serviceAgent",
    "roles/datacatalog.entryGroupCreator",
    "roles/datacatalog.entryGroupOwner",
    "roles/cloudbuild.builds.editor",
    "roles/datacatalog.entryOwner",
    "roles/cloudbuild.builds.viewer",
    "roles/cloudbuild.serviceAgent",
    "roles/datacatalog.entryViewer",
    "roles/cloudconfig.admin",
    "roles/datacatalog.tagTemplateOwner",
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/compute.orgSecurityPolicyUser",
    "roles/datacatalog.tagTemplateUser",
    "roles/cloudjobdiscovery.jobsViewer",
    "roles/datacatalog.tagTemplateViewer",
    "roles/datacatalog.viewer",
    "roles/dataflow.admin",
    "roles/dataflow.developer",
    "roles/dataflow.serviceAgent",
    "roles/dataflow.viewer",
    "roles/datafusion.admin",
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datastore.importExportAdmin",
    "roles/datastore.indexAdmin",
    "roles/datalabeling.editor",
    "roles/dellemccloudonefs.user",
    "roles/dellemccloudonefs.viewer",
    "roles/datastore.owner",
    "roles/deploymentmanager.editor",
    "roles/datastore.user",
    "roles/deploymentmanager.typeViewer",
    "roles/deploymentmanager.typeEditor",
    "roles/datastore.viewer",
    "roles/dataproc.hubAgent",
    "roles/deploymentmanager.viewer",
    "roles/datamigration.admin",
    "roles/dataprep.serviceAgent",
    "roles/dellemccloudonefs.admin",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
    "roles/endpoints.portalAdmin",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.serviceAgent",
    "roles/dns.admin",
    "roles/dns.reader",
    "roles/documentai.admin",
    "roles/dlp.serviceAgent",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/domains.admin",
    "roles/errorreporting.admin",
    "roles/errorreporting.user",
    "roles/errorreporting.viewer",
    "roles/domains.viewer",
    "roles/eventarc.admin",
    "roles/earthengine.admin",
    "roles/eventarc.viewer",
    "roles/file.serviceAgent",
    "roles/firebase.admin",
    "roles/earthengine.viewer",
    "roles/firebase.analyticsAdmin",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/firebase.analyticsViewer",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/lifesciences.serviceAgent",
    "roles/firebaseabt.viewer",
    "roles/firebaseauth.admin",
    "roles/lifesciences.viewer",
    "roles/integrations.apigeeIntegrationAdmin",
    "roles/firebaseappdistro.viewer",
    "roles/firebase.qualityViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasedatabase.admin",
    "roles/firebase.viewer",
    "roles/firebasehosting.admin",
    "roles/firebasehosting.viewer",
    "roles/firebaseabt.admin",
    "roles/firebaseappdistro.admin",
    "roles/firebaseauth.viewer",
    "roles/gameservices.serviceAgent",
    "roles/firebasecrashlytics.admin",
    "roles/logging.admin",
    "roles/firebasecrashlytics.viewer",
    "roles/logging.configWriter",
    "roles/firebasenotifications.admin",
    "roles/firebasedatabase.viewer",
    "roles/firebasedynamiclinks.admin",
    "roles/firebasedynamiclinks.viewer",
    "roles/genomics.serviceAgent",
    "roles/firebasestorage.admin",
    "roles/firebasestorage.viewer",
    "roles/managedidentities.admin",
    "roles/gsuiteaddons.reader",
    "roles/managedidentities.domainAdmin",
    "roles/managedidentities.serviceAgent",
    "roles/healthcare.annotationEditor",
    "roles/gkehub.admin",
    "roles/managedidentities.viewer",
    "roles/firebaseinappmessaging.admin",
    "roles/monitoring.editor",
    "roles/healthcare.attributeDefinitionReader",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/firebaseinappmessaging.viewer",
    "roles/memcache.editor",
    "roles/firebaseml.admin",
    "roles/gsuiteaddons.developer",
    "roles/memcache.serviceAgent",
    "roles/firebaseml.viewer",
    "roles/memcache.viewer",
    "roles/firebasemods.serviceAgent",
    "roles/healthcare.consentStoreViewer",
    "roles/healthcare.datasetAdmin",
    "roles/gameservices.viewer",
    "roles/netappcloudvolumes.viewer",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/healthcare.dicomViewer",
    "roles/notebooks.admin",
    "roles/metastore.metadataOperator",
    "roles/metastore.user",
    "roles/healthcare.fhirStoreViewer",
    "roles/firebasenotifications.viewer",
    "roles/firebaseperformance.admin",
    "roles/healthcare.nlpServiceViewer",
    "roles/firebaseperformance.viewer",
    "roles/healthcare.serviceAgent",
    "roles/firebasepredictions.admin",
    "roles/osconfig.guestPolicyAdmin",
    "roles/iam.organizationRoleAdmin",
    "roles/iam.serviceAccountCreator",
    "roles/iam.serviceAccountKeyAdmin",
    "roles/iam.serviceAccountDeleter",
    "roles/osconfig.guestPolicyEditor",
    "roles/firebasepredictions.viewer",
    "roles/iam.serviceAccountUser",
    "roles/iam.securityAdmin",
    "roles/iam.workloadIdentityPoolAdmin",
    "roles/iam.workloadIdentityPoolViewer",
    "roles/osconfig.patchDeploymentAdmin",
    "roles/firebaserules.admin",
    "roles/redisenterprisecloud.viewer",
    "roles/ml.serviceAgent",
    "roles/firebaserules.viewer",
    "roles/gsuiteaddons.tester",
    "roles/gameservices.admin",
    "roles/monitoring.admin",
    "roles/osconfig.serviceAgent",
    "roles/healthcare.annotationReader",
    "roles/healthcare.annotationStoreAdmin",
    "roles/healthcare.annotationStoreViewer",
    "roles/memcache.admin",
    "roles/proximitybeacon.attachmentPublisher",
    "roles/proximitybeacon.attachmentViewer",
    "roles/gkehub.viewer",
    "roles/recaptchaenterprise.viewer",
    "roles/healthcare.consentArtifactAdmin",
    "roles/healthcare.consentArtifactEditor",
    "roles/healthcare.consentArtifactReader",
    "roles/healthcare.consentEditor",
    "roles/healthcare.consentReader",
    "roles/healthcare.consentStoreAdmin",
    "roles/monitoring.viewer",
    "roles/recommender.iamViewer",
    "roles/netappcloudvolumes.admin",
    "roles/recommender.projectCudViewer",
    "roles/healthcare.datasetViewer",
    "roles/redis.admin",
    "roles/healthcare.dicomEditor",
    "roles/healthcare.dicomStoreAdmin",
    "roles/redis.viewer",
    "roles/redisenterprisecloud.admin",
    "roles/networkmanagement.admin",
    "roles/redis.serviceAgent",
    "roles/healthcare.dicomStoreViewer",
    "roles/networkmanagement.viewer",
    "roles/healthcare.fhirResourceEditor",
    "roles/healthcare.fhirResourceReader",
    "roles/notebooks.legacyAdmin",
    "roles/healthcare.fhirStoreAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/healthcare.hl7V2Consumer",
    "roles/healthcare.hl7V2Editor",
    "roles/notebooks.viewer",
    "roles/healthcare.hl7V2Ingest",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/healthcare.hl7V2StoreViewer",
    "roles/healthcare.userDataMappingEditor",
    "roles/healthcare.userDataMappingReader",
    "roles/iam.securityReviewer",
    "roles/iam.serviceAccountAdmin",
    "roles/iam.organizationRoleViewer",
    "roles/iam.serviceAccountTokenCreator",
    "roles/osconfig.guestPolicyViewer",
    "roles/osconfig.patchDeploymentViewer",
    "roles/osconfig.patchJobExecutor",
    "roles/osconfig.patchJobViewer",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/proximitybeacon.attachmentEditor",
    "roles/recaptchaenterprise.admin",
    "roles/proximitybeacon.beaconEditor",
    "roles/recaptchaenterprise.agent",
    "roles/pubsub.serviceAgent",
    "roles/recommender.productSuggestionAdmin",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/recommender.firewallAdmin",
    "roles/recommender.firewallViewer",
    "roles/recommender.iamAdmin",
    "roles/recommender.productSuggestionViewer",
    "roles/redis.editor",
    "roles/recommender.projectCudAdmin",
    "roles/resourcemanager.folderCreator",
    "roles/resourcemanager.folderEditor",
    "roles/workflows.viewer",
    "roles/servicemanagement.quotaAdmin",
    "roles/securitycenter.adminEditor",
    "roles/stackdriver.accounts.editor",
    "roles/stackdriver.accounts.viewer",
    "roles/securitycenter.automationServiceAgent",
    "roles/spanner.databaseAdmin",
    "roles/securitycenter.admin",
    "roles/storage.hmacKeyAdmin",
    "roles/viewer",
    "roles/spanner.restoreAdmin",
    "roles/resourcemanager.folderViewer",
    "roles/vpcaccess.user",
    "roles/resourcemanager.folderAdmin",
    "roles/securitycenter.controlServiceAgent",
    "roles/resourcemanager.organizationAdmin",
    "roles/storage.objectAdmin",
    "roles/servicenetworking.serviceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/retail.serviceAgent",
    "roles/run.admin",
    "roles/storage.objectCreator",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent",
    "roles/storage.objectViewer",
    "roles/run.viewer",
    "roles/secretmanager.admin",
    "roles/secretmanager.secretAccessor",
    "roles/storagetransfer.admin",
    "roles/secretmanager.secretVersionAdder",
    "roles/servicedirectory.admin",
    "roles/secretmanager.secretVersionManager",
    "roles/servicedirectory.editor",
    "roles/secretmanager.viewer",
    "roles/servicedirectory.viewer",
    "roles/storagetransfer.user",
    "roles/servicemanagement.admin",
    "roles/storagetransfer.viewer",
    "roles/spanner.viewer",
    "roles/subscribewithgoogledeveloper.developer",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin",
    "roles/tpu.admin",
    "roles/storage.admin",
    "roles/tpu.serviceAgent",
    "roles/tpu.viewer",
    "roles/transcoder.admin",
    "roles/transcoder.viewer",
    "roles/vpcaccess.viewer",
    "roles/vpcaccess.admin",
    "roles/workflows.admin",
    "roles/workflows.editor",
    "roles/workflows.invoker"
   ]
  },
  {
   "name": "androidmanagement.enterprises.manage",
   "roles": [
    "roles/androidmanagement.user",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.accessLevels.update",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.accessPolicies.create",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.accessPolicies.delete",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.accessPolicies.get",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyReader",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accesscontextmanager.accessPolicies.getIamPolicy",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyReader",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accesscontextmanager.accessPolicies.list",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyReader",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accesscontextmanager.accessPolicies.setIamPolicy",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.accessPolicies.update",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.accessZones.create",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.accessZones.delete",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "serviceusage.quotas.get",
   "roles": [
    "roles/androidmanagement.user",
    "roles/cloudprofiler.user",
    "roles/cloudsecurityscanner.viewer",
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/cloudsql.viewer",
    "roles/cloudsecurityscanner.editor",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.admin",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/composer.environmentAndStorageObjectViewer",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/compute.admin",
    "roles/compute.osLogin",
    "roles/compute.imageUser",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.packetMirroringAdmin",
    "roles/compute.storageAdmin",
    "roles/compute.networkUser",
    "roles/cloudfunctions.admin",
    "roles/compute.networkViewer",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgFirewallPolicyUser",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.orgSecurityResourceAdmin",
    "roles/datafusion.serviceAgent",
    "roles/compute.osAdminLogin",
    "roles/compute.networkAdmin",
    "roles/compute.packetMirroringUser",
    "roles/compute.securityAdmin",
    "roles/composer.user",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/containeranalysis.ServiceAgent",
    "roles/cloudfunctions.developer",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudfunctions.viewer",
    "roles/compute.orgSecurityPolicyUser",
    "roles/dataflow.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeViewer",
    "roles/deploymentmanager.typeEditor",
    "roles/deploymentmanager.viewer",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataprep.projects.user",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/lifesciences.serviceAgent",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/genomics.serviceAgent",
    "roles/firebasemods.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.viewer",
    "roles/serviceusage.serviceUsageConsumer",
    "roles/serviceusage.serviceUsageViewer",
    "roles/servicemanagement.quotaAdmin",
    "roles/servicemanagement.quotaViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/serviceusage.serviceUsageAdmin",
    "roles/servicemanagement.admin",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "accesscontextmanager.accessZones.get",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyReader",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "serviceusage.services.get",
   "roles": [
    "roles/androidmanagement.user",
    "roles/cloudscheduler.admin",
    "roles/cloudprofiler.user",
    "roles/cloudscheduler.jobRunner",
    "roles/anthos.serviceAgent",
    "roles/cloudscheduler.viewer",
    "roles/cloudsecurityscanner.viewer",
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/cloudsql.viewer",
    "roles/cloudsecurityscanner.editor",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.admin",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/composer.environmentAndStorageObjectViewer",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/compute.admin",
    "roles/compute.osLogin",
    "roles/compute.imageUser",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/automlrecommendations.editor",
    "roles/compute.packetMirroringAdmin",
    "roles/compute.storageAdmin",
    "roles/compute.networkUser",
    "roles/cloudfunctions.admin",
    "roles/compute.networkViewer",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgFirewallPolicyUser",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.orgSecurityResourceAdmin",
    "roles/datafusion.serviceAgent",
    "roles/compute.osAdminLogin",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/compute.networkAdmin",
    "roles/compute.packetMirroringUser",
    "roles/automlrecommendations.viewer",
    "roles/compute.securityAdmin",
    "roles/composer.user",
    "roles/compute.viewer",
    "roles/consumerprocurement.entitlementManager",
    "roles/consumerprocurement.entitlementViewer",
    "roles/container.serviceAgent",
    "roles/containeranalysis.ServiceAgent",
    "roles/cloudfunctions.developer",
    "roles/cloudfunctions.viewer",
    "roles/compute.orgSecurityPolicyUser",
    "roles/dataflow.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeViewer",
    "roles/deploymentmanager.typeEditor",
    "roles/deploymentmanager.viewer",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataprep.projects.user",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.managementServiceAgent",
    "roles/lifesciences.serviceAgent",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/genomics.serviceAgent",
    "roles/firebasemods.serviceAgent",
    "roles/notebooks.admin",
    "roles/gkehub.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.viewer",
    "roles/serviceusage.serviceUsageConsumer",
    "roles/serviceusage.serviceUsageViewer",
    "roles/servicemanagement.quotaAdmin",
    "roles/servicemanagement.quotaViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/serviceusage.serviceUsageAdmin",
    "roles/servicemanagement.admin",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "accesscontextmanager.accessZones.list",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyReader",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accesscontextmanager.accessZones.update",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "serviceusage.services.list",
   "roles": [
    "roles/androidmanagement.user",
    "roles/cloudscheduler.admin",
    "roles/cloudprofiler.user",
    "roles/cloudscheduler.jobRunner",
    "roles/anthos.serviceAgent",
    "roles/cloudscheduler.viewer",
    "roles/cloudsecurityscanner.viewer",
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/cloudsql.viewer",
    "roles/cloudsecurityscanner.editor",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.admin",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/automl.admin",
    "roles/composer.environmentAndStorageObjectViewer",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/compute.admin",
    "roles/compute.osLogin",
    "roles/compute.imageUser",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/automlrecommendations.editor",
    "roles/compute.packetMirroringAdmin",
    "roles/compute.storageAdmin",
    "roles/compute.networkUser",
    "roles/cloudfunctions.admin",
    "roles/compute.networkViewer",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgFirewallPolicyUser",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.orgSecurityResourceAdmin",
    "roles/datafusion.serviceAgent",
    "roles/compute.osAdminLogin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/compute.networkAdmin",
    "roles/compute.packetMirroringUser",
    "roles/automlrecommendations.viewer",
    "roles/compute.securityAdmin",
    "roles/composer.user",
    "roles/automl.editor",
    "roles/compute.viewer",
    "roles/consumerprocurement.entitlementManager",
    "roles/consumerprocurement.entitlementViewer",
    "roles/container.serviceAgent",
    "roles/containeranalysis.ServiceAgent",
    "roles/cloudfunctions.developer",
    "roles/cloudfunctions.viewer",
    "roles/compute.orgSecurityPolicyUser",
    "roles/dataflow.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.viewer",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataprep.projects.user",
    "roles/dlp.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/lifesciences.serviceAgent",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/genomics.serviceAgent",
    "roles/firebasemods.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/gkehub.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.viewer",
    "roles/serviceusage.serviceUsageConsumer",
    "roles/serviceusage.serviceUsageViewer",
    "roles/servicemanagement.quotaAdmin",
    "roles/servicemanagement.quotaViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/serviceusage.serviceUsageAdmin",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "accesscontextmanager.policies.create",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.policies.delete",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.gcpUserAccessBindings.get",
   "roles": [
    "roles/accesscontextmanager.gcpAccessReader",
    "roles/accesscontextmanager.gcpAccessAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accesscontextmanager.policies.get",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyReader",
    "roles/accesscontextmanager.policyEditor",
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accesscontextmanager.gcpUserAccessBindings.list",
   "roles": [
    "roles/accesscontextmanager.gcpAccessReader",
    "roles/accesscontextmanager.gcpAccessAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accesscontextmanager.policies.getIamPolicy",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyReader",
    "roles/accesscontextmanager.policyEditor",
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accesscontextmanager.policies.list",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyReader",
    "roles/accesscontextmanager.policyEditor",
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accesscontextmanager.policies.setIamPolicy",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.policies.update",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.servicePerimeters.commit",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.servicePerimeters.create",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.servicePerimeters.delete",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.servicePerimeters.get",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyReader",
    "roles/accesscontextmanager.policyEditor",
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accesscontextmanager.servicePerimeters.list",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyReader",
    "roles/accesscontextmanager.policyEditor",
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accesscontextmanager.servicePerimeters.replaceAll",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.servicePerimeters.update",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudasset.assets.searchAllResources",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/accesscontextmanager.policyEditor",
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "resourcemanager.organizations.get",
   "roles": [
    "roles/accesscontextmanager.policyAdmin",
    "roles/cloudprivatecatalogproducer.admin",
    "roles/accesscontextmanager.policyReader",
    "roles/accesscontextmanager.policyEditor",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/cloudsupport.admin",
    "roles/assuredworkloads.reader",
    "roles/assuredworkloads.admin",
    "roles/assuredworkloads.editor",
    "roles/axt.admin",
    "roles/compute.xpnAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/browser",
    "roles/billing.creator",
    "roles/firebase.managementServiceAgent",
    "roles/iam.organizationRoleAdmin",
    "roles/iam.organizationRoleViewer",
    "roles/securitycenter.sourcesAdmin",
    "roles/servicemanagement.quotaAdmin",
    "roles/securitycenter.assetsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.automationServiceAgent",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.findingsEditor",
    "roles/resourcemanager.organizationAdmin",
    "roles/securitycenter.findingsViewer",
    "roles/resourcemanager.organizationViewer",
    "roles/resourcemanager.projectCreator",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.sourcesEditor",
    "roles/securitycenter.sourcesViewer",
    "roles/servicemanagement.admin",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "accessapproval.requests.get",
   "roles": [
    "roles/accessapproval.viewer",
    "roles/accessapproval.approver",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accessapproval.requests.list",
   "roles": [
    "roles/accessapproval.viewer",
    "roles/accessapproval.approver",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "accesscontextmanager.gcpUserAccessBindings.create",
   "roles": [
    "roles/accesscontextmanager.gcpAccessAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.gcpUserAccessBindings.delete",
   "roles": [
    "roles/accesscontextmanager.gcpAccessAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accesscontextmanager.gcpUserAccessBindings.update",
   "roles": [
    "roles/accesscontextmanager.gcpAccessAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.agents.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.agents.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.agents.export",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.agents.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.agents.import",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.agents.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.agents.restore",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.agents.search",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.agents.train",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.agents.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.agents.validate",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.answerrecords.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.answerrecords.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.answerrecords.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.answerrecords.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.callMatchers.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.callMatchers.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.callMatchers.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.contexts.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.contexts.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.contexts.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.contexts.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.contexts.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.conversationDatasets.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/contactcenterinsights.serviceAgent",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.conversationDatasets.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/contactcenterinsights.serviceAgent",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.conversationDatasets.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/contactcenterinsights.serviceAgent",
    "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.conversationDatasets.import",
   "roles": [
    "roles/dialogflow.admin",
    "roles/contactcenterinsights.serviceAgent",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.conversationDatasets.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/contactcenterinsights.serviceAgent",
    "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.conversationModels.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.conversationModels.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.conversationModels.deploy",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.conversationModels.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.conversationModels.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.conversationModels.undeploy",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.conversationProfiles.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.conversationManager",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.conversationProfiles.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.conversationManager",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.conversationProfiles.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.conversationManager",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.conversationProfiles.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.conversationManager",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.conversationProfiles.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.conversationManager",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.conversations.addPhoneNumber",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.conversationManager",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.conversations.complete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.conversationManager",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.conversations.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.conversationManager",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.conversations.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.conversationManager",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.conversations.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.conversationManager",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.documents.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.documents.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.documents.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.documents.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.entityTypes.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.entityTypes.createEntity",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.entityTypes.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.entityTypes.deleteEntity",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.entityTypes.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.entityTypes.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.entityTypes.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.entityTypes.updateEntity",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.environments.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.environments.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.environments.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.environments.getHistory",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.environments.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.environments.lookupHistory",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.environments.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.flows.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.flows.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.flows.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.flows.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.flows.train",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.flows.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.flows.validate",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.fulfillments.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.fulfillments.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.intents.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.intents.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.intents.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.intents.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.intents.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.knowledgeBases.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.knowledgeBases.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.knowledgeBases.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.knowledgeBases.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.messages.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.modelEvaluations.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.modelEvaluations.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.operations.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.pages.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.pages.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.pages.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.pages.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.pages.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.participants.analyzeContent",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.conversationManager",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.participants.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.conversationManager",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.participants.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.conversationManager",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.participants.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.conversationManager",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.participants.suggest",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.conversationManager",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.participants.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.conversationManager",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.phoneNumberOrders.cancel",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.phoneNumberOrders.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.phoneNumberOrders.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.phoneNumberOrders.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.phoneNumberOrders.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.phoneNumbers.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.phoneNumbers.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.phoneNumbers.undelete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.phoneNumbers.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.sessionEntityTypes.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.sessionEntityTypes.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.sessionEntityTypes.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.sessionEntityTypes.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.sessionEntityTypes.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.sessions.detectIntent",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.consoleSimulatorUser",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.sessions.streamingDetectIntent",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.client",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.smartMessagingEntries.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.smartMessagingEntries.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.smartMessagingEntries.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.smartMessagingEntries.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleSmartMessagingAllowlistEditor",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.transitionRouteGroups.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.transitionRouteGroups.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.transitionRouteGroups.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.transitionRouteGroups.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.transitionRouteGroups.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.versions.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.versions.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.versions.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.versions.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.versions.load",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.versions.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.webhooks.create",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.webhooks.delete",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dialogflow.webhooks.get",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.webhooks.list",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/dialogflow.reader",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dialogflow.webhooks.update",
   "roles": [
    "roles/dialogflow.admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudmigration.velostrataendpoints.connect",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudmigration.velostrataconnect",
    "roles/owner"
   ]
  },
  {
   "name": "compute.addresses.create",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.addresses.createInternal",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkUser",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.addresses.delete",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.addresses.deleteInternal",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkUser",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.addresses.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.addresses.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudsecurityscanner.editor",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/websecurityscanner.serviceAgent"
   ]
  },
  {
   "name": "compute.addresses.setLabels",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.addresses.use",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.addresses.useInternal",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkUser",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.diskTypes.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.diskTypes.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.disks.create",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.disks.createSnapshot",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "compute.disks.delete",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.disks.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.disks.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.disks.setLabels",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.disks.update",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.disks.use",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.disks.useReadOnly",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "compute.globalOperations.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgFirewallPolicyUser",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.orgSecurityResourceAdmin",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/compute.xpnAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/compute.orgSecurityPolicyUser",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/file.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/managedidentities.serviceAgent",
    "roles/memcache.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/redis.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/servicenetworking.serviceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "compute.images.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.imageUser",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/computescanning.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.images.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.imageUser",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/computescanning.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.images.useReadOnly",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.imageUser",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/computescanning.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.attachDisk",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.create",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.delete",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataflow.worker",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.detachDisk",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.osLogin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.osAdminLogin",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/computescanning.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/notebooks.admin",
    "roles/osconfig.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.getSerialPortOutput",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.osLogin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.osAdminLogin",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/computescanning.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/osconfig.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.reset",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.setDiskAutoDelete",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataflow.worker",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.setLabels",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.setMachineType",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.setMetadata",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/osconfig.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.setMinCpuPlatform",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.setScheduling",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.setServiceAccount",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.setTags",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.start",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.startWithEncryptionKey",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.stop",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.update",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.updateNetworkInterface",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.updateShieldedInstanceConfig",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.use",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.licenseCodes.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.licenseCodes.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.licenseCodes.update",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.licenseCodes.use",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.licenses.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.licenses.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.machineTypes.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.admin",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.machineTypes.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.networks.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkUser",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/dns.admin",
    "roles/dns.reader",
    "roles/exploreanthos.serviceAgent",
    "roles/file.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/managedidentities.serviceAgent",
    "roles/memcache.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/redis.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/servicenetworking.serviceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "compute.networks.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkUser",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/dns.admin",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/memcache.admin",
    "roles/redis.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/redis.editor",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/servicenetworking.serviceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.networks.use",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkUser",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.networks.useExternalIp",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.nodeGroups.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/compute.admin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.nodeGroups.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/compute.admin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.nodeTemplates.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/compute.admin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.projects.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.osLogin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.packetMirroringAdmin",
    "roles/compute.storageAdmin",
    "roles/compute.networkUser",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkViewer",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgFirewallPolicyUser",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.orgSecurityResourceAdmin",
    "roles/datafusion.serviceAgent",
    "roles/compute.osAdminLogin",
    "roles/compute.networkAdmin",
    "roles/compute.packetMirroringUser",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/compute.xpnAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/compute.orgSecurityPolicyUser",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/notebooks.admin",
    "roles/redis.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/servicenetworking.serviceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionOperations.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/servicenetworking.serviceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regions.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.networkUser",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regions.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.networkUser",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.snapshots.create",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.snapshots.delete",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.snapshots.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.snapshots.setLabels",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.snapshots.useReadOnly",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "compute.subnetworks.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkUser",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/memcache.serviceAgent",
    "roles/notebooks.admin",
    "roles/redis.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/servicenetworking.serviceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "compute.subnetworks.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkUser",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/memcache.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/redis.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/servicenetworking.serviceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "compute.subnetworks.use",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkUser",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.subnetworks.useExternalIp",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.zoneOperations.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.zones.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.networkUser",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/computescanning.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/osconfig.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "compute.zones.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.networkUser",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/computescanning.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/osconfig.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "gkehub.endpoints.connect",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudmigration.velostrataconnect",
    "roles/gkehub.connect",
    "roles/owner"
   ]
  },
  {
   "name": "iam.serviceAccounts.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/iam.serviceAccountCreator",
    "roles/iam.serviceAccountKeyAdmin",
    "roles/iam.serviceAccountDeleter",
    "roles/iam.serviceAccountUser",
    "roles/iam.securityAdmin",
    "roles/ml.serviceAgent",
    "roles/notebooks.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/iam.serviceAccountAdmin",
    "roles/iam.serviceAccountTokenCreator",
    "roles/iam.workloadIdentityUser",
    "roles/owner",
    "roles/pubsub.serviceAgent",
    "roles/viewer",
    "roles/workflows.serviceAgent"
   ]
  },
  {
   "name": "iam.serviceAccounts.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/cloudjobdiscovery.admin",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/iam.serviceAccountCreator",
    "roles/iam.serviceAccountKeyAdmin",
    "roles/iam.serviceAccountDeleter",
    "roles/iam.serviceAccountUser",
    "roles/iam.securityAdmin",
    "roles/ml.serviceAgent",
    "roles/notebooks.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/iam.serviceAccountAdmin",
    "roles/iam.serviceAccountTokenCreator",
    "roles/iam.workloadIdentityUser",
    "roles/owner",
    "roles/pubsub.serviceAgent",
    "roles/viewer"
   ]
  },
  {
   "name": "storage.buckets.create",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/cloudtestservice.testAdmin",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/datafusion.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/cloudasset.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.managementServiceAgent",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/ml.serviceAgent",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.caManager",
    "roles/retail.serviceAgent",
    "roles/storage.admin"
   ]
  },
  {
   "name": "storage.buckets.delete",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/datafusion.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/ml.serviceAgent",
    "roles/owner",
    "roles/storage.admin"
   ]
  },
  {
   "name": "storage.buckets.get",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudoptimization.serviceAgent",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtranslate.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/datafusion.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/cloudasset.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.admin",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataproc.worker",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/documentaicore.serviceAgent",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.managementServiceAgent",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebasestorage.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/retail.serviceAgent",
    "roles/storage.legacyBucketOwner",
    "roles/storage.admin",
    "roles/storage.legacyBucketReader",
    "roles/storage.legacyBucketWriter"
   ]
  },
  {
   "name": "storage.buckets.list",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/datafusion.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/ml.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/storage.admin"
   ]
  },
  {
   "name": "storage.buckets.update",
   "roles": [
    "roles/cloudmigration.inframanager",
    "roles/cloudtestservice.testAdmin",
    "roles/composer.serviceAgent",
    "roles/datafusion.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/ml.serviceAgent",
    "roles/storage.legacyBucketOwner",
    "roles/storage.admin"
   ]
  },
  {
   "name": "cloudprivatecatalog.targets.get",
   "roles": [
    "roles/cloudprivatecatalog.consumer",
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "storage.objects.create",
   "roles": [
    "roles/cloudmigration.storageaccess",
    "roles/cloudoptimization.serviceAgent",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtranslate.serviceAgent",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/datafusion.serviceAgent",
    "roles/datalabeling.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/cloudasset.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.admin",
    "roles/dataflow.serviceAgent",
    "roles/dataflow.worker",
    "roles/dataproc.worker",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/documentaicore.serviceAgent",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasestorage.serviceAgent",
    "roles/mediaasset.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/storage.objectAdmin",
    "roles/retail.serviceAgent",
    "roles/storage.objectCreator",
    "roles/storage.legacyBucketOwner",
    "roles/storage.admin",
    "roles/storage.legacyBucketWriter"
   ]
  },
  {
   "name": "storage.objects.delete",
   "roles": [
    "roles/cloudmigration.storageaccess",
    "roles/cloudoptimization.serviceAgent",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/datafusion.serviceAgent",
    "roles/datalabeling.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/cloudasset.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.worker",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/documentaicore.serviceAgent",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasestorage.serviceAgent",
    "roles/mediaasset.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/storage.objectAdmin",
    "roles/retail.serviceAgent",
    "roles/storage.legacyBucketOwner",
    "roles/storage.admin",
    "roles/storage.legacyBucketWriter"
   ]
  },
  {
   "name": "storage.objects.get",
   "roles": [
    "roles/cloudmigration.storageaccess",
    "roles/cloudoptimization.serviceAgent",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/cloudtranslate.serviceAgent",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/composer.environmentAndStorageObjectViewer",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/datafusion.serviceAgent",
    "roles/datalabeling.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/contactcenterinsights.serviceAgent",
    "roles/containeranalysis.ServiceAgent",
    "roles/containerregistry.ServiceAgent",
    "roles/cloudasset.serviceAgent",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.admin",
    "roles/dataflow.serviceAgent",
    "roles/dataflow.worker",
    "roles/dataproc.hubAgent",
    "roles/dataproc.worker",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dialogflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/documentaicore.serviceAgent",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebasestorage.serviceAgent",
    "roles/mediaasset.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/storage.legacyObjectReader",
    "roles/storage.objectAdmin",
    "roles/retail.serviceAgent",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent",
    "roles/storage.objectViewer",
    "roles/storage.admin",
    "roles/storage.legacyObjectOwner"
   ]
  },
  {
   "name": "storage.objects.list",
   "roles": [
    "roles/cloudmigration.storageaccess",
    "roles/cloudoptimization.serviceAgent",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/cloudtranslate.serviceAgent",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/composer.environmentAndStorageObjectViewer",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/datafusion.serviceAgent",
    "roles/datalabeling.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/contactcenterinsights.serviceAgent",
    "roles/containeranalysis.ServiceAgent",
    "roles/containerregistry.ServiceAgent",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.admin",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataproc.worker",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dialogflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/documentaicore.serviceAgent",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebasestorage.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/ml.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/storage.objectAdmin",
    "roles/retail.serviceAgent",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent",
    "roles/storage.objectViewer",
    "roles/storage.legacyBucketOwner",
    "roles/storage.admin",
    "roles/storage.legacyBucketReader",
    "roles/storage.legacyBucketWriter"
   ]
  },
  {
   "name": "storage.objects.update",
   "roles": [
    "roles/cloudmigration.storageaccess",
    "roles/cloudoptimization.serviceAgent",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/datafusion.serviceAgent",
    "roles/datalabeling.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.worker",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/documentaicore.serviceAgent",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasestorage.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/storage.objectAdmin",
    "roles/retail.serviceAgent",
    "roles/storage.admin",
    "roles/storage.legacyObjectOwner"
   ]
  },
  {
   "name": "appengine.applications.get",
   "roles": [
    "roles/cloudscheduler.admin",
    "roles/cloudscheduler.jobRunner",
    "roles/cloudscheduler.viewer",
    "roles/cloudsecurityscanner.editor",
    "roles/composer.serviceAgent",
    "roles/appengine.serviceAdmin",
    "roles/appengine.appAdmin",
    "roles/appengine.appViewer",
    "roles/appengine.codeViewer",
    "roles/appengine.deployer",
    "roles/datastore.importExportAdmin",
    "roles/datastore.indexAdmin",
    "roles/datastore.owner",
    "roles/datastore.user",
    "roles/datastore.viewer",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.managementServiceAgent",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/websecurityscanner.serviceAgent"
   ]
  },
  {
   "name": "cloudscheduler.jobs.create",
   "roles": [
    "roles/cloudscheduler.admin",
    "roles/editor",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "cloudscheduler.jobs.delete",
   "roles": [
    "roles/cloudscheduler.admin",
    "roles/editor",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "cloudscheduler.jobs.enable",
   "roles": [
    "roles/cloudscheduler.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudscheduler.jobs.fullView",
   "roles": [
    "roles/cloudscheduler.admin",
    "roles/cloudscheduler.jobRunner",
    "roles/cloudscheduler.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudscheduler.jobs.get",
   "roles": [
    "roles/cloudscheduler.admin",
    "roles/cloudscheduler.viewer",
    "roles/editor",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudscheduler.jobs.list",
   "roles": [
    "roles/cloudscheduler.admin",
    "roles/cloudscheduler.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudscheduler.jobs.pause",
   "roles": [
    "roles/cloudscheduler.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudscheduler.jobs.run",
   "roles": [
    "roles/cloudscheduler.admin",
    "roles/cloudscheduler.jobRunner",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudscheduler.jobs.update",
   "roles": [
    "roles/cloudscheduler.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudscheduler.locations.get",
   "roles": [
    "roles/cloudscheduler.admin",
    "roles/cloudscheduler.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudscheduler.locations.list",
   "roles": [
    "roles/cloudscheduler.admin",
    "roles/cloudscheduler.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.associations.create",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.associations.delete",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.associations.get",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.associations.list",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.catalogAssociations.create",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.catalogAssociations.delete",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.catalogAssociations.get",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.catalogAssociations.list",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.catalogs.create",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.catalogs.delete",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.catalogs.get",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.catalogs.getIamPolicy",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.catalogs.list",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.catalogs.setIamPolicy",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.catalogs.undelete",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.catalogs.update",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.producerCatalogs.attachProduct",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.producerCatalogs.create",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.producerCatalogs.delete",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.producerCatalogs.detachProduct",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.producerCatalogs.get",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.producerCatalogs.getIamPolicy",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.producerCatalogs.list",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.producerCatalogs.setIamPolicy",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.producerCatalogs.update",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.products.create",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.products.delete",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.products.get",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.products.getIamPolicy",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.products.list",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.products.setIamPolicy",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.products.update",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.targets.associate",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.targets.unassociate",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "resourcemanager.folders.get",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/browser",
    "roles/resourcemanager.folderCreator",
    "roles/resourcemanager.folderEditor",
    "roles/resourcemanager.folderIamAdmin",
    "roles/securitycenter.automationServiceAgent",
    "roles/resourcemanager.folderViewer",
    "roles/resourcemanager.folderAdmin",
    "roles/securitycenter.controlServiceAgent",
    "roles/resourcemanager.organizationAdmin",
    "roles/securitycenter.serviceAgent",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "resourcemanager.folders.list",
   "roles": [
    "roles/cloudprivatecatalogproducer.admin",
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/cloudprivatecatalogproducer.manager",
    "roles/browser",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/resourcemanager.folderCreator",
    "roles/resourcemanager.folderEditor",
    "roles/securitycenter.automationServiceAgent",
    "roles/resourcemanager.folderViewer",
    "roles/resourcemanager.folderAdmin",
    "roles/securitycenter.controlServiceAgent",
    "roles/resourcemanager.organizationAdmin",
    "roles/securitycenter.serviceAgent",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "iam.serviceAccounts.getAccessToken",
   "roles": [
    "roles/cloudscheduler.serviceAgent",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/cloudtasks.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/bigquerydatatransfer.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/eventarc.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/iam.serviceAccountTokenCreator",
    "roles/iam.workloadIdentityUser",
    "roles/pubsub.serviceAgent",
    "roles/sourcerepo.serviceAgent",
    "roles/workflows.serviceAgent",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "iam.serviceAccounts.getOpenIdToken",
   "roles": [
    "roles/cloudscheduler.serviceAgent",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/cloudtasks.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/iam.serviceAccountTokenCreator",
    "roles/iam.workloadIdentityUser",
    "roles/pubsub.serviceAgent",
    "roles/workflows.serviceAgent",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "logging.logEntries.create",
   "roles": [
    "roles/cloudscheduler.serviceAgent",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/cloudtasks.serviceAgent",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/compute.serviceAgent",
    "roles/bigqueryconnection.serviceAgent",
    "roles/cloudbuild.builds.builder",
    "roles/automlrecommendations.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/bigquerydatatransfer.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/cloudiot.serviceAgent",
    "roles/dataflow.worker",
    "roles/dataproc.hubAgent",
    "roles/dataproc.worker",
    "roles/dialogflow.serviceAgent",
    "roles/editor",
    "roles/logging.logWriter",
    "roles/logging.admin",
    "roles/meshdataplane.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "pubsub.topics.publish",
   "roles": [
    "roles/cloudscheduler.serviceAgent",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/artifactregistry.serviceAgent",
    "roles/container.serviceAgent",
    "roles/containeranalysis.ServiceAgent",
    "roles/containerregistry.ServiceAgent",
    "roles/cloudasset.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/cloudiot.serviceAgent",
    "roles/dialogflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/eventarc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/kuberun.eventsDataPlaneServiceAgent",
    "roles/genomics.serviceAgent",
    "roles/healthcare.serviceAgent",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.publisher",
    "roles/sourcerepo.serviceAgent",
    "roles/securitycenter.notificationServiceAgent",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "gkehub.features.get",
   "roles": [
    "roles/anthosaudit.serviceAgent",
    "roles/anthos.serviceAgent",
    "roles/anthosconfigmanagement.serviceAgent",
    "roles/anthosidentityservice.serviceAgent",
    "roles/anthosservicemesh.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.admin",
    "roles/gkehub.serviceAgent",
    "roles/gkehub.viewer",
    "roles/multiclusteringress.serviceAgent",
    "roles/multiclustermetering.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gkehub.locations.get",
   "roles": [
    "roles/anthosaudit.serviceAgent",
    "roles/anthos.serviceAgent",
    "roles/anthosconfigmanagement.serviceAgent",
    "roles/anthosidentityservice.serviceAgent",
    "roles/anthosservicemesh.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.admin",
    "roles/gkehub.serviceAgent",
    "roles/gkehub.viewer",
    "roles/multiclusteringress.serviceAgent",
    "roles/multiclustermetering.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gkehub.locations.list",
   "roles": [
    "roles/anthosaudit.serviceAgent",
    "roles/anthos.serviceAgent",
    "roles/anthosconfigmanagement.serviceAgent",
    "roles/anthosidentityservice.serviceAgent",
    "roles/anthosservicemesh.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.admin",
    "roles/iam.securityAdmin",
    "roles/gkehub.serviceAgent",
    "roles/gkehub.viewer",
    "roles/multiclusteringress.serviceAgent",
    "roles/multiclustermetering.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gkehub.memberships.get",
   "roles": [
    "roles/anthosaudit.serviceAgent",
    "roles/anthos.serviceAgent",
    "roles/anthosconfigmanagement.serviceAgent",
    "roles/anthosidentityservice.serviceAgent",
    "roles/anthosservicemesh.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.admin",
    "roles/gkehub.serviceAgent",
    "roles/gkehub.viewer",
    "roles/multiclusteringress.serviceAgent",
    "roles/multiclustermetering.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gkehub.memberships.list",
   "roles": [
    "roles/anthosaudit.serviceAgent",
    "roles/anthos.serviceAgent",
    "roles/anthosconfigmanagement.serviceAgent",
    "roles/anthosidentityservice.serviceAgent",
    "roles/anthosservicemesh.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.admin",
    "roles/iam.securityAdmin",
    "roles/gkehub.serviceAgent",
    "roles/gkehub.viewer",
    "roles/multiclusteringress.serviceAgent",
    "roles/multiclustermetering.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "actions.agent.claimContentProvider",
   "roles": [
    "roles/actions.Admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "actions.agent.get",
   "roles": [
    "roles/actions.Admin",
    "roles/actions.Viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "actions.agent.update",
   "roles": [
    "roles/actions.Admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "actions.agentVersions.create",
   "roles": [
    "roles/actions.Admin",
    "roles/dialogflow.consoleAgentEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "actions.agentVersions.delete",
   "roles": [
    "roles/actions.Admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "actions.agentVersions.deploy",
   "roles": [
    "roles/actions.Admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "actions.agentVersions.get",
   "roles": [
    "roles/actions.Admin",
    "roles/actions.Viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "actions.agentVersions.list",
   "roles": [
    "roles/actions.Admin",
    "roles/actions.Viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebase.projects.get",
   "roles": [
    "roles/actions.Admin",
    "roles/actions.Viewer",
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/composer.serviceAgent",
    "roles/cloudconfig.viewer",
    "roles/datafusion.serviceAgent",
    "roles/cloudconfig.admin",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/firebase.analyticsAdmin",
    "roles/editor",
    "roles/firebase.analyticsViewer",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.managementServiceAgent",
    "roles/firebaseabt.viewer",
    "roles/firebaseauth.admin",
    "roles/firebaseappdistro.viewer",
    "roles/firebase.qualityViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasedatabase.admin",
    "roles/firebase.viewer",
    "roles/firebasehosting.admin",
    "roles/firebasehosting.viewer",
    "roles/firebaseabt.admin",
    "roles/firebaseappdistro.admin",
    "roles/firebaseauth.viewer",
    "roles/firebasecrashlytics.admin",
    "roles/firebasecrashlytics.viewer",
    "roles/firebasenotifications.admin",
    "roles/firebasedatabase.viewer",
    "roles/firebasedynamiclinks.admin",
    "roles/firebasedynamiclinks.viewer",
    "roles/firebasestorage.admin",
    "roles/firebaseinappmessaging.admin",
    "roles/firebaseinappmessaging.viewer",
    "roles/firebaseml.admin",
    "roles/firebaseml.viewer",
    "roles/firebasenotifications.viewer",
    "roles/firebaseperformance.admin",
    "roles/firebaseperformance.viewer",
    "roles/firebasepredictions.admin",
    "roles/firebasepredictions.viewer",
    "roles/ml.serviceAgent",
    "roles/owner",
    "roles/storage.hmacKeyAdmin",
    "roles/viewer",
    "roles/storage.admin"
   ]
  },
  {
   "name": "firebase.projects.update",
   "roles": [
    "roles/actions.Admin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "serviceusage.services.use",
   "roles": [
    "roles/actions.Admin",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/actions.Viewer",
    "roles/aiplatform.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dialogflow.serviceAgent",
    "roles/dlp.admin",
    "roles/dlp.user",
    "roles/dlp.serviceAgent",
    "roles/eventarc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshdataplane.serviceAgent",
    "roles/monitoring.notificationServiceAgent",
    "roles/redis.admin",
    "roles/redis.viewer",
    "roles/owner",
    "roles/redis.editor",
    "roles/serviceusage.serviceUsageConsumer",
    "roles/securedlandingzone.serviceAgent",
    "roles/serviceusage.serviceUsageAdmin",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.settings.get",
   "roles": [
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudprivatecatalogproducer.settings.update",
   "roles": [
    "roles/cloudprivatecatalogproducer.orgAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprofiler.profiles.create",
   "roles": [
    "roles/cloudprofiler.agent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprofiler.profiles.update",
   "roles": [
    "roles/cloudprofiler.agent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudprofiler.profiles.list",
   "roles": [
    "roles/cloudprofiler.user",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "logging.exclusions.get",
   "roles": [
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.exclusions.list",
   "roles": [
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.logEntries.list",
   "roles": [
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/billing.admin",
    "roles/dataproc.hubAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/logging.admin",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/securedlandingzone.serviceAgent",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.logMetrics.get",
   "roles": [
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.logMetrics.list",
   "roles": [
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.logServiceIndexes.list",
   "roles": [
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/composer.serviceAgent",
    "roles/billing.admin",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.logServices.list",
   "roles": [
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/composer.serviceAgent",
    "roles/billing.admin",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.logs.list",
   "roles": [
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/composer.serviceAgent",
    "roles/billing.admin",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.sinks.get",
   "roles": [
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.sinks.list",
   "roles": [
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.usage.get",
   "roles": [
    "roles/accesscontextmanager.vpcScTroubleshooterViewer",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudsupport.accounts.get",
   "roles": [
    "roles/cloudsupport.viewer",
    "roles/cloudsupport.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsupport.accounts.getUserRoles",
   "roles": [
    "roles/cloudsupport.viewer",
    "roles/cloudsupport.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsupport.accounts.list",
   "roles": [
    "roles/cloudsupport.viewer",
    "roles/cloudsupport.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsupport.properties.get",
   "roles": [
    "roles/cloudsupport.viewer",
    "roles/cloudsupport.admin",
    "roles/cloudsupport.techSupportEditor",
    "roles/cloudsupport.techSupportViewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.operations.list",
   "roles": [
    "roles/aiplatform.featurestoreAdmin",
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.annotationSpecs.create",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.annotationSpecs.delete",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.annotationSpecs.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.annotationSpecs.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.annotationSpecs.update",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.annotations.create",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.annotations.delete",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.annotations.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.annotations.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.annotations.update",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.batchPredictionJobs.cancel",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.batchPredictionJobs.create",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.batchPredictionJobs.delete",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.batchPredictionJobs.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.batchPredictionJobs.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.customJobs.cancel",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.customJobs.create",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.customJobs.delete",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.customJobs.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.customJobs.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.dataItems.create",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.dataItems.delete",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.dataItems.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.dataItems.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.dataItems.update",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.dataLabelingJobs.cancel",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.dataLabelingJobs.create",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.dataLabelingJobs.delete",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.dataLabelingJobs.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.dataLabelingJobs.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.datasets.create",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.datasets.delete",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.datasets.export",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.datasets.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.datasets.import",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.datasets.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.datasets.update",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.endpoints.create",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.endpoints.delete",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.endpoints.deploy",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.endpoints.explain",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.endpoints.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.endpoints.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.endpoints.predict",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.endpoints.undeploy",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.endpoints.update",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.hyperparameterTuningJobs.cancel",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.hyperparameterTuningJobs.create",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.hyperparameterTuningJobs.delete",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.hyperparameterTuningJobs.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.hyperparameterTuningJobs.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.locations.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.locations.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.modelEvaluationSlices.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.modelEvaluationSlices.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.modelEvaluations.exportEvaluatedDataItems",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.modelEvaluations.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.modelEvaluations.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.models.delete",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.models.export",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.models.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.models.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.models.upload",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.specialistPools.create",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.specialistPools.delete",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.specialistPools.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.specialistPools.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.specialistPools.update",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.studies.create",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.studies.delete",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.studies.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.studies.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.studies.update",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.trainingPipelines.cancel",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.trainingPipelines.create",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.trainingPipelines.delete",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.trainingPipelines.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.trainingPipelines.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.trials.create",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.trials.delete",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.trials.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.trials.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/aiplatform.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.trials.update",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.user",
    "roles/aiplatform.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "artifactregistry.repositories.downloadArtifacts",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/composer.worker",
    "roles/artifactregistry.reader",
    "roles/artifactregistry.writer",
    "roles/cloudbuild.builds.builder",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/containeranalysis.ServiceAgent",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/ml.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "artifactregistry.repositories.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/composer.worker",
    "roles/artifactregistry.reader",
    "roles/artifactregistry.writer",
    "roles/cloudbuild.builds.builder",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/containeranalysis.ServiceAgent",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/ml.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "artifactregistry.repositories.list",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/composer.worker",
    "roles/artifactregistry.reader",
    "roles/artifactregistry.writer",
    "roles/cloudbuild.builds.builder",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/containeranalysis.ServiceAgent",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/ml.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "artifactregistry.tags.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/composer.worker",
    "roles/artifactregistry.reader",
    "roles/artifactregistry.writer",
    "roles/cloudbuild.builds.builder",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/containeranalysis.ServiceAgent",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/ml.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "artifactregistry.versions.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/composer.worker",
    "roles/artifactregistry.reader",
    "roles/artifactregistry.writer",
    "roles/cloudbuild.builds.builder",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/containeranalysis.ServiceAgent",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/ml.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "bigquery.datasets.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/bigquery.admin",
    "roles/bigquery.metadataViewer",
    "roles/datafusion.serviceAgent",
    "roles/datalabeling.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/bigquery.dataViewer",
    "roles/automlrecommendations.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/contactcenterinsights.serviceAgent",
    "roles/bigquery.user",
    "roles/container.serviceAgent",
    "roles/cloudasset.serviceAgent",
    "roles/datacatalog.admin",
    "roles/datacatalog.viewer",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/ml.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "bigquery.readsessions.create",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/bigquery.admin",
    "roles/bigquery.readSessionUser",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.tables.get",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/bigquery.admin",
    "roles/bigquery.metadataViewer",
    "roles/datafusion.serviceAgent",
    "roles/datalabeling.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/bigquery.dataViewer",
    "roles/automlrecommendations.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/contactcenterinsights.serviceAgent",
    "roles/container.serviceAgent",
    "roles/cloudasset.serviceAgent",
    "roles/datacatalog.admin",
    "roles/datacatalog.viewer",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "bigquery.tables.getData",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/aiplatform.serviceAgent",
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/datalabeling.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/bigquery.dataViewer",
    "roles/automlrecommendations.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "iam.serviceAccounts.implicitDelegation",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/iam.serviceAccountTokenCreator",
    "roles/pubsub.serviceAgent"
   ]
  },
  {
   "name": "iam.serviceAccounts.signBlob",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/iam.serviceAccountTokenCreator",
    "roles/pubsub.serviceAgent",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "iam.serviceAccounts.signJwt",
   "roles": [
    "roles/aiplatform.customCodeServiceAgent",
    "roles/compute.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/iam.serviceAccountTokenCreator",
    "roles/pubsub.serviceAgent"
   ]
  },
  {
   "name": "cloudsecurityscanner.crawledurls.list",
   "roles": [
    "roles/cloudsecurityscanner.runner",
    "roles/cloudsecurityscanner.viewer",
    "roles/cloudsecurityscanner.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "cloudsecurityscanner.scanruns.get",
   "roles": [
    "roles/cloudsecurityscanner.runner",
    "roles/cloudsecurityscanner.viewer",
    "roles/cloudsecurityscanner.editor",
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "cloudsecurityscanner.scanruns.list",
   "roles": [
    "roles/cloudsecurityscanner.runner",
    "roles/cloudsecurityscanner.viewer",
    "roles/cloudsecurityscanner.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "cloudsecurityscanner.scanruns.stop",
   "roles": [
    "roles/cloudsecurityscanner.runner",
    "roles/cloudsecurityscanner.editor",
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudsecurityscanner.scans.get",
   "roles": [
    "roles/cloudsecurityscanner.runner",
    "roles/cloudsecurityscanner.viewer",
    "roles/cloudsecurityscanner.editor",
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "cloudsecurityscanner.scans.list",
   "roles": [
    "roles/cloudsecurityscanner.runner",
    "roles/cloudsecurityscanner.viewer",
    "roles/cloudsecurityscanner.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "cloudsecurityscanner.scans.run",
   "roles": [
    "roles/cloudsecurityscanner.runner",
    "roles/cloudsecurityscanner.editor",
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudsecurityscanner.results.get",
   "roles": [
    "roles/cloudsecurityscanner.viewer",
    "roles/cloudsecurityscanner.editor",
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "cloudsecurityscanner.results.list",
   "roles": [
    "roles/cloudsecurityscanner.viewer",
    "roles/cloudsecurityscanner.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "cloudsecurityscanner.scanruns.getSummary",
   "roles": [
    "roles/cloudsecurityscanner.viewer",
    "roles/cloudsecurityscanner.editor",
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "cloudsql.backupRuns.create",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.backupRuns.delete",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.backupRuns.get",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/cloudsql.viewer",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsql.backupRuns.list",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/cloudsql.viewer",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsql.databases.create",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.databases.delete",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.databases.get",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/cloudsql.viewer",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsql.databases.list",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/cloudsql.viewer",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsql.databases.update",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.addServerCa",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.clone",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.connect",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.client",
    "roles/cloudsql.editor",
    "roles/composer.serviceAgent",
    "roles/bigqueryconnection.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudsql.instances.create",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.delete",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.demoteMaster",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.export",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/cloudsql.viewer",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsql.instances.failover",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.get",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.client",
    "roles/cloudsql.editor",
    "roles/cloudsql.instanceUser",
    "roles/cloudsql.serviceAgent",
    "roles/cloudsql.viewer",
    "roles/composer.serviceAgent",
    "roles/bigqueryconnection.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudsql.instances.import",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.list",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/cloudsql.viewer",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsql.instances.listServerCas",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/cloudsql.viewer",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsql.instances.login",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.instanceUser",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.promoteReplica",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.resetSslConfig",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.restart",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.restoreBackup",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.rotateServerCa",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.startReplica",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.stopReplica",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.truncateLog",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.instances.update",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.sslCerts.create",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.sslCerts.createEphemeral",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.sslCerts.delete",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.sslCerts.get",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/cloudsql.viewer",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsql.sslCerts.list",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/cloudsql.viewer",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsql.users.create",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.users.delete",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsql.users.list",
   "roles": [
    "roles/cloudsql.admin",
    "roles/cloudsql.editor",
    "roles/cloudsql.viewer",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudsql.users.update",
   "roles": [
    "roles/cloudsql.admin",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsupport.accounts.create",
   "roles": [
    "roles/cloudsupport.admin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsupport.accounts.delete",
   "roles": [
    "roles/cloudsupport.admin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsupport.accounts.getIamPolicy",
   "roles": [
    "roles/cloudsupport.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsupport.accounts.setIamPolicy",
   "roles": [
    "roles/cloudsupport.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsupport.accounts.update",
   "roles": [
    "roles/cloudsupport.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsupport.accounts.updateUserRoles",
   "roles": [
    "roles/cloudsupport.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsupport.operations.get",
   "roles": [
    "roles/cloudsupport.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsupport.techCases.create",
   "roles": [
    "roles/cloudsupport.techSupportEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsupport.techCases.escalate",
   "roles": [
    "roles/cloudsupport.techSupportEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudsupport.techCases.get",
   "roles": [
    "roles/cloudsupport.techSupportEditor",
    "roles/cloudsupport.techSupportViewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsupport.techCases.list",
   "roles": [
    "roles/cloudsupport.techSupportEditor",
    "roles/cloudsupport.techSupportViewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsupport.techCases.update",
   "roles": [
    "roles/cloudsupport.techSupportEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtrace.insights.get",
   "roles": [
    "roles/cloudtrace.admin",
    "roles/cloudtrace.user",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtrace.insights.list",
   "roles": [
    "roles/cloudtrace.admin",
    "roles/cloudtrace.user",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtrace.stats.get",
   "roles": [
    "roles/cloudtrace.admin",
    "roles/cloudtrace.user",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtrace.tasks.create",
   "roles": [
    "roles/cloudtrace.admin",
    "roles/cloudtrace.user",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtrace.tasks.delete",
   "roles": [
    "roles/cloudtrace.admin",
    "roles/cloudtrace.user",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtrace.tasks.get",
   "roles": [
    "roles/cloudtrace.admin",
    "roles/cloudtrace.user",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtrace.tasks.list",
   "roles": [
    "roles/cloudtrace.admin",
    "roles/cloudtrace.user",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtrace.traces.get",
   "roles": [
    "roles/cloudtrace.admin",
    "roles/cloudtrace.user",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtrace.traces.list",
   "roles": [
    "roles/cloudtrace.admin",
    "roles/cloudtrace.user",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtrace.traces.patch",
   "roles": [
    "roles/cloudtrace.admin",
    "roles/cloudtrace.agent",
    "roles/editor",
    "roles/kuberun.eventsDataPlaneServiceAgent",
    "roles/meshdataplane.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "artifactregistry.repositories.create",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/composer.worker",
    "roles/artifactregistry.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "artifactregistry.repositories.uploadArtifacts",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/composer.worker",
    "roles/artifactregistry.writer",
    "roles/cloudbuild.builds.builder",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "automl.datasets.export",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.datasets.get",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.datasets.list",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.modelEvaluations.list",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.models.get",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/automl.admin",
    "roles/cloudtranslate.user",
    "roles/cloudtranslate.viewer",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.models.list",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.operations.get",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.tableSpecs.get",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.datasets.create",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/datalabeling.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/contactcenterinsights.serviceAgent",
    "roles/bigquery.user",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/logging.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/owner",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "bigquery.jobs.create",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/bigquery.jobUser",
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/datalabeling.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/contactcenterinsights.serviceAgent",
    "roles/bigquery.user",
    "roles/bigquerydatatransfer.serviceAgent",
    "roles/cloudasset.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/datastudio.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/ml.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "bigquery.jobs.get",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/datalabeling.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/contactcenterinsights.serviceAgent",
    "roles/bigquery.resourceEditor",
    "roles/bigquery.resourceViewer",
    "roles/cloudasset.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/ml.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "bigquery.tables.create",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/datalabeling.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/contactcenterinsights.serviceAgent",
    "roles/container.serviceAgent",
    "roles/cloudasset.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "bigquery.tables.export",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/bigquery.dataViewer",
    "roles/automlrecommendations.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "bigquery.tables.update",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/contactcenterinsights.serviceAgent",
    "roles/container.serviceAgent",
    "roles/cloudasset.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent"
   ]
  },
  {
   "name": "bigquery.tables.updateData",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/contactcenterinsights.serviceAgent",
    "roles/container.serviceAgent",
    "roles/cloudasset.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "bigtable.tables.get",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.tables.list",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.tables.readRows",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/automl.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datalabeling.annotateddatasets.get",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datalabeling.datasets.export",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/datalabeling.admin",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datalabeling.datasets.get",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datalabeling.datasets.list",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datalabeling.operations.get",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "iam.serviceAccounts.actAs",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/eventarc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/iam.serviceAccountUser",
    "roles/osconfig.serviceAgent",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "ml.models.list",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/ml.modelOwner",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.operations.get",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/ml.operationOwner",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.versions.get",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/ml.modelOwner",
    "roles/ml.modelUser",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.versions.list",
   "roles": [
    "roles/aiplatform.serviceAgent",
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/ml.modelOwner",
    "roles/ml.modelUser",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "aiplatform.migratableResources.migrate",
   "roles": [
    "roles/aiplatform.admin",
    "roles/aiplatform.migrator",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "aiplatform.migratableResources.search",
   "roles": [
    "roles/aiplatform.admin",
    "roles/aiplatform.migrator",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudsecurityscanner.scans.create",
   "roles": [
    "roles/cloudsecurityscanner.editor",
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudsecurityscanner.scans.delete",
   "roles": [
    "roles/cloudsecurityscanner.editor",
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudsecurityscanner.scans.update",
   "roles": [
    "roles/cloudsecurityscanner.editor",
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudtasks.locations.get",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.queueAdmin",
    "roles/cloudtasks.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtasks.locations.list",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.queueAdmin",
    "roles/cloudtasks.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtasks.queues.create",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.queueAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtasks.queues.delete",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.queueAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtasks.queues.get",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.queueAdmin",
    "roles/cloudtasks.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtasks.queues.getIamPolicy",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.queueAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtasks.queues.list",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.queueAdmin",
    "roles/cloudtasks.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtasks.queues.pause",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.queueAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtasks.queues.purge",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.queueAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtasks.queues.resume",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.queueAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtasks.queues.setIamPolicy",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.queueAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtasks.queues.update",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.queueAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtasks.tasks.create",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.enqueuer",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtasks.tasks.delete",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.taskDeleter",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtasks.tasks.fullView",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.enqueuer",
    "roles/cloudtasks.taskRunner",
    "roles/cloudtasks.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtasks.tasks.get",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtasks.tasks.list",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtasks.tasks.run",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.taskRunner",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.timeSeries.list",
   "roles": [
    "roles/cloudtasks.admin",
    "roles/cloudtasks.viewer",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/compute.serviceAgent",
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/container.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/dataflow.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/monitoring.admin",
    "roles/monitoring.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/serviceusage.serviceUsageConsumer",
    "roles/serviceusage.serviceUsageViewer",
    "roles/servicemanagement.quotaAdmin",
    "roles/servicemanagement.quotaViewer",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.restoreAdmin",
    "roles/serviceusage.serviceUsageAdmin",
    "roles/retail.serviceAgent",
    "roles/servicemanagement.admin",
    "roles/spanner.viewer",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin"
   ]
  },
  {
   "name": "container.configMaps.get",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.configMaps.list",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.customResourceDefinitions.create",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.customResourceDefinitions.get",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.customResourceDefinitions.list",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/gkehub.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.deployments.get",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.deployments.list",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.events.get",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.events.list",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.namespaces.get",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.namespaces.list",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/multiclusteringress.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.pods.get",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.pods.list",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.services.get",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.services.list",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/multiclusteringress.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.thirdPartyObjects.get",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.thirdPartyObjects.list",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/gkehub.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.thirdPartyObjects.update",
   "roles": [
    "roles/anthosservicemesh.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtestservice.environmentcatalog.get",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtestservice.matrices.create",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtestservice.matrices.get",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtestservice.matrices.update",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtoolresults.executions.create",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtoolresults.executions.get",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtoolresults.executions.list",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtoolresults.executions.update",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtoolresults.histories.create",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtoolresults.histories.get",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtoolresults.histories.list",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtoolresults.settings.create",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtoolresults.settings.get",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtoolresults.settings.update",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtoolresults.steps.create",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtoolresults.steps.get",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtoolresults.steps.list",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtoolresults.steps.update",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "firebase.billingPlans.get",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/firebase.admin",
    "roles/firebase.analyticsAdmin",
    "roles/editor",
    "roles/firebase.analyticsViewer",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebase.clients.get",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/cloudconfig.viewer",
    "roles/cloudconfig.admin",
    "roles/firebase.admin",
    "roles/firebase.analyticsAdmin",
    "roles/editor",
    "roles/firebase.analyticsViewer",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.managementServiceAgent",
    "roles/firebaseabt.viewer",
    "roles/firebaseauth.admin",
    "roles/firebaseappdistro.viewer",
    "roles/firebase.qualityViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasedatabase.admin",
    "roles/firebase.viewer",
    "roles/firebasehosting.admin",
    "roles/firebasehosting.viewer",
    "roles/firebaseabt.admin",
    "roles/firebaseappdistro.admin",
    "roles/firebaseauth.viewer",
    "roles/firebasecrash.symbolMappingsAdmin",
    "roles/firebasecrashlytics.admin",
    "roles/firebasecrashlytics.viewer",
    "roles/firebasenotifications.admin",
    "roles/firebasedatabase.viewer",
    "roles/firebasedynamiclinks.admin",
    "roles/firebasedynamiclinks.viewer",
    "roles/firebasestorage.admin",
    "roles/firebaseinappmessaging.admin",
    "roles/firebaseinappmessaging.viewer",
    "roles/firebaseml.admin",
    "roles/firebaseml.viewer",
    "roles/firebasenotifications.viewer",
    "roles/firebaseperformance.admin",
    "roles/firebaseperformance.viewer",
    "roles/firebasepredictions.admin",
    "roles/firebasepredictions.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebase.clients.list",
   "roles": [
    "roles/cloudtestservice.testAdmin",
    "roles/cloudtestservice.testViewer",
    "roles/cloudconfig.viewer",
    "roles/cloudconfig.admin",
    "roles/firebase.admin",
    "roles/firebase.analyticsAdmin",
    "roles/editor",
    "roles/firebase.analyticsViewer",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebaseabt.viewer",
    "roles/firebaseauth.admin",
    "roles/firebaseappdistro.viewer",
    "roles/firebase.qualityViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasedatabase.admin",
    "roles/firebase.viewer",
    "roles/firebasehosting.admin",
    "roles/firebasehosting.viewer",
    "roles/firebaseabt.admin",
    "roles/firebaseappdistro.admin",
    "roles/firebaseauth.viewer",
    "roles/firebasecrash.symbolMappingsAdmin",
    "roles/firebasecrashlytics.admin",
    "roles/firebasecrashlytics.viewer",
    "roles/firebasenotifications.admin",
    "roles/firebasedatabase.viewer",
    "roles/firebasedynamiclinks.admin",
    "roles/firebasedynamiclinks.viewer",
    "roles/firebasestorage.admin",
    "roles/firebaseinappmessaging.admin",
    "roles/firebaseinappmessaging.viewer",
    "roles/firebaseml.admin",
    "roles/firebaseml.viewer",
    "roles/firebasenotifications.viewer",
    "roles/firebaseperformance.admin",
    "roles/firebaseperformance.viewer",
    "roles/firebasepredictions.admin",
    "roles/firebasepredictions.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "compute.acceleratorTypes.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.acceleratorTypes.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.autoscalers.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.autoscalers.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.autoscalers.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.autoscalers.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.autoscalers.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.backendBuckets.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.backendBuckets.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.backendBuckets.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.backendBuckets.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.backendBuckets.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.backendBuckets.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.backendServices.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.backendServices.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.backendServices.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/websecurityscanner.serviceAgent"
   ]
  },
  {
   "name": "compute.backendServices.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.backendServices.setSecurityPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.backendServices.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.backendServices.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.disks.addResourcePolicies",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.disks.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.disks.removeResourcePolicies",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.disks.resize",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.disks.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.externalVpnGateways.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.externalVpnGateways.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.externalVpnGateways.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.externalVpnGateways.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.externalVpnGateways.setLabels",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.externalVpnGateways.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkUser",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.firewallPolicies.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgFirewallPolicyUser",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/compute.orgSecurityPolicyUser",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.firewallPolicies.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgFirewallPolicyUser",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/compute.orgSecurityPolicyUser",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.firewallPolicies.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgFirewallPolicyUser",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/compute.orgSecurityPolicyUser",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.firewalls.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/compute.admin",
    "roles/compute.securityAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.firewalls.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/compute.admin",
    "roles/compute.securityAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.firewalls.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/container.hostServiceAgentUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.firewalls.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.firewalls.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/compute.admin",
    "roles/compute.securityAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.forwardingRules.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.forwardingRules.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.forwardingRules.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshdataplane.serviceAgent",
    "roles/notebooks.admin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/websecurityscanner.serviceAgent"
   ]
  },
  {
   "name": "compute.forwardingRules.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.forwardingRules.setLabels",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.forwardingRules.setTarget",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.forwardingRules.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalAddresses.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalAddresses.createInternal",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalAddresses.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalAddresses.deleteInternal",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalAddresses.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/servicenetworking.serviceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.globalAddresses.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/servicenetworking.serviceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.globalAddresses.setLabels",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalAddresses.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalForwardingRules.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalForwardingRules.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalForwardingRules.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/meshdataplane.serviceAgent",
    "roles/notebooks.admin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/websecurityscanner.serviceAgent"
   ]
  },
  {
   "name": "compute.globalForwardingRules.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.globalForwardingRules.pscCreate",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalForwardingRules.pscDelete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalForwardingRules.pscGet",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.globalForwardingRules.pscUpdate",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalForwardingRules.setLabels",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalForwardingRules.setTarget",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalForwardingRules.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalNetworkEndpointGroups.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalNetworkEndpointGroups.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalNetworkEndpointGroups.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.globalNetworkEndpointGroups.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.globalNetworkEndpointGroups.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalOperations.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgFirewallPolicyUser",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.orgSecurityResourceAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/compute.xpnAdmin",
    "roles/container.serviceAgent",
    "roles/compute.orgSecurityPolicyUser",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.globalPublicDelegatedPrefixes.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalPublicDelegatedPrefixes.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.globalPublicDelegatedPrefixes.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.globalPublicDelegatedPrefixes.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalPublicDelegatedPrefixes.updatePolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.healthChecks.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.healthChecks.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.healthChecks.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.healthChecks.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.healthChecks.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.healthChecks.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.healthChecks.useReadOnly",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.httpHealthChecks.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.httpHealthChecks.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.httpHealthChecks.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.httpHealthChecks.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.httpHealthChecks.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.httpHealthChecks.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.httpHealthChecks.useReadOnly",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.httpsHealthChecks.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.httpsHealthChecks.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.httpsHealthChecks.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.httpsHealthChecks.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.httpsHealthChecks.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.httpsHealthChecks.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.httpsHealthChecks.useReadOnly",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.images.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.images.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.images.deprecate",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.images.getFromFamily",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.imageUser",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.images.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.images.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.images.setLabels",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.images.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instanceGroupManagers.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceGroupManagers.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceGroupManagers.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.serviceAgent",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceGroupManagers.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceGroupManagers.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataflow.worker",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceGroupManagers.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceGroups.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceGroups.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceGroups.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceGroups.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceGroups.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceGroups.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instanceTemplates.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceTemplates.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceTemplates.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceTemplates.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceTemplates.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instanceTemplates.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instanceTemplates.useReadOnly",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.addAccessConfig",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.addMaintenancePolicies",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.deleteAccessConfig",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.getEffectiveFirewalls",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.getGuestAttributes",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/computescanning.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/osconfig.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.getScreenshot",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.getShieldedInstanceIdentity",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.getShieldedVmIdentity",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.listReferrers",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.instances.osAdminLogin",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.osAdminLogin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.osLogin",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.osLogin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.osAdminLogin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.removeMaintenancePolicies",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.resume",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.setDeletionProtection",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.setMachineResources",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.setShieldedInstanceIntegrityPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.setShieldedVmIntegrityPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.suspend",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.updateAccessConfig",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.updateDisplayDevice",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.updateShieldedVmConfig",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.instances.useReadOnly",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "compute.interconnectAttachments.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.interconnectAttachments.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.interconnectAttachments.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.interconnectAttachments.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.interconnectAttachments.setLabels",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.interconnectAttachments.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.interconnectAttachments.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.interconnectLocations.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.interconnectLocations.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.interconnects.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.interconnects.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.interconnects.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.interconnects.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.interconnects.setLabels",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.interconnects.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.interconnects.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkUser",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.licenseCodes.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.licenseCodes.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.licenses.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.licenses.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.licenses.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.licenses.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.machineImages.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.machineImages.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.machineImages.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.machineImages.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.machineImages.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.machineImages.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.machineImages.useReadOnly",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "compute.networkEndpointGroups.attachNetworkEndpoints",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.networkEndpointGroups.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.networkEndpointGroups.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.networkEndpointGroups.detachNetworkEndpoints",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.networkEndpointGroups.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.networkEndpointGroups.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.networkEndpointGroups.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.networkEndpointGroups.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.networkEndpointGroups.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.networks.access",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkUser",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.user",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "compute.networks.addPeering",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/composer.sharedVpcAgent",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/file.serviceAgent",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/memcache.serviceAgent",
    "roles/redis.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/servicenetworking.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "compute.networks.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "compute.networks.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "compute.networks.getEffectiveFirewalls",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.networks.listPeeringRoutes",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkUser",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/servicenetworking.serviceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.networks.mirror",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.packetMirroringAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.networks.removePeering",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/composer.sharedVpcAgent",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/file.serviceAgent",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/memcache.serviceAgent",
    "roles/redis.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/servicenetworking.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "compute.networks.switchToCustomMode",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.networks.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/file.serviceAgent",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/memcache.serviceAgent",
    "roles/redis.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/servicenetworking.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "compute.networks.updatePeering",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/composer.sharedVpcAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/file.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "compute.networks.updatePolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "compute.projects.setCommonInstanceMetadata",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "compute.publicDelegatedPrefixes.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.publicDelegatedPrefixes.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.publicDelegatedPrefixes.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.publicDelegatedPrefixes.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.publicDelegatedPrefixes.updatePolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/compute.publicIpAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionBackendServices.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionBackendServices.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionBackendServices.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionBackendServices.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionBackendServices.setSecurityPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionBackendServices.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionBackendServices.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionHealthCheckServices.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionHealthCheckServices.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionHealthCheckServices.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionHealthCheckServices.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionHealthCheckServices.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionHealthCheckServices.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionHealthChecks.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionHealthChecks.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionHealthChecks.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionHealthChecks.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionHealthChecks.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionHealthChecks.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionHealthChecks.useReadOnly",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "compute.regionNetworkEndpointGroups.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionNetworkEndpointGroups.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionNetworkEndpointGroups.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionNetworkEndpointGroups.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionNetworkEndpointGroups.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionNotificationEndpoints.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionNotificationEndpoints.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionNotificationEndpoints.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionNotificationEndpoints.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionNotificationEndpoints.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionNotificationEndpoints.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionOperations.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionSslCertificates.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionSslCertificates.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionTargetHttpProxies.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionTargetHttpProxies.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionTargetHttpProxies.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionTargetHttpProxies.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionTargetHttpProxies.setUrlMap",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionTargetHttpProxies.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionTargetHttpsProxies.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionTargetHttpsProxies.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionTargetHttpsProxies.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionTargetHttpsProxies.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionTargetHttpsProxies.setSslCertificates",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionTargetHttpsProxies.setUrlMap",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionTargetHttpsProxies.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionUrlMaps.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionUrlMaps.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionUrlMaps.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionUrlMaps.invalidateCache",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionUrlMaps.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionUrlMaps.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionUrlMaps.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionUrlMaps.validate",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.reservations.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.reservations.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.resourcePolicies.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.resourcePolicies.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.resourcePolicies.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.resourcePolicies.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.resourcePolicies.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.routers.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.routers.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.routers.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/servicenetworking.serviceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.routers.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/servicenetworking.serviceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.routers.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.routers.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.routes.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.routes.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.routes.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/memcache.serviceAgent",
    "roles/notebooks.admin",
    "roles/redis.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "compute.routes.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/file.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/managedidentities.serviceAgent",
    "roles/memcache.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/redis.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/servicenetworking.serviceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "compute.securityPolicies.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/compute.orgSecurityPolicyUser",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.securityPolicies.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/compute.orgSecurityPolicyUser",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.securityPolicies.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/compute.orgSecurityPolicyUser",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.serviceAttachments.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.serviceAttachments.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.serviceAttachments.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.serviceAttachments.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.serviceAttachments.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.snapshots.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.snapshots.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.snapshots.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "compute.sslCertificates.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.sslCertificates.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/websecurityscanner.serviceAgent"
   ]
  },
  {
   "name": "compute.sslPolicies.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.sslPolicies.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.sslPolicies.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.sslPolicies.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.sslPolicies.listAvailableFeatures",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.sslPolicies.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.sslPolicies.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.subnetworks.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "compute.subnetworks.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner",
    "roles/vpcaccess.serviceAgent",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "compute.subnetworks.expandIpCidrRange",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.subnetworks.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/compute.xpnAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.subnetworks.mirror",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.packetMirroringAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.subnetworks.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/compute.xpnAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.subnetworks.setPrivateIpGoogleAccess",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.subnetworks.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetGrpcProxies.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetGrpcProxies.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetGrpcProxies.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.targetGrpcProxies.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.targetGrpcProxies.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetGrpcProxies.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetHttpProxies.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetHttpProxies.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetHttpProxies.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/websecurityscanner.serviceAgent"
   ]
  },
  {
   "name": "compute.targetHttpProxies.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.targetHttpProxies.setUrlMap",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetHttpProxies.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetHttpsProxies.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetHttpsProxies.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetHttpsProxies.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/websecurityscanner.serviceAgent"
   ]
  },
  {
   "name": "compute.targetHttpsProxies.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.targetHttpsProxies.setSslCertificates",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetHttpsProxies.setSslPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetHttpsProxies.setUrlMap",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetHttpsProxies.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetInstances.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetInstances.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetInstances.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.targetInstances.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.targetInstances.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetPools.addHealthCheck",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetPools.addInstance",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetPools.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetPools.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetPools.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.targetPools.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.targetPools.removeHealthCheck",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetPools.removeInstance",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetPools.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetPools.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetSslProxies.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetSslProxies.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetSslProxies.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.targetSslProxies.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.targetSslProxies.setBackendService",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetSslProxies.setProxyHeader",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetSslProxies.setSslCertificates",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetSslProxies.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetTcpProxies.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetTcpProxies.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetTcpProxies.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.targetTcpProxies.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.targetTcpProxies.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetTcpProxies.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetVpnGateways.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetVpnGateways.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetVpnGateways.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.targetVpnGateways.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.targetVpnGateways.setLabels",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.targetVpnGateways.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.urlMaps.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.urlMaps.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.urlMaps.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/websecurityscanner.serviceAgent"
   ]
  },
  {
   "name": "compute.urlMaps.invalidateCache",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.urlMaps.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.urlMaps.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.urlMaps.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.urlMaps.validate",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/notebooks.admin",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.vpnGateways.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.vpnGateways.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.vpnGateways.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.vpnGateways.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.vpnGateways.setLabels",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.vpnGateways.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkUser",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.vpnTunnels.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.vpnTunnels.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.vpnTunnels.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.vpnTunnels.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/firewallinsights.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.vpnTunnels.setLabels",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.zoneOperations.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.admin",
    "roles/compute.instanceAdmin",
    "roles/compute.instanceAdmin.v1",
    "roles/compute.storageAdmin",
    "roles/compute.networkAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/lifesciences.serviceAgent",
    "roles/genomics.serviceAgent",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "monitoring.metricDescriptors.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/apigee.serviceAgent",
    "roles/bigqueryconnection.serviceAgent",
    "roles/datafusion.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.worker",
    "roles/file.serviceAgent",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/monitoring.editor",
    "roles/memcache.serviceAgent",
    "roles/meshdataplane.serviceAgent",
    "roles/healthcare.serviceAgent",
    "roles/monitoring.admin",
    "roles/monitoring.metricWriter",
    "roles/redis.serviceAgent",
    "roles/owner",
    "roles/retail.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "monitoring.metricDescriptors.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/apigee.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/bigqueryconnection.serviceAgent",
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/container.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.worker",
    "roles/file.serviceAgent",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/monitoring.editor",
    "roles/memcache.serviceAgent",
    "roles/meshdataplane.serviceAgent",
    "roles/healthcare.serviceAgent",
    "roles/monitoring.admin",
    "roles/monitoring.metricWriter",
    "roles/monitoring.viewer",
    "roles/redis.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "monitoring.metricDescriptors.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/apigee.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/bigqueryconnection.serviceAgent",
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/container.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.worker",
    "roles/file.serviceAgent",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/monitoring.editor",
    "roles/memcache.serviceAgent",
    "roles/meshdataplane.serviceAgent",
    "roles/healthcare.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/monitoring.admin",
    "roles/monitoring.metricWriter",
    "roles/monitoring.viewer",
    "roles/redis.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "monitoring.monitoredResourceDescriptors.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/apigee.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/bigqueryconnection.serviceAgent",
    "roles/datafusion.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.worker",
    "roles/file.serviceAgent",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/monitoring.editor",
    "roles/memcache.serviceAgent",
    "roles/meshdataplane.serviceAgent",
    "roles/healthcare.serviceAgent",
    "roles/monitoring.admin",
    "roles/monitoring.metricWriter",
    "roles/monitoring.viewer",
    "roles/redis.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "monitoring.monitoredResourceDescriptors.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/apigee.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/bigqueryconnection.serviceAgent",
    "roles/datafusion.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.worker",
    "roles/file.serviceAgent",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/monitoring.editor",
    "roles/memcache.serviceAgent",
    "roles/meshdataplane.serviceAgent",
    "roles/healthcare.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/monitoring.admin",
    "roles/monitoring.metricWriter",
    "roles/monitoring.viewer",
    "roles/redis.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "monitoring.timeSeries.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/apigee.serviceAgent",
    "roles/bigqueryconnection.serviceAgent",
    "roles/datafusion.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.worker",
    "roles/file.serviceAgent",
    "roles/editor",
    "roles/kuberun.eventsDataPlaneServiceAgent",
    "roles/managedidentities.serviceAgent",
    "roles/monitoring.editor",
    "roles/memcache.serviceAgent",
    "roles/meshdataplane.serviceAgent",
    "roles/healthcare.serviceAgent",
    "roles/monitoring.admin",
    "roles/monitoring.metricWriter",
    "roles/redis.serviceAgent",
    "roles/owner",
    "roles/retail.serviceAgent",
    "roles/tpu.serviceAgent"
   ]
  },
  {
   "name": "networksecurity.authorizationPolicies.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.authorizationPolicies.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.authorizationPolicies.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networksecurity.authorizationPolicies.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networksecurity.authorizationPolicies.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networksecurity.authorizationPolicies.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.authorizationPolicies.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.authorizationPolicies.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.clientTlsPolicies.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.clientTlsPolicies.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.clientTlsPolicies.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networksecurity.clientTlsPolicies.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networksecurity.clientTlsPolicies.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networksecurity.clientTlsPolicies.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.clientTlsPolicies.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.clientTlsPolicies.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.locations.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networksecurity.locations.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networksecurity.operations.cancel",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.operations.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.operations.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networksecurity.operations.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networksecurity.serverTlsPolicies.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.serverTlsPolicies.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.serverTlsPolicies.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networksecurity.serverTlsPolicies.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networksecurity.serverTlsPolicies.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networksecurity.serverTlsPolicies.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.serverTlsPolicies.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "networksecurity.serverTlsPolicies.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.endpointConfigSelectors.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.endpointConfigSelectors.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.endpointConfigSelectors.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkservices.endpointConfigSelectors.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkservices.endpointConfigSelectors.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkservices.endpointConfigSelectors.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.endpointConfigSelectors.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.endpointConfigSelectors.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.httpFilters.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.httpFilters.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.httpFilters.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkservices.httpFilters.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkservices.httpFilters.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkservices.httpFilters.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.httpFilters.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.httpFilters.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.httpfilters.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.httpfilters.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.httpfilters.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkservices.httpfilters.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkservices.httpfilters.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkservices.httpfilters.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.httpfilters.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/meshconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.httpfilters.use",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.locations.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkservices.locations.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkservices.operations.cancel",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.operations.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "networkservices.operations.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkservices.operations.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsub.schemas.attach",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsub.schemas.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor"
   ]
  },
  {
   "name": "pubsub.schemas.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor"
   ]
  },
  {
   "name": "pubsub.schemas.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.viewer",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsub.schemas.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsub.schemas.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.viewer",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsub.schemas.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/pubsub.admin"
   ]
  },
  {
   "name": "pubsub.schemas.validate",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor"
   ]
  },
  {
   "name": "pubsub.snapshots.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor"
   ]
  },
  {
   "name": "pubsub.snapshots.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor"
   ]
  },
  {
   "name": "pubsub.snapshots.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.viewer",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsub.snapshots.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/pubsub.admin"
   ]
  },
  {
   "name": "pubsub.snapshots.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.viewer",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsub.snapshots.seek",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/healthcare.serviceAgent",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.subscriber",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsub.snapshots.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/pubsub.admin"
   ]
  },
  {
   "name": "pubsub.snapshots.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor"
   ]
  },
  {
   "name": "pubsub.subscriptions.consume",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/kuberun.eventsDataPlaneServiceAgent",
    "roles/healthcare.serviceAgent",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.subscriber",
    "roles/securedlandingzone.serviceAgent"
   ]
  },
  {
   "name": "pubsub.subscriptions.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/eventarc.serviceAgent",
    "roles/editor",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/securedlandingzone.serviceAgent",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "pubsub.subscriptions.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/eventarc.serviceAgent",
    "roles/editor",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/securedlandingzone.serviceAgent",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "pubsub.subscriptions.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/eventarc.serviceAgent",
    "roles/editor",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/kuberun.eventsDataPlaneServiceAgent",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.viewer",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "pubsub.subscriptions.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/pubsub.admin"
   ]
  },
  {
   "name": "pubsub.subscriptions.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/eventarc.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.viewer",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "pubsub.subscriptions.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/pubsub.admin"
   ]
  },
  {
   "name": "pubsub.subscriptions.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/eventarc.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor"
   ]
  },
  {
   "name": "pubsub.topics.attachSubscription",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/eventarc.serviceAgent",
    "roles/editor",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/healthcare.serviceAgent",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.subscriber",
    "roles/securedlandingzone.serviceAgent",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "pubsub.topics.create",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/container.serviceAgent",
    "roles/containeranalysis.ServiceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/eventarc.serviceAgent",
    "roles/editor",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/securedlandingzone.serviceAgent",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "pubsub.topics.delete",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/eventarc.serviceAgent",
    "roles/editor",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/securedlandingzone.serviceAgent",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "pubsub.topics.detachSubscription",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/securedlandingzone.serviceAgent"
   ]
  },
  {
   "name": "pubsub.topics.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.serviceAgent",
    "roles/containeranalysis.ServiceAgent",
    "roles/datacatalog.admin",
    "roles/cloudfunctions.serviceAgent",
    "roles/datacatalog.viewer",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/eventarc.serviceAgent",
    "roles/editor",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/kuberun.eventsDataPlaneServiceAgent",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.viewer",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "pubsub.topics.getIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/securedlandingzone.serviceAgent"
   ]
  },
  {
   "name": "pubsub.topics.list",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/eventarc.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor",
    "roles/pubsub.viewer",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "pubsub.topics.setIamPolicy",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/securedlandingzone.serviceAgent"
   ]
  },
  {
   "name": "pubsub.topics.update",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/eventarc.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor"
   ]
  },
  {
   "name": "pubsub.topics.updateTag",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/containeranalysis.ServiceAgent",
    "roles/datacatalog.admin",
    "roles/datacatalog.tagEditor",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/pubsub.admin",
    "roles/pubsub.editor"
   ]
  },
  {
   "name": "servicenetworking.operations.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/servicenetworking.networksAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "servicenetworking.services.addPeering",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/owner",
    "roles/servicenetworking.networksAdmin"
   ]
  },
  {
   "name": "servicenetworking.services.get",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkUser",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/servicenetworking.networksAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "trafficdirector.networks.getConfigs",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/trafficdirector.client"
   ]
  },
  {
   "name": "trafficdirector.networks.reportMetrics",
   "roles": [
    "roles/cloudtpu.serviceAgent",
    "roles/composer.serviceAgent",
    "roles/compute.networkViewer",
    "roles/datafusion.serviceAgent",
    "roles/compute.networkAdmin",
    "roles/container.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/trafficdirector.client"
   ]
  },
  {
   "name": "apigateway.apiconfigs.create",
   "roles": [
    "roles/apigateway.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigateway.apiconfigs.delete",
   "roles": [
    "roles/apigateway.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigateway.apiconfigs.get",
   "roles": [
    "roles/apigateway.admin",
    "roles/apigateway.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigateway.apiconfigs.getIamPolicy",
   "roles": [
    "roles/apigateway.admin",
    "roles/apigateway.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigateway.apiconfigs.list",
   "roles": [
    "roles/apigateway.admin",
    "roles/apigateway.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigateway.apiconfigs.setIamPolicy",
   "roles": [
    "roles/apigateway.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "apigateway.apiconfigs.update",
   "roles": [
    "roles/apigateway.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigateway.apis.create",
   "roles": [
    "roles/apigateway.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigateway.apis.delete",
   "roles": [
    "roles/apigateway.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigateway.apis.get",
   "roles": [
    "roles/apigateway.admin",
    "roles/apigateway.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigateway.apis.getIamPolicy",
   "roles": [
    "roles/apigateway.admin",
    "roles/apigateway.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigateway.apis.list",
   "roles": [
    "roles/apigateway.admin",
    "roles/apigateway.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigateway.apis.setIamPolicy",
   "roles": [
    "roles/apigateway.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "apigateway.apis.update",
   "roles": [
    "roles/apigateway.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigateway.gateways.create",
   "roles": [
    "roles/apigateway.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigateway.gateways.delete",
   "roles": [
    "roles/apigateway.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigateway.gateways.get",
   "roles": [
    "roles/apigateway.admin",
    "roles/apigateway.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigateway.gateways.getIamPolicy",
   "roles": [
    "roles/apigateway.admin",
    "roles/apigateway.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigateway.gateways.list",
   "roles": [
    "roles/apigateway.admin",
    "roles/apigateway.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigateway.gateways.setIamPolicy",
   "roles": [
    "roles/apigateway.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "apigateway.gateways.update",
   "roles": [
    "roles/apigateway.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigateway.locations.get",
   "roles": [
    "roles/apigateway.admin",
    "roles/apigateway.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigateway.locations.list",
   "roles": [
    "roles/apigateway.admin",
    "roles/apigateway.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigateway.operations.cancel",
   "roles": [
    "roles/apigateway.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigateway.operations.delete",
   "roles": [
    "roles/apigateway.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigateway.operations.get",
   "roles": [
    "roles/apigateway.admin",
    "roles/apigateway.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigateway.operations.list",
   "roles": [
    "roles/apigateway.admin",
    "roles/apigateway.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.models.predict",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/automl.admin",
    "roles/cloudtranslate.user",
    "roles/automl.predictor",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/documentaicore.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtranslate.generalModels.batchPredict",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/cloudtranslate.user",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtranslate.generalModels.get",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/cloudtranslate.user",
    "roles/cloudtranslate.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtranslate.generalModels.predict",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/cloudtranslate.user",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtranslate.glossaries.batchPredict",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/cloudtranslate.user",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtranslate.glossaries.create",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtranslate.glossaries.delete",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtranslate.glossaries.get",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/cloudtranslate.user",
    "roles/cloudtranslate.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtranslate.glossaries.list",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/cloudtranslate.user",
    "roles/cloudtranslate.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtranslate.glossaries.predict",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/cloudtranslate.user",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtranslate.languageDetectionModels.predict",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/cloudtranslate.user",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtranslate.locations.get",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/cloudtranslate.user",
    "roles/cloudtranslate.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtranslate.locations.list",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/cloudtranslate.user",
    "roles/cloudtranslate.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtranslate.operations.cancel",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtranslate.operations.delete",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudtranslate.operations.get",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/cloudtranslate.user",
    "roles/cloudtranslate.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtranslate.operations.list",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/cloudtranslate.user",
    "roles/cloudtranslate.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudtranslate.operations.wait",
   "roles": [
    "roles/cloudtranslate.admin",
    "roles/cloudtranslate.editor",
    "roles/cloudtranslate.user",
    "roles/cloudtranslate.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "assuredworkloads.operations.get",
   "roles": [
    "roles/assuredworkloads.reader",
    "roles/assuredworkloads.admin",
    "roles/assuredworkloads.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "assuredworkloads.operations.list",
   "roles": [
    "roles/assuredworkloads.reader",
    "roles/assuredworkloads.admin",
    "roles/assuredworkloads.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "assuredworkloads.workload.get",
   "roles": [
    "roles/assuredworkloads.reader",
    "roles/assuredworkloads.admin",
    "roles/assuredworkloads.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "assuredworkloads.workload.list",
   "roles": [
    "roles/assuredworkloads.reader",
    "roles/assuredworkloads.admin",
    "roles/assuredworkloads.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "composer.environments.create",
   "roles": [
    "roles/composer.admin",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "composer.environments.delete",
   "roles": [
    "roles/composer.admin",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "composer.environments.get",
   "roles": [
    "roles/composer.admin",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/composer.environmentAndStorageObjectViewer",
    "roles/composer.user",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "composer.environments.list",
   "roles": [
    "roles/composer.admin",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/composer.environmentAndStorageObjectViewer",
    "roles/composer.user",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "composer.environments.update",
   "roles": [
    "roles/composer.admin",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "composer.imageversions.list",
   "roles": [
    "roles/composer.admin",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/composer.environmentAndStorageObjectViewer",
    "roles/composer.user",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "composer.operations.delete",
   "roles": [
    "roles/composer.admin",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "composer.operations.get",
   "roles": [
    "roles/composer.admin",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/composer.environmentAndStorageObjectViewer",
    "roles/composer.user",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "composer.operations.list",
   "roles": [
    "roles/composer.admin",
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/composer.environmentAndStorageObjectViewer",
    "roles/composer.user",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudkms.cryptoKeys.create",
   "roles": [
    "roles/assuredworkloads.serviceAgent",
    "roles/cloudkms.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudkms.keyRings.create",
   "roles": [
    "roles/assuredworkloads.serviceAgent",
    "roles/cloudkms.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "serviceusage.services.enable",
   "roles": [
    "roles/assuredworkloads.serviceAgent",
    "roles/consumerprocurement.entitlementManager",
    "roles/cloudfunctions.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/firebase.sdkProvisioningServiceAgent",
    "roles/monitoring.editor",
    "roles/firebasemods.serviceAgent",
    "roles/monitoring.admin",
    "roles/owner",
    "roles/servicemanagement.quotaAdmin",
    "roles/stackdriver.accounts.editor",
    "roles/securitycenter.automationServiceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/serviceusage.serviceUsageAdmin"
   ]
  },
  {
   "name": "storage.objects.getIamPolicy",
   "roles": [
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/datafusion.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/containerregistry.ServiceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.worker",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebasestorage.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/ml.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/storage.objectAdmin",
    "roles/storage.admin",
    "roles/storage.legacyObjectOwner"
   ]
  },
  {
   "name": "storage.objects.setIamPolicy",
   "roles": [
    "roles/composer.environmentAndStorageObjectAdmin",
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/datafusion.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.worker",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/iam.securityAdmin",
    "roles/ml.serviceAgent",
    "roles/storage.objectAdmin",
    "roles/storage.admin",
    "roles/storage.legacyObjectOwner"
   ]
  },
  {
   "name": "automl.annotationSpecs.create",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.annotationSpecs.delete",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.annotationSpecs.get",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.annotationSpecs.list",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.annotationSpecs.update",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.annotations.approve",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.annotations.create",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.annotations.list",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.annotations.manipulate",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.annotations.reject",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.columnSpecs.get",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.columnSpecs.list",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.columnSpecs.update",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.datasets.create",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.datasets.delete",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.datasets.getIamPolicy",
   "roles": [
    "roles/automl.admin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.datasets.import",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.datasets.setIamPolicy",
   "roles": [
    "roles/automl.admin",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.datasets.update",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.examples.delete",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.examples.get",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.examples.list",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.humanAnnotationTasks.create",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.humanAnnotationTasks.delete",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.humanAnnotationTasks.get",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.humanAnnotationTasks.list",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.locations.get",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.locations.getIamPolicy",
   "roles": [
    "roles/automl.admin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.locations.list",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.locations.setIamPolicy",
   "roles": [
    "roles/automl.admin",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.modelEvaluations.create",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.modelEvaluations.get",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.models.create",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.models.delete",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.models.deploy",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.models.export",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.models.getIamPolicy",
   "roles": [
    "roles/automl.admin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.models.setIamPolicy",
   "roles": [
    "roles/automl.admin",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.models.undeploy",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.operations.cancel",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.operations.delete",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automl.operations.list",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.tableSpecs.list",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.viewer",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "automl.tableSpecs.update",
   "roles": [
    "roles/automl.admin",
    "roles/datalabeling.serviceAgent",
    "roles/automl.editor",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.apiproductattributes.createOrUpdateAll",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.apiproductattributes.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.apiproductattributes.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.developerAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.apiproductattributes.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.developerAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.apiproductattributes.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.apiproducts.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.apiproducts.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.apiproducts.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.developerAdmin",
    "roles/apigee.serviceAgent",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.apiproducts.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.developerAdmin",
    "roles/apigee.serviceAgent",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.apiproducts.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.appkeys.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.appkeys.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.appkeys.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.appkeys.manage",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.apps.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.serviceAgent",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.apps.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.caches.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.caches.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.canaryevaluations.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.serviceAgent",
    "roles/apigee.runtimeAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.canaryevaluations.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.serviceAgent",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.runtimeAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.datacollectors.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.developerAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.datacollectors.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.developerAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.datacollectors.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.developerAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.datacollectors.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.developerAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.datacollectors.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.developerAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.datastores.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.datastores.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.datastores.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.datastores.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.datastores.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.deployments.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.deployments.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.deployments.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.deployments.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.deployments.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.developerappattributes.createOrUpdateAll",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.developerappattributes.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.developerappattributes.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.developerappattributes.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.developerappattributes.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.developerapps.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.developerapps.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.developerapps.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.serviceAgent",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.developerapps.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.serviceAgent",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.developerapps.manage",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.developerattributes.createOrUpdateAll",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.developerattributes.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.developerattributes.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.developerattributes.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.developerattributes.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.developers.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.developers.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.developers.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.serviceAgent",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.developers.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.developers.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.envgroupattachments.create",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.envgroupattachments.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.envgroupattachments.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.envgroupattachments.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.envgroups.create",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.envgroups.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.envgroups.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.envgroups.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.envgroups.update",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.environments.create",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.environments.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.environments.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.developerAdmin",
    "roles/apigee.serviceAgent",
    "roles/apigee.synchronizerManager",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.environments.getDataLocation",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsAgent",
    "roles/apigee.serviceAgent",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.environments.getIamPolicy",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.environments.getStats",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.developerAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.environments.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.environments.manageRuntime",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.serviceAgent",
    "roles/apigee.synchronizerManager",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.environments.setIamPolicy",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.environments.update",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.exports.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.exports.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.exports.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.flowhooks.attachSharedFlow",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.flowhooks.detachSharedFlow",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.flowhooks.getSharedFlow",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.flowhooks.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.hostqueries.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.hostqueries.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.hostqueries.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.hoststats.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.developerAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.ingressconfigs.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.serviceAgent",
    "roles/apigee.synchronizerManager",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.runtimeAgent",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.instanceattachments.create",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.instanceattachments.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.instanceattachments.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.instanceattachments.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.instances.create",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.instances.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.instances.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.instances.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.instances.reportStatus",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.serviceAgent",
    "roles/apigee.runtimeAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.keystorealiases.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.keystorealiases.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.keystorealiases.exportCertificate",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.keystorealiases.generateCSR",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.keystorealiases.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.keystorealiases.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.keystorealiases.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.keystores.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.keystores.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.keystores.export",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.keystores.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.keystores.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.keyvaluemaps.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.keyvaluemaps.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.keyvaluemaps.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.maskconfigs.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.maskconfigs.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.operations.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.serviceAgent",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.runtimeAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.operations.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.serviceAgent",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.runtimeAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.organizations.create",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.organizations.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.organizations.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.developerAdmin",
    "roles/apigee.serviceAgent",
    "roles/apigee.portalAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.organizations.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.developerAdmin",
    "roles/apigee.portalAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.organizations.update",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.portals.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.portalAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.portals.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.portalAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.portals.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.portalAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.portals.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.portalAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.portals.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.portalAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.projects.update",
   "roles": [
    "roles/apigee.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.proxies.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.proxies.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.proxies.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.proxies.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.proxyrevisions.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.proxyrevisions.deploy",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.proxyrevisions.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.serviceAgent",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.proxyrevisions.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.proxyrevisions.undeploy",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.proxyrevisions.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.queries.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.queries.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.queries.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.references.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.references.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.references.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.references.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.references.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.reports.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.reports.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.reports.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.reports.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/apigee.analyticsViewer",
    "roles/apigee.readOnlyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.reports.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.analyticsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.resourcefiles.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.resourcefiles.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.resourcefiles.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.resourcefiles.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.resourcefiles.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.sharedflowrevisions.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.sharedflowrevisions.deploy",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.sharedflowrevisions.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.sharedflowrevisions.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.sharedflowrevisions.undeploy",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.sharedflowrevisions.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.sharedflows.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.sharedflows.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.sharedflows.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.sharedflows.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.targetservers.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.targetservers.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.targetservers.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.targetservers.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.targetservers.update",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.tracesessions.create",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.tracesessions.delete",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apigee.tracesessions.get",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigee.tracesessions.list",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.apiAdmin",
    "roles/apigee.apiReader",
    "roles/apigee.readOnlyAdmin",
    "roles/apigee.environmentAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "resourcemanager.projects.getIamPolicy",
   "roles": [
    "roles/apigee.admin",
    "roles/apigee.developerAdmin",
    "roles/apigee.readOnlyAdmin",
    "roles/compute.xpnAdmin",
    "roles/apigee.environmentAdmin",
    "roles/appengineflex.serviceAgent",
    "roles/browser",
    "roles/cloudfunctions.serviceAgent",
    "roles/firebase.admin",
    "roles/firebase.analyticsAdmin",
    "roles/editor",
    "roles/firebase.analyticsViewer",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.managementServiceAgent",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/iam.organizationRoleAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/iam.organizationRoleViewer",
    "roles/iam.roleAdmin",
    "roles/iam.roleViewer",
    "roles/owner",
    "roles/securitycenter.automationServiceAgent",
    "roles/viewer",
    "roles/resourcemanager.folderAdmin",
    "roles/securitycenter.controlServiceAgent",
    "roles/resourcemanager.organizationAdmin",
    "roles/resourcemanager.projectIamAdmin",
    "roles/securitycenter.serviceAgent",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "assuredworkloads.workload.create",
   "roles": [
    "roles/assuredworkloads.admin",
    "roles/assuredworkloads.editor"
   ]
  },
  {
   "name": "assuredworkloads.workload.delete",
   "roles": [
    "roles/assuredworkloads.admin",
    "roles/assuredworkloads.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "assuredworkloads.workload.update",
   "roles": [
    "roles/assuredworkloads.admin",
    "roles/assuredworkloads.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "orgpolicy.policy.get",
   "roles": [
    "roles/assuredworkloads.admin",
    "roles/assuredworkloads.editor",
    "roles/composer.serviceAgent",
    "roles/editor",
    "roles/orgpolicy.policyAdmin",
    "roles/orgpolicy.policyViewer",
    "roles/owner",
    "roles/resourcemanager.folderCreator",
    "roles/resourcemanager.folderEditor",
    "roles/viewer",
    "roles/resourcemanager.folderViewer",
    "roles/resourcemanager.folderAdmin",
    "roles/securitycenter.controlServiceAgent",
    "roles/resourcemanager.organizationAdmin",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "orgpolicy.policy.set",
   "roles": [
    "roles/assuredworkloads.admin",
    "roles/assuredworkloads.editor",
    "roles/orgpolicy.policyAdmin"
   ]
  },
  {
   "name": "resourcemanager.projects.create",
   "roles": [
    "roles/assuredworkloads.admin",
    "roles/assuredworkloads.editor",
    "roles/resourcemanager.projectCreator"
   ]
  },
  {
   "name": "appengine.applications.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.appAdmin",
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "appengine.instances.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.serviceAdmin",
    "roles/appengine.appAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "appengine.instances.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.serviceAdmin",
    "roles/appengine.appAdmin",
    "roles/appengine.appViewer",
    "roles/appengine.codeViewer",
    "roles/appengine.deployer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "appengine.instances.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.serviceAdmin",
    "roles/appengine.appAdmin",
    "roles/appengine.appViewer",
    "roles/appengine.codeViewer",
    "roles/appengine.deployer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "appengine.operations.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.serviceAdmin",
    "roles/appengine.appAdmin",
    "roles/appengine.appViewer",
    "roles/appengine.codeViewer",
    "roles/appengine.deployer",
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "appengine.operations.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.serviceAdmin",
    "roles/appengine.appAdmin",
    "roles/appengine.appViewer",
    "roles/appengine.codeViewer",
    "roles/appengine.deployer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "appengine.runtimes.actAsAdmin",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.appAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "appengine.services.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.serviceAdmin",
    "roles/appengine.appAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "appengine.services.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.serviceAdmin",
    "roles/appengine.appAdmin",
    "roles/appengine.appViewer",
    "roles/appengine.codeViewer",
    "roles/appengine.deployer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "appengine.services.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.serviceAdmin",
    "roles/appengine.appAdmin",
    "roles/appengine.appViewer",
    "roles/appengine.codeViewer",
    "roles/appengine.deployer",
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "appengine.services.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.serviceAdmin",
    "roles/appengine.appAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "appengine.versions.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.appAdmin",
    "roles/appengine.deployer",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "appengine.versions.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.serviceAdmin",
    "roles/appengine.appAdmin",
    "roles/appengine.deployer",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "appengine.versions.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.serviceAdmin",
    "roles/appengine.appAdmin",
    "roles/appengine.appViewer",
    "roles/appengine.codeViewer",
    "roles/appengine.deployer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "appengine.versions.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.serviceAdmin",
    "roles/appengine.appAdmin",
    "roles/appengine.appViewer",
    "roles/appengine.codeViewer",
    "roles/appengine.deployer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "appengine.versions.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengine.serviceAdmin",
    "roles/appengine.appAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "artifactregistry.repositories.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/artifactregistry.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudnotifications.activities.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/billing.admin",
    "roles/dataflow.serviceAgent",
    "roles/errorreporting.admin",
    "roles/errorreporting.user",
    "roles/errorreporting.viewer",
    "roles/firebase.admin",
    "roles/firebase.analyticsAdmin",
    "roles/editor",
    "roles/firebase.analyticsViewer",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/monitoring.admin",
    "roles/monitoring.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "container.apiServices.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.apiServices.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.apiServices.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.apiServices.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.apiServices.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.apiServices.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.apiServices.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.auditSinks.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.auditSinks.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.auditSinks.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.auditSinks.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.auditSinks.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.backendConfigs.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.backendConfigs.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.backendConfigs.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.backendConfigs.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/multiclusteringress.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.backendConfigs.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.bindings.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.bindings.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.bindings.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.bindings.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.bindings.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.certificateSigningRequests.approve",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.certificateSigningRequests.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.certificateSigningRequests.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.certificateSigningRequests.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.certificateSigningRequests.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.certificateSigningRequests.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.certificateSigningRequests.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.certificateSigningRequests.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.clusterRoleBindings.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.clusterRoleBindings.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.clusterRoleBindings.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.clusterRoleBindings.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.clusterRoleBindings.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.clusterRoles.bind",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.clusterRoles.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.clusterRoles.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.clusterRoles.escalate",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.clusterRoles.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.clusterRoles.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.clusterRoles.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.clusters.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.clusterAdmin",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.clusters.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.clusterAdmin",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.clusters.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.clusterAdmin",
    "roles/container.admin",
    "roles/container.clusterViewer",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.clusters.getCredentials",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "container.clusters.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.clusterAdmin",
    "roles/container.admin",
    "roles/container.clusterViewer",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.clusters.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.clusterAdmin",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.componentStatuses.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.componentStatuses.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.configMaps.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.configMaps.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.configMaps.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.controllerRevisions.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "container.controllerRevisions.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "container.controllerRevisions.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.controllerRevisions.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.controllerRevisions.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "container.cronJobs.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.cronJobs.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.cronJobs.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.cronJobs.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.cronJobs.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.cronJobs.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.cronJobs.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.csiDrivers.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.csiDrivers.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.csiDrivers.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.csiDrivers.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.csiDrivers.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.csiNodeInfos.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.csiNodeInfos.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.csiNodeInfos.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.csiNodeInfos.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.csiNodeInfos.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.csiNodes.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.csiNodes.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.csiNodes.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.csiNodes.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.csiNodes.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.customResourceDefinitions.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.customResourceDefinitions.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.customResourceDefinitions.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.customResourceDefinitions.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.daemonSets.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.daemonSets.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.daemonSets.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.daemonSets.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.daemonSets.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.daemonSets.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.daemonSets.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.deployments.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.deployments.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.deployments.getScale",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.deployments.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.deployments.rollback",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.deployments.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.deployments.updateScale",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.deployments.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.endpointSlices.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.endpointSlices.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.endpointSlices.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.endpointSlices.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.endpointSlices.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.endpoints.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.endpoints.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.endpoints.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.endpoints.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.endpoints.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.events.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.events.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.events.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.frontendConfigs.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.frontendConfigs.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.frontendConfigs.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.frontendConfigs.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.frontendConfigs.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.horizontalPodAutoscalers.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.horizontalPodAutoscalers.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.horizontalPodAutoscalers.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.horizontalPodAutoscalers.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.horizontalPodAutoscalers.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.horizontalPodAutoscalers.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.horizontalPodAutoscalers.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.hostServiceAgent.use",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.hostServiceAgentUser",
    "roles/container.admin",
    "roles/container.serviceAgent"
   ]
  },
  {
   "name": "container.ingresses.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.ingresses.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.ingresses.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.ingresses.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.ingresses.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.ingresses.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.ingresses.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.initializerConfigurations.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.initializerConfigurations.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.initializerConfigurations.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.initializerConfigurations.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.initializerConfigurations.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.jobs.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.jobs.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.jobs.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.jobs.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.jobs.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.jobs.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.jobs.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.leases.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.leases.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.leases.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.leases.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.leases.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.limitRanges.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.limitRanges.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.limitRanges.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.limitRanges.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.limitRanges.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.localSubjectAccessReviews.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.localSubjectAccessReviews.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "container.managedCertificates.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.managedCertificates.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.managedCertificates.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.managedCertificates.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.managedCertificates.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.mutatingWebhookConfigurations.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "container.mutatingWebhookConfigurations.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "container.mutatingWebhookConfigurations.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.mutatingWebhookConfigurations.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.mutatingWebhookConfigurations.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "container.namespaces.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.namespaces.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.namespaces.finalize",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.namespaces.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.namespaces.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.namespaces.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.networkPolicies.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.networkPolicies.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.networkPolicies.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.networkPolicies.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.networkPolicies.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.nodes.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.nodes.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.nodes.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/networkmanagement.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.nodes.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.nodes.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.nodes.proxy",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.nodes.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.nodes.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.operations.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.clusterAdmin",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.operations.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.clusterAdmin",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.persistentVolumeClaims.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.persistentVolumeClaims.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.persistentVolumeClaims.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.persistentVolumeClaims.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.persistentVolumeClaims.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.persistentVolumeClaims.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.persistentVolumeClaims.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.persistentVolumes.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.persistentVolumes.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.persistentVolumes.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.persistentVolumes.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.persistentVolumes.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.persistentVolumes.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.persistentVolumes.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.petSets.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.petSets.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.petSets.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.petSets.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.petSets.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.petSets.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.podDisruptionBudgets.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.podDisruptionBudgets.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.podDisruptionBudgets.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.podDisruptionBudgets.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.podDisruptionBudgets.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.podDisruptionBudgets.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.podDisruptionBudgets.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.podPresets.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.podPresets.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.podPresets.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.podPresets.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.podPresets.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.podSecurityPolicies.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "container.podSecurityPolicies.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "container.podSecurityPolicies.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.podSecurityPolicies.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.podSecurityPolicies.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "container.podSecurityPolicies.use",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "container.podTemplates.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.podTemplates.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.podTemplates.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.podTemplates.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.podTemplates.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.pods.attach",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.pods.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.pods.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.pods.evict",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.pods.exec",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.pods.getLogs",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "container.pods.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.pods.initialize",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.pods.portForward",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.pods.proxy",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.pods.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.pods.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.priorityClasses.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.priorityClasses.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.priorityClasses.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.priorityClasses.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.priorityClasses.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.replicaSets.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.replicaSets.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.replicaSets.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.replicaSets.getScale",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.replicaSets.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.replicaSets.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.replicaSets.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.replicaSets.updateScale",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.replicaSets.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.replicationControllers.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.replicationControllers.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.replicationControllers.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.replicationControllers.getScale",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.replicationControllers.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.replicationControllers.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.replicationControllers.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.replicationControllers.updateScale",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.replicationControllers.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.resourceQuotas.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.resourceQuotas.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.resourceQuotas.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.resourceQuotas.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.resourceQuotas.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.resourceQuotas.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.resourceQuotas.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.roleBindings.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.roleBindings.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.roleBindings.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.roleBindings.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.roleBindings.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.roles.bind",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.roles.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.roles.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.roles.escalate",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.roles.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.roles.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.roles.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.runtimeClasses.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.runtimeClasses.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.runtimeClasses.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.runtimeClasses.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.runtimeClasses.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.scheduledJobs.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.scheduledJobs.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.scheduledJobs.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.scheduledJobs.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.scheduledJobs.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.scheduledJobs.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.secrets.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.secrets.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.secrets.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.secrets.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.secrets.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.selfSubjectAccessReviews.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "container.selfSubjectAccessReviews.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "container.selfSubjectRulesReviews.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "container.serviceAccounts.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.serviceAccounts.createToken",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.serviceAccounts.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.serviceAccounts.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.serviceAccounts.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.serviceAccounts.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/containerthreatdetection.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.services.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.services.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.services.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.services.proxy",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.services.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.services.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/multiclusteringress.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.statefulSets.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.statefulSets.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.statefulSets.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.statefulSets.getScale",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "container.statefulSets.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.statefulSets.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.statefulSets.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.statefulSets.updateScale",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.statefulSets.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.storageClasses.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.storageClasses.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.storageClasses.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.storageClasses.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.storageClasses.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.storageStates.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.storageStates.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.storageStates.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.storageStates.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "container.storageStates.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.storageStates.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.storageStates.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.storageVersionMigrations.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.storageVersionMigrations.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.storageVersionMigrations.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.storageVersionMigrations.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "container.storageVersionMigrations.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.storageVersionMigrations.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.storageVersionMigrations.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.subjectAccessReviews.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.subjectAccessReviews.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "container.thirdPartyObjects.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.thirdPartyObjects.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.thirdPartyResources.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.thirdPartyResources.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.thirdPartyResources.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.thirdPartyResources.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.thirdPartyResources.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.tokenReviews.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.updateInfos.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.updateInfos.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.updateInfos.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.updateInfos.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.updateInfos.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.validatingWebhookConfigurations.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "container.validatingWebhookConfigurations.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "container.validatingWebhookConfigurations.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.validatingWebhookConfigurations.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.validatingWebhookConfigurations.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "container.volumeAttachments.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.volumeAttachments.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.volumeAttachments.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.volumeAttachments.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.volumeAttachments.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.volumeAttachments.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.volumeAttachments.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.volumeSnapshotClasses.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.volumeSnapshotClasses.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.volumeSnapshotClasses.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.volumeSnapshotClasses.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.volumeSnapshotClasses.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.volumeSnapshotContents.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.volumeSnapshotContents.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.volumeSnapshotContents.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.volumeSnapshotContents.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "container.volumeSnapshotContents.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.volumeSnapshotContents.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.volumeSnapshotContents.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.volumeSnapshots.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.volumeSnapshots.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.volumeSnapshots.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.volumeSnapshots.getStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "container.volumeSnapshots.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/container.viewer",
    "roles/containerthreatdetection.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "container.volumeSnapshots.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "container.volumeSnapshots.updateStatus",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/composer.worker",
    "roles/container.admin",
    "roles/container.developer",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "deploymentmanager.compositeTypes.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeEditor",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "deploymentmanager.compositeTypes.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeEditor",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "deploymentmanager.compositeTypes.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeViewer",
    "roles/deploymentmanager.typeEditor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "deploymentmanager.compositeTypes.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeViewer",
    "roles/deploymentmanager.typeEditor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "deploymentmanager.compositeTypes.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeEditor",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "deploymentmanager.deployments.cancelPreview",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "deploymentmanager.deployments.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "deploymentmanager.deployments.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "deploymentmanager.deployments.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "deploymentmanager.deployments.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "deploymentmanager.deployments.stop",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "deploymentmanager.deployments.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "deploymentmanager.manifests.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "deploymentmanager.manifests.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "deploymentmanager.operations.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeEditor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "deploymentmanager.operations.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "deploymentmanager.resources.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "deploymentmanager.resources.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "deploymentmanager.typeProviders.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeEditor",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "deploymentmanager.typeProviders.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeEditor",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "deploymentmanager.typeProviders.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeViewer",
    "roles/deploymentmanager.typeEditor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "deploymentmanager.typeProviders.getType",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeViewer",
    "roles/deploymentmanager.typeEditor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "deploymentmanager.typeProviders.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeViewer",
    "roles/deploymentmanager.typeEditor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "deploymentmanager.typeProviders.listTypes",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeViewer",
    "roles/deploymentmanager.typeEditor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "deploymentmanager.typeProviders.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeEditor",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "deploymentmanager.types.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeEditor",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "deploymentmanager.types.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeEditor",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "deploymentmanager.types.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeViewer",
    "roles/deploymentmanager.typeEditor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "deploymentmanager.types.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeViewer",
    "roles/deploymentmanager.typeEditor",
    "roles/deploymentmanager.viewer",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "deploymentmanager.types.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/deploymentmanager.editor",
    "roles/deploymentmanager.typeEditor",
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "logging.buckets.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner"
   ]
  },
  {
   "name": "logging.buckets.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner"
   ]
  },
  {
   "name": "logging.buckets.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.buckets.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.buckets.undelete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner"
   ]
  },
  {
   "name": "logging.buckets.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner"
   ]
  },
  {
   "name": "logging.cmekSettings.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "logging.cmekSettings.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner"
   ]
  },
  {
   "name": "logging.exclusions.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner"
   ]
  },
  {
   "name": "logging.exclusions.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner"
   ]
  },
  {
   "name": "logging.exclusions.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner"
   ]
  },
  {
   "name": "logging.locations.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.locations.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.logMetrics.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "logging.logMetrics.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "logging.logMetrics.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "logging.sinks.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner"
   ]
  },
  {
   "name": "logging.sinks.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/kuberun.eventsControlPlaneServiceAgent",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner"
   ]
  },
  {
   "name": "logging.sinks.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner"
   ]
  },
  {
   "name": "logging.views.create",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner"
   ]
  },
  {
   "name": "logging.views.delete",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner"
   ]
  },
  {
   "name": "logging.views.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.views.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.views.update",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.configWriter",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.alertPolicies.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/monitoring.admin",
    "roles/monitoring.alertPolicyEditor",
    "roles/monitoring.alertPolicyViewer",
    "roles/monitoring.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.alertPolicies.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/monitoring.admin",
    "roles/monitoring.alertPolicyEditor",
    "roles/monitoring.alertPolicyViewer",
    "roles/monitoring.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.dashboards.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/monitoring.admin",
    "roles/monitoring.dashboardEditor",
    "roles/monitoring.dashboardViewer",
    "roles/monitoring.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.dashboards.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/monitoring.admin",
    "roles/monitoring.dashboardEditor",
    "roles/monitoring.dashboardViewer",
    "roles/monitoring.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.groups.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/monitoring.admin",
    "roles/monitoring.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.groups.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/monitoring.admin",
    "roles/monitoring.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.notificationChannelDescriptors.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/monitoring.admin",
    "roles/monitoring.notificationChannelEditor",
    "roles/monitoring.notificationChannelViewer",
    "roles/monitoring.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.notificationChannelDescriptors.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/monitoring.admin",
    "roles/monitoring.notificationChannelEditor",
    "roles/monitoring.notificationChannelViewer",
    "roles/monitoring.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.notificationChannels.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/monitoring.admin",
    "roles/monitoring.notificationChannelEditor",
    "roles/monitoring.notificationChannelViewer",
    "roles/monitoring.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.notificationChannels.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/monitoring.admin",
    "roles/monitoring.notificationChannelEditor",
    "roles/monitoring.notificationChannelViewer",
    "roles/monitoring.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.publicWidgets.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/monitoring.admin",
    "roles/monitoring.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.publicWidgets.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/monitoring.admin",
    "roles/monitoring.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.services.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/monitoring.admin",
    "roles/monitoring.servicesEditor",
    "roles/monitoring.servicesViewer",
    "roles/monitoring.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.services.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/monitoring.admin",
    "roles/monitoring.servicesEditor",
    "roles/monitoring.servicesViewer",
    "roles/monitoring.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.slos.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/monitoring.admin",
    "roles/monitoring.servicesEditor",
    "roles/monitoring.servicesViewer",
    "roles/monitoring.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.slos.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/monitoring.admin",
    "roles/monitoring.servicesEditor",
    "roles/monitoring.servicesViewer",
    "roles/monitoring.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.uptimeCheckConfigs.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.uptimeCheckConfigEditor",
    "roles/monitoring.uptimeCheckConfigViewer",
    "roles/healthcare.serviceAgent",
    "roles/monitoring.admin",
    "roles/monitoring.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "monitoring.uptimeCheckConfigs.list",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.uptimeCheckConfigEditor",
    "roles/monitoring.uptimeCheckConfigViewer",
    "roles/healthcare.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/monitoring.admin",
    "roles/monitoring.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "stackdriver.projects.get",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/compute.serviceAgent",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/errorreporting.admin",
    "roles/errorreporting.user",
    "roles/errorreporting.viewer",
    "roles/editor",
    "roles/monitoring.editor",
    "roles/healthcare.serviceAgent",
    "roles/monitoring.admin",
    "roles/monitoring.viewer",
    "roles/owner",
    "roles/stackdriver.accounts.editor",
    "roles/stackdriver.accounts.viewer",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "storage.buckets.getIamPolicy",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/datafusion.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/cloudasset.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.managementServiceAgent",
    "roles/firebase.viewer",
    "roles/firebasestorage.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/ml.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/storage.legacyBucketOwner",
    "roles/storage.admin"
   ]
  },
  {
   "name": "storage.buckets.setIamPolicy",
   "roles": [
    "roles/composer.serviceAgent",
    "roles/datafusion.serviceAgent",
    "roles/appengineflex.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/firebase.managementServiceAgent",
    "roles/iam.securityAdmin",
    "roles/ml.serviceAgent",
    "roles/storage.legacyBucketOwner",
    "roles/storage.admin"
   ]
  },
  {
   "name": "artifactregistry.files.get",
   "roles": [
    "roles/composer.worker",
    "roles/artifactregistry.reader",
    "roles/artifactregistry.writer",
    "roles/cloudbuild.builds.builder",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/containeranalysis.ServiceAgent",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/ml.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "artifactregistry.files.list",
   "roles": [
    "roles/composer.worker",
    "roles/artifactregistry.reader",
    "roles/artifactregistry.writer",
    "roles/cloudbuild.builds.builder",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/containeranalysis.ServiceAgent",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/ml.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "artifactregistry.packages.delete",
   "roles": [
    "roles/composer.worker",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "artifactregistry.packages.get",
   "roles": [
    "roles/composer.worker",
    "roles/artifactregistry.reader",
    "roles/artifactregistry.writer",
    "roles/cloudbuild.builds.builder",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/containeranalysis.ServiceAgent",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/ml.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "artifactregistry.packages.list",
   "roles": [
    "roles/composer.worker",
    "roles/artifactregistry.reader",
    "roles/artifactregistry.writer",
    "roles/cloudbuild.builds.builder",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/containeranalysis.ServiceAgent",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/ml.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "artifactregistry.repositories.deleteArtifacts",
   "roles": [
    "roles/composer.worker",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "artifactregistry.repositories.getIamPolicy",
   "roles": [
    "roles/composer.worker",
    "roles/artifactregistry.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "artifactregistry.repositories.setIamPolicy",
   "roles": [
    "roles/composer.worker",
    "roles/artifactregistry.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "artifactregistry.repositories.update",
   "roles": [
    "roles/composer.worker",
    "roles/artifactregistry.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "artifactregistry.tags.create",
   "roles": [
    "roles/composer.worker",
    "roles/artifactregistry.writer",
    "roles/cloudbuild.builds.builder",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "artifactregistry.tags.delete",
   "roles": [
    "roles/composer.worker",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "artifactregistry.tags.list",
   "roles": [
    "roles/composer.worker",
    "roles/artifactregistry.reader",
    "roles/artifactregistry.writer",
    "roles/cloudbuild.builds.builder",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/containeranalysis.ServiceAgent",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/ml.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "artifactregistry.tags.update",
   "roles": [
    "roles/composer.worker",
    "roles/artifactregistry.writer",
    "roles/cloudbuild.builds.builder",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "artifactregistry.versions.delete",
   "roles": [
    "roles/composer.worker",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "artifactregistry.versions.list",
   "roles": [
    "roles/composer.worker",
    "roles/artifactregistry.reader",
    "roles/artifactregistry.writer",
    "roles/cloudbuild.builds.builder",
    "roles/artifactregistry.admin",
    "roles/artifactregistry.repoAdmin",
    "roles/containeranalysis.ServiceAgent",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/ml.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "cloudbuild.builds.create",
   "roles": [
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/appengineflex.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.builds.editor",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "cloudbuild.builds.get",
   "roles": [
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/appengineflex.serviceAgent",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.builds.editor",
    "roles/cloudbuild.builds.viewer",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "cloudbuild.builds.list",
   "roles": [
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.builds.editor",
    "roles/cloudbuild.builds.viewer",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudbuild.builds.update",
   "roles": [
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.builds.editor",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "containeranalysis.occurrences.create",
   "roles": [
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/computescanning.serviceAgent",
    "roles/containeranalysis.ServiceAgent",
    "roles/containeranalysis.admin",
    "roles/containeranalysis.occurrences.editor",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/osconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "containeranalysis.occurrences.delete",
   "roles": [
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/computescanning.serviceAgent",
    "roles/containeranalysis.ServiceAgent",
    "roles/containeranalysis.admin",
    "roles/containeranalysis.occurrences.editor",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/osconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "containeranalysis.occurrences.get",
   "roles": [
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/computescanning.serviceAgent",
    "roles/binaryauthorization.serviceAgent",
    "roles/containeranalysis.ServiceAgent",
    "roles/containeranalysis.admin",
    "roles/containeranalysis.occurrences.editor",
    "roles/containeranalysis.occurrences.viewer",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/osconfig.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "containeranalysis.occurrences.list",
   "roles": [
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/computescanning.serviceAgent",
    "roles/binaryauthorization.serviceAgent",
    "roles/containeranalysis.ServiceAgent",
    "roles/containeranalysis.admin",
    "roles/containeranalysis.occurrences.editor",
    "roles/containeranalysis.occurrences.viewer",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/osconfig.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "containeranalysis.occurrences.update",
   "roles": [
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/computescanning.serviceAgent",
    "roles/containeranalysis.ServiceAgent",
    "roles/containeranalysis.admin",
    "roles/containeranalysis.occurrences.editor",
    "roles/containerscanning.ServiceAgent",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/osconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "remotebuildexecution.blobs.get",
   "roles": [
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/cloudfunctions.serviceAgent",
    "roles/cloudbuild.builds.editor",
    "roles/cloudbuild.builds.viewer",
    "roles/cloudbuild.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.artifactCreator",
    "roles/remotebuildexecution.artifactAdmin",
    "roles/remotebuildexecution.serviceAgent",
    "roles/remotebuildexecution.artifactViewer",
    "roles/remotebuildexecution.worker",
    "roles/viewer"
   ]
  },
  {
   "name": "source.repos.get",
   "roles": [
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/cloudbuild.serviceAgent",
    "roles/endpointsportal.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/source.reader",
    "roles/viewer",
    "roles/source.admin",
    "roles/source.writer"
   ]
  },
  {
   "name": "source.repos.list",
   "roles": [
    "roles/composer.worker",
    "roles/cloudbuild.builds.builder",
    "roles/cloudbuild.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/source.reader",
    "roles/viewer",
    "roles/source.admin",
    "roles/source.writer"
   ]
  },
  {
   "name": "compute.commitments.create",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.commitments.get",
   "roles": [
    "roles/compute.admin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.commitments.list",
   "roles": [
    "roles/compute.admin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.commitments.updateReservations",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.firewallPolicies.addAssociation",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/compute.orgSecurityPolicyUser",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.firewallPolicies.cloneRules",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.firewallPolicies.copyRules",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.firewallPolicies.create",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.firewallPolicies.delete",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.firewallPolicies.getIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.firewallPolicies.move",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.firewallPolicies.removeAssociation",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/compute.orgSecurityPolicyUser",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.firewallPolicies.setIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.firewallPolicies.update",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalOperations.delete",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalOperations.getIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgFirewallPolicyUser",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.orgSecurityResourceAdmin",
    "roles/compute.viewer",
    "roles/compute.orgSecurityPolicyUser",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.globalOperations.setIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgFirewallPolicyAdmin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.orgSecurityResourceAdmin",
    "roles/compute.orgSecurityPolicyUser",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalPublicDelegatedPrefixes.create",
   "roles": [
    "roles/compute.admin",
    "roles/compute.publicIpAdmin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.globalPublicDelegatedPrefixes.use",
   "roles": [
    "roles/compute.admin",
    "roles/compute.publicIpAdmin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.maintenancePolicies.create",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.maintenancePolicies.delete",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.maintenancePolicies.get",
   "roles": [
    "roles/compute.admin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.maintenancePolicies.getIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.maintenancePolicies.list",
   "roles": [
    "roles/compute.admin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.maintenancePolicies.setIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.maintenancePolicies.use",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.nodeGroups.addNodes",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.nodeGroups.create",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.nodeGroups.delete",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.nodeGroups.deleteNodes",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.nodeGroups.getIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.nodeGroups.setIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.nodeGroups.setNodeTemplate",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.nodeGroups.update",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.nodeTemplates.create",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.nodeTemplates.delete",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.nodeTemplates.get",
   "roles": [
    "roles/compute.admin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.nodeTemplates.getIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.nodeTemplates.setIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.nodeTypes.get",
   "roles": [
    "roles/compute.admin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.nodeTypes.list",
   "roles": [
    "roles/compute.admin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.organizations.administerXpn",
   "roles": [
    "roles/compute.admin",
    "roles/compute.xpnAdmin",
    "roles/notebooks.legacyAdmin"
   ]
  },
  {
   "name": "compute.organizations.disableXpnHost",
   "roles": [
    "roles/compute.admin",
    "roles/compute.xpnAdmin",
    "roles/notebooks.legacyAdmin"
   ]
  },
  {
   "name": "compute.organizations.disableXpnResource",
   "roles": [
    "roles/compute.admin",
    "roles/compute.xpnAdmin",
    "roles/notebooks.legacyAdmin"
   ]
  },
  {
   "name": "compute.organizations.enableXpnHost",
   "roles": [
    "roles/compute.admin",
    "roles/compute.xpnAdmin",
    "roles/notebooks.legacyAdmin"
   ]
  },
  {
   "name": "compute.organizations.enableXpnResource",
   "roles": [
    "roles/compute.admin",
    "roles/compute.xpnAdmin",
    "roles/notebooks.legacyAdmin"
   ]
  },
  {
   "name": "compute.organizations.listAssociations",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgSecurityResourceAdmin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.organizations.setSecurityPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgSecurityResourceAdmin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.oslogin.updateExternalUser",
   "roles": [
    "roles/compute.admin",
    "roles/compute.osLoginExternalUser",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.packetMirrorings.update",
   "roles": [
    "roles/compute.admin",
    "roles/compute.packetMirroringUser",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.projects.setDefaultNetworkTier",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.projects.setDefaultServiceAccount",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.projects.setUsageExportBucket",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.publicAdvertisedPrefixes.create",
   "roles": [
    "roles/compute.admin",
    "roles/compute.publicIpAdmin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.publicAdvertisedPrefixes.delete",
   "roles": [
    "roles/compute.admin",
    "roles/compute.publicIpAdmin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.publicAdvertisedPrefixes.get",
   "roles": [
    "roles/compute.admin",
    "roles/compute.publicIpAdmin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.publicAdvertisedPrefixes.list",
   "roles": [
    "roles/compute.admin",
    "roles/compute.publicIpAdmin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.publicAdvertisedPrefixes.update",
   "roles": [
    "roles/compute.admin",
    "roles/compute.publicIpAdmin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.publicAdvertisedPrefixes.updatePolicy",
   "roles": [
    "roles/compute.admin",
    "roles/compute.publicIpAdmin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.publicAdvertisedPrefixes.use",
   "roles": [
    "roles/compute.admin",
    "roles/compute.publicIpAdmin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.publicDelegatedPrefixes.create",
   "roles": [
    "roles/compute.admin",
    "roles/compute.publicIpAdmin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.publicDelegatedPrefixes.use",
   "roles": [
    "roles/compute.admin",
    "roles/compute.publicIpAdmin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionOperations.delete",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionOperations.getIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.regionOperations.setIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionSslCertificates.create",
   "roles": [
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.regionSslCertificates.delete",
   "roles": [
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.reservations.create",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.reservations.delete",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.reservations.resize",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.securityPolicies.addAssociation",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/compute.orgSecurityPolicyUser",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.securityPolicies.copyRules",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.securityPolicies.create",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.securityPolicies.delete",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.securityPolicies.getIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/compute.viewer",
    "roles/container.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.securityPolicies.move",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.securityPolicies.removeAssociation",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/compute.orgSecurityPolicyUser",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.securityPolicies.setIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.securityPolicies.update",
   "roles": [
    "roles/compute.admin",
    "roles/compute.orgSecurityPolicyAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.sslCertificates.create",
   "roles": [
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.sslCertificates.delete",
   "roles": [
    "roles/compute.admin",
    "roles/compute.loadBalancerAdmin",
    "roles/compute.securityAdmin",
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/multiclusteringress.serviceAgent",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.zoneOperations.delete",
   "roles": [
    "roles/compute.admin",
    "roles/editor",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "compute.zoneOperations.getIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/compute.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "compute.zoneOperations.setIamPolicy",
   "roles": [
    "roles/compute.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "automlrecommendations.apiKeys.create",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "automlrecommendations.apiKeys.list",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner"
   ]
  },
  {
   "name": "automlrecommendations.catalogItems.create",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "automlrecommendations.catalogItems.delete",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "automlrecommendations.catalogItems.get",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "automlrecommendations.catalogItems.list",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "automlrecommendations.catalogItems.update",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "automlrecommendations.catalogs.getStats",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "automlrecommendations.catalogs.list",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "automlrecommendations.eventStores.getStats",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "automlrecommendations.events.create",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "automlrecommendations.events.list",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "automlrecommendations.placements.create",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "automlrecommendations.placements.getStats",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "automlrecommendations.placements.list",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "automlrecommendations.recommendations.create",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "automlrecommendations.recommendations.list",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "automlrecommendations.recommendations.pause",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "automlrecommendations.recommendations.resume",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "automlrecommendations.recommendations.update",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "retail.catalogs.list",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "retail.catalogs.update",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "retail.operations.get",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "retail.operations.list",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "retail.placements.predict",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "retail.products.create",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "retail.products.delete",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "retail.products.export",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "retail.products.get",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "retail.products.import",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "retail.products.list",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/automlrecommendations.adminViewer",
    "roles/automlrecommendations.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.admin",
    "roles/retail.editor",
    "roles/retail.viewer"
   ]
  },
  {
   "name": "retail.products.update",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "retail.userEvents.create",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "retail.userEvents.import",
   "roles": [
    "roles/automlrecommendations.editor",
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "autoscaling.sites.writeMetrics",
   "roles": [
    "roles/autoscaling.metricsWriter",
    "roles/autoscaling.sitesAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "accessapproval.requests.approve",
   "roles": [
    "roles/accessapproval.approver",
    "roles/owner"
   ]
  },
  {
   "name": "accessapproval.requests.dismiss",
   "roles": [
    "roles/accessapproval.approver",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.bireservations.get",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/bigquery.resourceEditor",
    "roles/bigquery.resourceViewer",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.bireservations.update",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.capacityCommitments.create",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/dataflow.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.capacityCommitments.delete",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/dataflow.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.capacityCommitments.get",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/bigquery.resourceEditor",
    "roles/bigquery.resourceViewer",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.capacityCommitments.list",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/bigquery.resourceEditor",
    "roles/bigquery.resourceViewer",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.capacityCommitments.update",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.config.get",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.config.update",
   "roles": [
    "roles/bigquery.admin",
    "roles/dataflow.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.connections.create",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.connectionAdmin",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.connections.delete",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.connectionAdmin",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.connections.get",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.connectionAdmin",
    "roles/bigquery.connectionUser",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.connections.getIamPolicy",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.connectionAdmin",
    "roles/bigquery.connectionUser",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.connections.list",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.connectionAdmin",
    "roles/bigquery.connectionUser",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.connections.setIamPolicy",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.connectionAdmin",
    "roles/dataflow.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.connections.update",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.connectionAdmin",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.connections.use",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.connectionAdmin",
    "roles/bigquery.connectionUser",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.datasets.delete",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.datasets.getIamPolicy",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.metadataViewer",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataViewer",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.datasets.setIamPolicy",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.datasets.update",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.datasets.updateTag",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/datacatalog.admin",
    "roles/datacatalog.tagEditor",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.jobs.list",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/automlrecommendations.serviceAgent",
    "roles/bigquery.resourceEditor",
    "roles/bigquery.resourceViewer",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/ml.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "bigquery.jobs.listAll",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/bigquery.resourceEditor",
    "roles/bigquery.resourceViewer",
    "roles/dataflow.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.jobs.update",
   "roles": [
    "roles/bigquery.admin",
    "roles/automlrecommendations.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/ml.serviceAgent",
    "roles/owner",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "bigquery.models.create",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.models.delete",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.models.export",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataViewer",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.models.getData",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataViewer",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.models.getMetadata",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.metadataViewer",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataViewer",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/datacatalog.admin",
    "roles/datacatalog.viewer",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.models.list",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.metadataViewer",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataViewer",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.models.updateData",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.models.updateMetadata",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.models.updateTag",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/datacatalog.admin",
    "roles/datacatalog.tagEditor",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.readsessions.getData",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.readSessionUser",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.readsessions.update",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.readSessionUser",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.reservationAssignments.create",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/bigquery.resourceEditor",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.reservationAssignments.delete",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/bigquery.resourceEditor",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.reservationAssignments.list",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/bigquery.resourceEditor",
    "roles/bigquery.resourceViewer",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.reservationAssignments.search",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/bigquery.resourceEditor",
    "roles/bigquery.resourceViewer",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.reservations.create",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/bigquery.resourceEditor",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.reservations.delete",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/bigquery.resourceEditor",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.reservations.get",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/bigquery.resourceEditor",
    "roles/bigquery.resourceViewer",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.reservations.list",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/bigquery.resourceEditor",
    "roles/bigquery.resourceViewer",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.reservations.update",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.resourceAdmin",
    "roles/bigquery.resourceEditor",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.routines.create",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.routines.delete",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.routines.get",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.metadataViewer",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataViewer",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.routines.list",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.metadataViewer",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataViewer",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.routines.update",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.savedqueries.create",
   "roles": [
    "roles/bigquery.admin",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.savedqueries.delete",
   "roles": [
    "roles/bigquery.admin",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.savedqueries.get",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.savedqueries.list",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.savedqueries.update",
   "roles": [
    "roles/bigquery.admin",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.tables.delete",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/cloudasset.serviceAgent",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent"
   ]
  },
  {
   "name": "bigquery.tables.getIamPolicy",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.metadataViewer",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataViewer",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.tables.list",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.metadataViewer",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataViewer",
    "roles/automlrecommendations.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/ml.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/retail.serviceAgent"
   ]
  },
  {
   "name": "bigquery.tables.setCategory",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent"
   ]
  },
  {
   "name": "bigquery.tables.setIamPolicy",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataOwner",
    "roles/dataflow.serviceAgent",
    "roles/dlp.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "bigquery.tables.updateTag",
   "roles": [
    "roles/bigquery.admin",
    "roles/datafusion.serviceAgent",
    "roles/bigquery.dataEditor",
    "roles/bigquery.dataOwner",
    "roles/datacatalog.admin",
    "roles/datacatalog.tagEditor",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/dlp.serviceAgent"
   ]
  },
  {
   "name": "bigquery.transfers.get",
   "roles": [
    "roles/bigquery.admin",
    "roles/bigquery.user",
    "roles/dataflow.serviceAgent",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigquery.transfers.update",
   "roles": [
    "roles/bigquery.admin",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "consumerprocurement.accounts.get",
   "roles": [
    "roles/consumerprocurement.orderViewer",
    "roles/billing.viewer",
    "roles/consumerprocurement.orderAdmin",
    "roles/billing.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "consumerprocurement.accounts.list",
   "roles": [
    "roles/consumerprocurement.orderViewer",
    "roles/billing.viewer",
    "roles/consumerprocurement.orderAdmin",
    "roles/billing.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "consumerprocurement.orders.get",
   "roles": [
    "roles/consumerprocurement.orderViewer",
    "roles/billing.viewer",
    "roles/consumerprocurement.orderAdmin",
    "roles/billing.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "consumerprocurement.orders.list",
   "roles": [
    "roles/consumerprocurement.orderViewer",
    "roles/billing.viewer",
    "roles/consumerprocurement.orderAdmin",
    "roles/billing.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "binaryauthorization.continuousValidationConfig.get",
   "roles": [
    "roles/binaryauthorization.continuousValidationConfigViewer",
    "roles/binaryauthorization.continuousValidationConfigEditor",
    "roles/binaryauthorization.continuousValidationConfigAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dns.networks.bindPrivateDNSPolicy",
   "roles": [
    "roles/container.hostServiceAgentUser",
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.networks.bindPrivateDNSZone",
   "roles": [
    "roles/container.hostServiceAgentUser",
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "binaryauthorization.policy.get",
   "roles": [
    "roles/binaryauthorization.policyEditor",
    "roles/binaryauthorization.policyAdmin",
    "roles/binaryauthorization.policyViewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "binaryauthorization.policy.update",
   "roles": [
    "roles/binaryauthorization.policyEditor",
    "roles/binaryauthorization.policyAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "chat.bots.get",
   "roles": [
    "roles/chat.owner",
    "roles/chat.reader",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "chat.bots.update",
   "roles": [
    "roles/chat.owner",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.appProfiles.get",
   "roles": [
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.appProfiles.list",
   "roles": [
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.backups.get",
   "roles": [
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.backups.list",
   "roles": [
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.clusters.get",
   "roles": [
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.clusters.list",
   "roles": [
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.instances.get",
   "roles": [
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.instances.list",
   "roles": [
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.keyvisualizer.get",
   "roles": [
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.keyvisualizer.list",
   "roles": [
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.locations.list",
   "roles": [
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.tables.checkConsistency",
   "roles": [
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.tables.generateConsistencyToken",
   "roles": [
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/bigtable.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.tables.sampleRowKeys",
   "roles": [
    "roles/bigtable.reader",
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudasset.assets.analyzeIamPolicy",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportAccessLevel",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportAccessPolicy",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportAllAccessPolicy",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportAppengineApplications",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportAppengineServices",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportAppengineVersions",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportBigqueryDatasets",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportBigqueryTables",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportBigtableCluster",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportBigtableInstance",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportBigtableTable",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportCloudbillingBillingAccounts",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportCloudkmsCryptoKeys",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportCloudkmsImportJobs",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportCloudkmsKeyRings",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportCloudresourcemanagerFolders",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportCloudresourcemanagerOrganizations",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportCloudresourcemanagerProjects",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeAddress",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeAutoscalers",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeBackendBuckets",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeBackendServices",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeDisks",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeFirewalls",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeForwardingRules",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeGlobalAddress",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeGlobalForwardingRules",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeHealthChecks",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeHttpHealthChecks",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeHttpsHealthChecks",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeImages",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeInstanceGroupManagers",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeInstanceGroups",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeInstanceTemplates",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeInstances",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeInterconnect",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeInterconnectAttachment",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeLicenses",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeNetworks",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeProjects",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeRegionAutoscaler",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeRegionBackendServices",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeRegionDisk",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeRegionInstanceGroup",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeRegionInstanceGroupManager",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeRouters",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeRoutes",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeSecurityPolicy",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeSnapshots",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeSslCertificates",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeSubnetworks",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeTargetHttpProxies",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeTargetHttpsProxies",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeTargetInstances",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeTargetPools",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeTargetSslProxies",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeTargetTcpProxies",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeTargetVpnGateways",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeUrlMaps",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportComputeVpnTunnels",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportContainerClusterrole",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportContainerClusterrolebinding",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportContainerClusters",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportContainerNamespace",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportContainerNode",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportContainerNodepool",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportContainerPod",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportContainerRole",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportContainerRolebinding",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportContainerregistryImage",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportDatafusionInstance",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportDataprocClusters",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportDataprocJobs",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportDnsManagedZones",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportDnsPolicies",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportIamPolicy",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportIamRoles",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportIamServiceAccountKeys",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportIamServiceAccounts",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportManagedidentitiesDomain",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportOrgPolicy",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securedlandingzone.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportPubsubSubscriptions",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportPubsubTopics",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportResource",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securedlandingzone.serviceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportServicePerimeter",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/owner",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportServicemanagementServices",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportSpannerDatabases",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportSpannerInstances",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportSqladminInstances",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.exportStorageBuckets",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.assets.searchAllIamPolicies",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.feeds.create",
   "roles": [
    "roles/cloudasset.owner",
    "roles/owner",
    "roles/securedlandingzone.serviceAgent",
    "roles/securitycenter.automationServiceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.feeds.delete",
   "roles": [
    "roles/cloudasset.owner",
    "roles/owner",
    "roles/securedlandingzone.serviceAgent",
    "roles/securitycenter.automationServiceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.feeds.get",
   "roles": [
    "roles/cloudasset.owner",
    "roles/owner",
    "roles/securitycenter.automationServiceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.feeds.list",
   "roles": [
    "roles/cloudasset.owner",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/securitycenter.automationServiceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "cloudasset.feeds.update",
   "roles": [
    "roles/cloudasset.owner",
    "roles/owner",
    "roles/securedlandingzone.serviceAgent",
    "roles/securitycenter.automationServiceAgent",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "recommender.locations.get",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/recommender.iamViewer",
    "roles/recommender.projectCudViewer",
    "roles/owner",
    "roles/recommender.productSuggestionAdmin",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/recommender.firewallAdmin",
    "roles/recommender.firewallViewer",
    "roles/recommender.iamAdmin",
    "roles/recommender.productSuggestionViewer",
    "roles/recommender.projectCudAdmin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "recommender.locations.list",
   "roles": [
    "roles/cloudasset.owner",
    "roles/cloudasset.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/recommender.iamViewer",
    "roles/recommender.projectCudViewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.productSuggestionAdmin",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/recommender.firewallAdmin",
    "roles/recommender.firewallViewer",
    "roles/recommender.iamAdmin",
    "roles/recommender.productSuggestionViewer",
    "roles/recommender.projectCudAdmin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "containeranalysis.notes.attachOccurrence",
   "roles": [
    "roles/containeranalysis.notes.editor",
    "roles/computescanning.serviceAgent",
    "roles/containeranalysis.admin",
    "roles/containeranalysis.notes.attacher",
    "roles/editor",
    "roles/osconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "containeranalysis.notes.create",
   "roles": [
    "roles/containeranalysis.notes.editor",
    "roles/computescanning.serviceAgent",
    "roles/containeranalysis.admin",
    "roles/editor",
    "roles/osconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "containeranalysis.notes.delete",
   "roles": [
    "roles/containeranalysis.notes.editor",
    "roles/computescanning.serviceAgent",
    "roles/containeranalysis.admin",
    "roles/editor",
    "roles/osconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "containeranalysis.notes.get",
   "roles": [
    "roles/containeranalysis.notes.editor",
    "roles/computescanning.serviceAgent",
    "roles/binaryauthorization.serviceAgent",
    "roles/containeranalysis.admin",
    "roles/containeranalysis.notes.attacher",
    "roles/containeranalysis.notes.occurrences.viewer",
    "roles/containeranalysis.notes.viewer",
    "roles/editor",
    "roles/osconfig.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "containeranalysis.notes.list",
   "roles": [
    "roles/containeranalysis.notes.editor",
    "roles/computescanning.serviceAgent",
    "roles/binaryauthorization.serviceAgent",
    "roles/containeranalysis.admin",
    "roles/containeranalysis.notes.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/osconfig.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "containeranalysis.notes.update",
   "roles": [
    "roles/containeranalysis.notes.editor",
    "roles/computescanning.serviceAgent",
    "roles/containeranalysis.admin",
    "roles/editor",
    "roles/osconfig.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "cloudfunctions.functions.call",
   "roles": [
    "roles/cloudfunctions.admin",
    "roles/cloudfunctions.developer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudfunctions.functions.create",
   "roles": [
    "roles/cloudfunctions.admin",
    "roles/cloudfunctions.developer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudfunctions.functions.delete",
   "roles": [
    "roles/cloudfunctions.admin",
    "roles/cloudfunctions.developer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudfunctions.functions.get",
   "roles": [
    "roles/cloudfunctions.admin",
    "roles/cloudfunctions.developer",
    "roles/cloudfunctions.viewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudfunctions.functions.getIamPolicy",
   "roles": [
    "roles/cloudfunctions.admin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebasemods.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudfunctions.functions.invoke",
   "roles": [
    "roles/cloudfunctions.admin",
    "roles/cloudfunctions.developer",
    "roles/cloudfunctions.invoker",
    "roles/cloudfunctions.serviceAgent",
    "roles/dialogflow.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudfunctions.functions.list",
   "roles": [
    "roles/cloudfunctions.admin",
    "roles/cloudfunctions.developer",
    "roles/cloudfunctions.viewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudfunctions.functions.setIamPolicy",
   "roles": [
    "roles/cloudfunctions.admin",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/firebasemods.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudfunctions.functions.sourceCodeGet",
   "roles": [
    "roles/cloudfunctions.admin",
    "roles/cloudfunctions.developer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudfunctions.functions.sourceCodeSet",
   "roles": [
    "roles/cloudfunctions.admin",
    "roles/cloudfunctions.developer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudfunctions.functions.update",
   "roles": [
    "roles/cloudfunctions.admin",
    "roles/cloudfunctions.developer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudfunctions.locations.list",
   "roles": [
    "roles/cloudfunctions.admin",
    "roles/cloudfunctions.developer",
    "roles/cloudfunctions.viewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudfunctions.operations.get",
   "roles": [
    "roles/cloudfunctions.admin",
    "roles/cloudfunctions.developer",
    "roles/cloudfunctions.viewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudfunctions.operations.list",
   "roles": [
    "roles/cloudfunctions.admin",
    "roles/cloudfunctions.developer",
    "roles/cloudfunctions.viewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "binaryauthorization.attestors.create",
   "roles": [
    "roles/binaryauthorization.attestorsAdmin",
    "roles/binaryauthorization.attestorsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "binaryauthorization.attestors.delete",
   "roles": [
    "roles/binaryauthorization.attestorsAdmin",
    "roles/binaryauthorization.attestorsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "binaryauthorization.attestors.get",
   "roles": [
    "roles/binaryauthorization.attestorsAdmin",
    "roles/binaryauthorization.attestorsEditor",
    "roles/binaryauthorization.attestorsVerifier",
    "roles/binaryauthorization.attestorsViewer",
    "roles/binaryauthorization.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "binaryauthorization.attestors.getIamPolicy",
   "roles": [
    "roles/binaryauthorization.attestorsAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "binaryauthorization.attestors.list",
   "roles": [
    "roles/binaryauthorization.attestorsAdmin",
    "roles/binaryauthorization.attestorsEditor",
    "roles/binaryauthorization.attestorsVerifier",
    "roles/binaryauthorization.attestorsViewer",
    "roles/binaryauthorization.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "binaryauthorization.attestors.setIamPolicy",
   "roles": [
    "roles/binaryauthorization.attestorsAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "binaryauthorization.attestors.update",
   "roles": [
    "roles/binaryauthorization.attestorsAdmin",
    "roles/binaryauthorization.attestorsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "binaryauthorization.attestors.verifyImageAttested",
   "roles": [
    "roles/binaryauthorization.attestorsAdmin",
    "roles/binaryauthorization.attestorsEditor",
    "roles/binaryauthorization.attestorsVerifier",
    "roles/binaryauthorization.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "binaryauthorization.continuousValidationConfig.update",
   "roles": [
    "roles/binaryauthorization.continuousValidationConfigEditor",
    "roles/binaryauthorization.continuousValidationConfigAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "billing.accounts.get",
   "roles": [
    "roles/billing.user",
    "roles/billing.viewer",
    "roles/appengineflex.serviceAgent",
    "roles/billing.admin",
    "roles/billing.costsManager",
    "roles/dataprocessing.admin",
    "roles/recommender.billingAccountCudViewer",
    "roles/recommender.billingAccountCudAdmin",
    "roles/vpcaccess.serviceAgent"
   ]
  },
  {
   "name": "billing.accounts.getIamPolicy",
   "roles": [
    "roles/billing.user",
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/billing.costsManager",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer"
   ]
  },
  {
   "name": "billing.accounts.list",
   "roles": [
    "roles/billing.user",
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/billing.costsManager",
    "roles/dataprocessing.admin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/recommender.billingAccountCudViewer",
    "roles/recommender.billingAccountCudAdmin"
   ]
  },
  {
   "name": "billing.accounts.redeemPromotion",
   "roles": [
    "roles/billing.user",
    "roles/billing.admin"
   ]
  },
  {
   "name": "billing.credits.list",
   "roles": [
    "roles/billing.user",
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer"
   ]
  },
  {
   "name": "billing.resourceAssociations.create",
   "roles": [
    "roles/billing.user",
    "roles/billing.admin"
   ]
  },
  {
   "name": "billing.accounts.getPaymentInfo",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin"
   ]
  },
  {
   "name": "billing.accounts.getSpendingInformation",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/billing.costsManager"
   ]
  },
  {
   "name": "billing.accounts.getUsageExportSpec",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/billing.costsManager"
   ]
  },
  {
   "name": "billing.budgets.get",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/billing.costsManager"
   ]
  },
  {
   "name": "billing.budgets.list",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/billing.costsManager",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer"
   ]
  },
  {
   "name": "billing.resourceAssociations.list",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer"
   ]
  },
  {
   "name": "billing.subscriptions.get",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin"
   ]
  },
  {
   "name": "billing.subscriptions.list",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer"
   ]
  },
  {
   "name": "dataprocessing.datasources.get",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/dataprocessing.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataprocessing.datasources.list",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/dataprocessing.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataprocessing.groupcontrols.get",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/dataprocessing.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataprocessing.groupcontrols.list",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/dataprocessing.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.commitmentUtilizationInsights.get",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/editor",
    "roles/recommender.projectCudViewer",
    "roles/owner",
    "roles/recommender.billingAccountCudViewer",
    "roles/recommender.billingAccountCudAdmin",
    "roles/recommender.projectCudAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.commitmentUtilizationInsights.list",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/recommender.projectCudViewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.billingAccountCudViewer",
    "roles/recommender.billingAccountCudAdmin",
    "roles/recommender.projectCudAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.usageCommitmentRecommendations.get",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/editor",
    "roles/recommender.projectCudViewer",
    "roles/owner",
    "roles/recommender.billingAccountCudViewer",
    "roles/recommender.billingAccountCudAdmin",
    "roles/recommender.projectCudAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.usageCommitmentRecommendations.list",
   "roles": [
    "roles/billing.viewer",
    "roles/billing.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/recommender.projectCudViewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.billingAccountCudViewer",
    "roles/recommender.billingAccountCudAdmin",
    "roles/recommender.projectCudAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudiot.devices.bindGateway",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.provisioner",
    "roles/cloudiot.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudiot.devices.create",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.provisioner",
    "roles/cloudiot.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudiot.devices.delete",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.provisioner",
    "roles/cloudiot.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudiot.devices.get",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.provisioner",
    "roles/cloudiot.deviceController",
    "roles/cloudiot.editor",
    "roles/cloudiot.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudiot.devices.list",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.provisioner",
    "roles/cloudiot.deviceController",
    "roles/cloudiot.editor",
    "roles/cloudiot.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudiot.devices.sendCommand",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.provisioner",
    "roles/cloudiot.deviceController",
    "roles/cloudiot.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudiot.devices.unbindGateway",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.provisioner",
    "roles/cloudiot.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudiot.devices.update",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.provisioner",
    "roles/cloudiot.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudiot.devices.updateConfig",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.provisioner",
    "roles/cloudiot.deviceController",
    "roles/cloudiot.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudiot.registries.create",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudiot.registries.delete",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudiot.registries.get",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.provisioner",
    "roles/cloudiot.deviceController",
    "roles/cloudiot.editor",
    "roles/cloudiot.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudiot.registries.getIamPolicy",
   "roles": [
    "roles/cloudiot.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudiot.registries.list",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.provisioner",
    "roles/cloudiot.deviceController",
    "roles/cloudiot.editor",
    "roles/cloudiot.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudiot.registries.setIamPolicy",
   "roles": [
    "roles/cloudiot.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudiot.registries.update",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudiottoken.tokensettings.get",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.provisioner",
    "roles/cloudiot.deviceController",
    "roles/cloudiot.editor",
    "roles/cloudiot.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudiottoken.tokensettings.update",
   "roles": [
    "roles/cloudiot.admin",
    "roles/cloudiot.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudconfig.configs.get",
   "roles": [
    "roles/cloudconfig.viewer",
    "roles/cloudconfig.admin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudjobdiscovery.events.create",
   "roles": [
    "roles/cloudjobdiscovery.profilesEditor",
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudjobdiscovery.profiles.create",
   "roles": [
    "roles/cloudjobdiscovery.profilesEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudjobdiscovery.profiles.delete",
   "roles": [
    "roles/cloudjobdiscovery.profilesEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudjobdiscovery.profiles.get",
   "roles": [
    "roles/cloudjobdiscovery.profilesEditor",
    "roles/cloudjobdiscovery.profilesViewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudjobdiscovery.profiles.search",
   "roles": [
    "roles/cloudjobdiscovery.profilesEditor",
    "roles/cloudjobdiscovery.profilesViewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudjobdiscovery.profiles.update",
   "roles": [
    "roles/cloudjobdiscovery.profilesEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudjobdiscovery.tenants.create",
   "roles": [
    "roles/cloudjobdiscovery.profilesEditor",
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudjobdiscovery.tenants.delete",
   "roles": [
    "roles/cloudjobdiscovery.profilesEditor",
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudjobdiscovery.tenants.get",
   "roles": [
    "roles/cloudjobdiscovery.profilesEditor",
    "roles/cloudjobdiscovery.profilesViewer",
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/cloudjobdiscovery.jobsViewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudjobdiscovery.tenants.update",
   "roles": [
    "roles/cloudjobdiscovery.profilesEditor",
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudkms.cryptoKeyVersions.useToDecrypt",
   "roles": [
    "roles/cloudkms.cryptoKeyDecrypter",
    "roles/cloudkms.cryptoKeyEncrypterDecrypter",
    "roles/dlp.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "cloudkms.cryptoKeyVersions.useToEncrypt",
   "roles": [
    "roles/cloudkms.cryptoKeyEncrypterDecrypter",
    "roles/cloudkms.cryptoKeyEncrypter",
    "roles/owner"
   ]
  },
  {
   "name": "cloudjobdiscovery.tools.access",
   "roles": [
    "roles/cloudjobdiscovery.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.appProfiles.create",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.appProfiles.delete",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.appProfiles.update",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.backups.create",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.backups.delete",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.backups.getIamPolicy",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.backups.restore",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.backups.setIamPolicy",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.backups.update",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.clusters.create",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.clusters.delete",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.clusters.update",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.instances.create",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.instances.delete",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.instances.getIamPolicy",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.instances.setIamPolicy",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.instances.update",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.tables.create",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.tables.delete",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.tables.getIamPolicy",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "bigtable.tables.mutateRows",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/bigtable.user",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.tables.setIamPolicy",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "bigtable.tables.update",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/bigtable.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.autoscalingPolicies.create",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.autoscalingPolicies.delete",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.autoscalingPolicies.get",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.autoscalingPolicies.list",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.autoscalingPolicies.update",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.autoscalingPolicies.use",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.clusters.create",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.clusters.delete",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.clusters.get",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.clusters.list",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.clusters.start",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.clusters.stop",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.clusters.update",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.clusters.use",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.jobs.cancel",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.jobs.create",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.jobs.delete",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.jobs.get",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.jobs.list",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.jobs.update",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.operations.delete",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.operations.get",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.operations.list",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.hubAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.workflowTemplates.create",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.workflowTemplates.delete",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.workflowTemplates.get",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.workflowTemplates.instantiate",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.workflowTemplates.instantiateInline",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.workflowTemplates.list",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.viewer",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.workflowTemplates.update",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/dataproc.admin",
    "roles/dataproc.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "spanner.databaseOperations.cancel",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/spanner.restoreAdmin",
    "roles/spanner.admin",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.databaseOperations.delete",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/spanner.admin",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.databaseOperations.get",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.restoreAdmin",
    "roles/spanner.admin",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.databaseOperations.list",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.restoreAdmin",
    "roles/spanner.admin",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.databases.beginOrRollbackReadWriteTransaction",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/spanner.admin",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.databases.beginPartitionedDmlTransaction",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/spanner.admin",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.databases.beginReadOnlyTransaction",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.admin",
    "roles/spanner.databaseReader",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.databases.getDdl",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.admin",
    "roles/spanner.databaseReader",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.databases.list",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.restoreAdmin",
    "roles/spanner.viewer",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin",
    "roles/spanner.backupWriter"
   ]
  },
  {
   "name": "spanner.databases.partitionQuery",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.admin",
    "roles/spanner.databaseReader",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.databases.partitionRead",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.admin",
    "roles/spanner.databaseReader",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.databases.read",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.admin",
    "roles/spanner.databaseReader",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.databases.select",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.admin",
    "roles/spanner.databaseReader",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.databases.updateDdl",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/spanner.admin",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.databases.write",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/spanner.admin",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.instanceConfigs.get",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/spanner.viewer",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "spanner.instanceConfigs.list",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/spanner.viewer",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "spanner.instances.get",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.restoreAdmin",
    "roles/spanner.viewer",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin",
    "roles/spanner.backupWriter",
    "roles/spanner.databaseReader",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.instances.list",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.restoreAdmin",
    "roles/spanner.viewer",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin"
   ]
  },
  {
   "name": "spanner.sessions.create",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.admin",
    "roles/spanner.databaseReader",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.sessions.delete",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.admin",
    "roles/spanner.databaseReader",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.sessions.get",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.admin",
    "roles/spanner.databaseReader",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "spanner.sessions.list",
   "roles": [
    "roles/datafusion.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.admin",
    "roles/spanner.databaseReader",
    "roles/spanner.databaseUser"
   ]
  },
  {
   "name": "cloudkms.cryptoKeyVersions.useToSign",
   "roles": [
    "roles/cloudkms.signer",
    "roles/cloudkms.signerVerifier",
    "roles/owner"
   ]
  },
  {
   "name": "datafusion.instances.get",
   "roles": [
    "roles/datafusion.viewer",
    "roles/datafusion.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datafusion.instances.getIamPolicy",
   "roles": [
    "roles/datafusion.viewer",
    "roles/datafusion.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datafusion.instances.list",
   "roles": [
    "roles/datafusion.viewer",
    "roles/datafusion.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datafusion.instances.runtime",
   "roles": [
    "roles/datafusion.viewer",
    "roles/datafusion.admin",
    "roles/datafusion.runner",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datafusion.locations.get",
   "roles": [
    "roles/datafusion.viewer",
    "roles/datafusion.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datafusion.locations.list",
   "roles": [
    "roles/datafusion.viewer",
    "roles/datafusion.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datafusion.operations.get",
   "roles": [
    "roles/datafusion.viewer",
    "roles/datafusion.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datafusion.operations.list",
   "roles": [
    "roles/datafusion.viewer",
    "roles/datafusion.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudkms.cryptoKeyVersions.viewPublicKey",
   "roles": [
    "roles/cloudkms.signerVerifier",
    "roles/cloudkms.publicKeyViewer",
    "roles/owner"
   ]
  },
  {
   "name": "cloudkms.cryptoKeyVersions.create",
   "roles": [
    "roles/cloudkms.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudkms.cryptoKeyVersions.destroy",
   "roles": [
    "roles/cloudkms.admin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudkms.cryptoKeyVersions.get",
   "roles": [
    "roles/cloudkms.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudkms.cryptoKeyVersions.list",
   "roles": [
    "roles/cloudkms.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudkms.cryptoKeyVersions.restore",
   "roles": [
    "roles/cloudkms.admin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudkms.cryptoKeyVersions.update",
   "roles": [
    "roles/cloudkms.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudkms.cryptoKeys.get",
   "roles": [
    "roles/cloudkms.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudkms.cryptoKeys.getIamPolicy",
   "roles": [
    "roles/cloudkms.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudkms.cryptoKeys.list",
   "roles": [
    "roles/cloudkms.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudkms.cryptoKeys.setIamPolicy",
   "roles": [
    "roles/cloudkms.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudkms.cryptoKeys.update",
   "roles": [
    "roles/cloudkms.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudkms.importJobs.create",
   "roles": [
    "roles/cloudkms.admin",
    "roles/cloudkms.importer",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudkms.importJobs.get",
   "roles": [
    "roles/cloudkms.admin",
    "roles/cloudkms.importer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudkms.importJobs.getIamPolicy",
   "roles": [
    "roles/cloudkms.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudkms.importJobs.list",
   "roles": [
    "roles/cloudkms.admin",
    "roles/cloudkms.importer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudkms.importJobs.setIamPolicy",
   "roles": [
    "roles/cloudkms.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudkms.importJobs.useToImport",
   "roles": [
    "roles/cloudkms.admin",
    "roles/cloudkms.importer",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudkms.keyRings.get",
   "roles": [
    "roles/cloudkms.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudkms.keyRings.getIamPolicy",
   "roles": [
    "roles/cloudkms.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudkms.keyRings.list",
   "roles": [
    "roles/cloudkms.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudkms.keyRings.setIamPolicy",
   "roles": [
    "roles/cloudkms.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "ml.jobs.create",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/ml.jobOwner",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "ml.jobs.get",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/ml.jobOwner",
    "roles/notebooks.serviceAgent",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.jobs.getIamPolicy",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/ml.jobOwner",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.jobs.list",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/ml.jobOwner",
    "roles/iam.securityAdmin",
    "roles/notebooks.serviceAgent",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.locations.get",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.locations.list",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.models.create",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/ml.modelOwner",
    "roles/owner"
   ]
  },
  {
   "name": "ml.models.delete",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.modelOwner",
    "roles/owner"
   ]
  },
  {
   "name": "ml.models.get",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/ml.modelOwner",
    "roles/ml.modelUser",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.models.getIamPolicy",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/ml.modelOwner",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.models.predict",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/ml.modelOwner",
    "roles/ml.modelUser",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.models.setIamPolicy",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/ml.admin",
    "roles/ml.modelOwner",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "ml.models.update",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.modelOwner",
    "roles/owner"
   ]
  },
  {
   "name": "ml.operations.list",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/iam.securityAdmin",
    "roles/ml.operationOwner",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.projects.getConfig",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.studies.create",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/owner"
   ]
  },
  {
   "name": "ml.studies.delete",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/owner"
   ]
  },
  {
   "name": "ml.studies.get",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.studies.getIamPolicy",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.studies.list",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.studies.setIamPolicy",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "ml.trials.create",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/owner"
   ]
  },
  {
   "name": "ml.trials.delete",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/owner"
   ]
  },
  {
   "name": "ml.trials.get",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.trials.list",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.viewer",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.trials.update",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/owner"
   ]
  },
  {
   "name": "ml.versions.create",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.modelOwner",
    "roles/owner"
   ]
  },
  {
   "name": "ml.versions.delete",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.modelOwner",
    "roles/owner"
   ]
  },
  {
   "name": "ml.versions.predict",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.developer",
    "roles/ml.modelOwner",
    "roles/ml.modelUser",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ml.versions.update",
   "roles": [
    "roles/datalabeling.serviceAgent",
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.modelOwner",
    "roles/owner"
   ]
  },
  {
   "name": "automlrecommendations.apiKeys.delete",
   "roles": [
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "automlrecommendations.catalogs.update",
   "roles": [
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "automlrecommendations.events.purge",
   "roles": [
    "roles/automlrecommendations.admin",
    "roles/owner",
    "roles/retail.admin"
   ]
  },
  {
   "name": "automlrecommendations.events.rejoin",
   "roles": [
    "roles/automlrecommendations.admin",
    "roles/owner",
    "roles/retail.admin"
   ]
  },
  {
   "name": "automlrecommendations.placements.delete",
   "roles": [
    "roles/automlrecommendations.admin",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "automlrecommendations.recommendations.delete",
   "roles": [
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin",
    "roles/retail.editor"
   ]
  },
  {
   "name": "retail.userEvents.purge",
   "roles": [
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin"
   ]
  },
  {
   "name": "retail.userEvents.rejoin",
   "roles": [
    "roles/automlrecommendations.admin",
    "roles/editor",
    "roles/owner",
    "roles/retail.admin"
   ]
  },
  {
   "name": "autoscaling.sites.readRecommendations",
   "roles": [
    "roles/autoscaling.recommendationsReader",
    "roles/autoscaling.sitesAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "apigeeconnect.connections.list",
   "roles": [
    "roles/apigeeconnect.Admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "autoscaling.sites.getIamPolicy",
   "roles": [
    "roles/autoscaling.sitesAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "autoscaling.sites.setIamPolicy",
   "roles": [
    "roles/autoscaling.sitesAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "autoscaling.sites.writeState",
   "roles": [
    "roles/autoscaling.sitesAdmin",
    "roles/autoscaling.stateWriter",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "axt.labels.get",
   "roles": [
    "roles/axt.admin"
   ]
  },
  {
   "name": "axt.labels.set",
   "roles": [
    "roles/axt.admin"
   ]
  },
  {
   "name": "apigeeconnect.endpoints.connect",
   "roles": [
    "roles/apigeeconnect.Agent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "appengine.applications.create",
   "roles": [
    "roles/appengine.appCreator",
    "roles/firebase.managementServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "appengine.versions.getFileContents",
   "roles": [
    "roles/appengine.codeViewer",
    "roles/owner"
   ]
  },
  {
   "name": "consumerprocurement.entitlements.get",
   "roles": [
    "roles/consumerprocurement.entitlementManager",
    "roles/consumerprocurement.entitlementViewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "consumerprocurement.entitlements.list",
   "roles": [
    "roles/consumerprocurement.entitlementManager",
    "roles/consumerprocurement.entitlementViewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "consumerprocurement.freeTrials.create",
   "roles": [
    "roles/consumerprocurement.entitlementManager",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "consumerprocurement.freeTrials.get",
   "roles": [
    "roles/consumerprocurement.entitlementManager",
    "roles/consumerprocurement.entitlementViewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "consumerprocurement.freeTrials.list",
   "roles": [
    "roles/consumerprocurement.entitlementManager",
    "roles/consumerprocurement.entitlementViewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "serviceusage.operations.get",
   "roles": [
    "roles/consumerprocurement.entitlementManager",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/serviceusage.serviceUsageConsumer",
    "roles/serviceusage.serviceUsageViewer",
    "roles/viewer",
    "roles/serviceusage.apiKeysAdmin",
    "roles/serviceusage.serviceUsageAdmin"
   ]
  },
  {
   "name": "serviceusage.services.disable",
   "roles": [
    "roles/consumerprocurement.entitlementManager",
    "roles/cloudfunctions.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/servicemanagement.quotaAdmin",
    "roles/serviceusage.serviceUsageAdmin"
   ]
  },
  {
   "name": "consumerprocurement.accounts.create",
   "roles": [
    "roles/consumerprocurement.orderAdmin",
    "roles/billing.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "consumerprocurement.accounts.delete",
   "roles": [
    "roles/consumerprocurement.orderAdmin",
    "roles/billing.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "consumerprocurement.orders.cancel",
   "roles": [
    "roles/consumerprocurement.orderAdmin",
    "roles/billing.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "consumerprocurement.orders.modify",
   "roles": [
    "roles/consumerprocurement.orderAdmin",
    "roles/billing.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "consumerprocurement.orders.place",
   "roles": [
    "roles/consumerprocurement.orderAdmin",
    "roles/billing.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "resourcemanager.projects.setIamPolicy",
   "roles": [
    "roles/appengineflex.serviceAgent",
    "roles/exploreanthos.serviceAgent",
    "roles/firebase.managementServiceAgent",
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/resourcemanager.folderAdmin",
    "roles/resourcemanager.organizationAdmin",
    "roles/resourcemanager.projectIamAdmin"
   ]
  },
  {
   "name": "binaryauthorization.continuousValidationConfig.getIamPolicy",
   "roles": [
    "roles/binaryauthorization.continuousValidationConfigAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "binaryauthorization.continuousValidationConfig.setIamPolicy",
   "roles": [
    "roles/binaryauthorization.continuousValidationConfigAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "binaryauthorization.policy.getIamPolicy",
   "roles": [
    "roles/binaryauthorization.policyAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "binaryauthorization.policy.setIamPolicy",
   "roles": [
    "roles/binaryauthorization.policyAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "containeranalysis.notes.listOccurrences",
   "roles": [
    "roles/binaryauthorization.serviceAgent",
    "roles/containeranalysis.notes.occurrences.viewer",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dns.changes.create",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.changes.get",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/dns.reader",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.changes.list",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/dns.reader",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.dnsKeys.get",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/dns.reader",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.dnsKeys.list",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/dns.reader",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.managedZoneOperations.get",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/dns.reader",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.managedZoneOperations.list",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/dns.reader",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.managedZones.create",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.managedZones.delete",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.managedZones.get",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/dns.reader",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.managedZones.list",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/dns.reader",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.managedZones.update",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.networks.targetWithPeeringZone",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/dns.peer",
    "roles/editor",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.policies.create",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.policies.delete",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.policies.get",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/dns.reader",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.policies.list",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/dns.reader",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.policies.update",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.projects.get",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/dns.reader",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.resourceRecordSets.create",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.resourceRecordSets.delete",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.resourceRecordSets.list",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/dns.reader",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "dns.resourceRecordSets.update",
   "roles": [
    "roles/container.serviceAgent",
    "roles/dns.admin",
    "roles/editor",
    "roles/managedidentities.serviceAgent",
    "roles/owner",
    "roles/servicenetworking.serviceAgent"
   ]
  },
  {
   "name": "tpu.locations.get",
   "roles": [
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/tpu.admin",
    "roles/tpu.viewer"
   ]
  },
  {
   "name": "tpu.locations.list",
   "roles": [
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/tpu.admin",
    "roles/tpu.viewer"
   ]
  },
  {
   "name": "tpu.nodes.create",
   "roles": [
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/tpu.admin"
   ]
  },
  {
   "name": "tpu.nodes.delete",
   "roles": [
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/tpu.admin"
   ]
  },
  {
   "name": "tpu.nodes.get",
   "roles": [
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/tpu.admin",
    "roles/tpu.viewer"
   ]
  },
  {
   "name": "tpu.nodes.list",
   "roles": [
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/tpu.admin",
    "roles/tpu.viewer"
   ]
  },
  {
   "name": "tpu.operations.get",
   "roles": [
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/tpu.admin",
    "roles/tpu.viewer"
   ]
  },
  {
   "name": "tpu.operations.list",
   "roles": [
    "roles/container.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/tpu.admin",
    "roles/tpu.viewer"
   ]
  },
  {
   "name": "containeranalysis.notes.getIamPolicy",
   "roles": [
    "roles/containeranalysis.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "containeranalysis.notes.setIamPolicy",
   "roles": [
    "roles/containeranalysis.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "containeranalysis.occurrences.getIamPolicy",
   "roles": [
    "roles/containeranalysis.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "containeranalysis.occurrences.setIamPolicy",
   "roles": [
    "roles/containeranalysis.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "clouddebugger.breakpoints.list",
   "roles": [
    "roles/clouddebugger.agent",
    "roles/clouddebugger.user",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner"
   ]
  },
  {
   "name": "clouddebugger.breakpoints.listActive",
   "roles": [
    "roles/clouddebugger.agent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "clouddebugger.breakpoints.update",
   "roles": [
    "roles/clouddebugger.agent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "clouddebugger.debuggees.create",
   "roles": [
    "roles/clouddebugger.agent",
    "roles/dataflow.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "clouddebugger.breakpoints.create",
   "roles": [
    "roles/clouddebugger.user",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "clouddebugger.breakpoints.delete",
   "roles": [
    "roles/clouddebugger.user",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "clouddebugger.breakpoints.get",
   "roles": [
    "roles/clouddebugger.user",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "clouddebugger.debuggees.list",
   "roles": [
    "roles/clouddebugger.user",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner"
   ]
  },
  {
   "name": "billing.accounts.close",
   "roles": [
    "roles/billing.admin"
   ]
  },
  {
   "name": "billing.accounts.move",
   "roles": [
    "roles/billing.admin"
   ]
  },
  {
   "name": "billing.accounts.removeFromOrganization",
   "roles": [
    "roles/billing.admin"
   ]
  },
  {
   "name": "billing.accounts.reopen",
   "roles": [
    "roles/billing.admin"
   ]
  },
  {
   "name": "billing.accounts.setIamPolicy",
   "roles": [
    "roles/billing.admin",
    "roles/iam.securityAdmin"
   ]
  },
  {
   "name": "billing.accounts.update",
   "roles": [
    "roles/billing.admin"
   ]
  },
  {
   "name": "billing.accounts.updatePaymentInfo",
   "roles": [
    "roles/billing.admin"
   ]
  },
  {
   "name": "billing.accounts.updateUsageExportSpec",
   "roles": [
    "roles/billing.admin",
    "roles/billing.costsManager"
   ]
  },
  {
   "name": "billing.budgets.create",
   "roles": [
    "roles/billing.admin",
    "roles/billing.costsManager"
   ]
  },
  {
   "name": "billing.budgets.delete",
   "roles": [
    "roles/billing.admin",
    "roles/billing.costsManager"
   ]
  },
  {
   "name": "billing.budgets.update",
   "roles": [
    "roles/billing.admin",
    "roles/billing.costsManager"
   ]
  },
  {
   "name": "billing.resourceAssociations.delete",
   "roles": [
    "roles/billing.admin"
   ]
  },
  {
   "name": "billing.subscriptions.create",
   "roles": [
    "roles/billing.admin"
   ]
  },
  {
   "name": "billing.subscriptions.update",
   "roles": [
    "roles/billing.admin"
   ]
  },
  {
   "name": "logging.privateLogEntries.list",
   "roles": [
    "roles/billing.admin",
    "roles/logging.admin",
    "roles/logging.privateLogViewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner"
   ]
  },
  {
   "name": "recommender.commitmentUtilizationInsights.update",
   "roles": [
    "roles/billing.admin",
    "roles/editor",
    "roles/owner",
    "roles/recommender.billingAccountCudAdmin",
    "roles/recommender.projectCudAdmin"
   ]
  },
  {
   "name": "recommender.usageCommitmentRecommendations.update",
   "roles": [
    "roles/billing.admin",
    "roles/editor",
    "roles/owner",
    "roles/recommender.billingAccountCudAdmin",
    "roles/recommender.projectCudAdmin"
   ]
  },
  {
   "name": "resourcemanager.projects.createBillingAssignment",
   "roles": [
    "roles/billing.admin",
    "roles/billing.projectManager",
    "roles/owner"
   ]
  },
  {
   "name": "resourcemanager.projects.deleteBillingAssignment",
   "roles": [
    "roles/billing.admin",
    "roles/billing.projectManager",
    "roles/owner"
   ]
  },
  {
   "name": "billing.accounts.create",
   "roles": [
    "roles/billing.creator"
   ]
  },
  {
   "name": "datacatalog.categories.getIamPolicy",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.categoryAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datacatalog.categories.setIamPolicy",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.categoryAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.entries.create",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.entryGroupOwner",
    "roles/datacatalog.entryOwner",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.entries.delete",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.entryGroupOwner",
    "roles/datacatalog.entryOwner",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.entries.get",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.entryGroupOwner",
    "roles/datacatalog.entryOwner",
    "roles/datacatalog.entryViewer",
    "roles/datacatalog.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datacatalog.entries.getIamPolicy",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.entryGroupOwner",
    "roles/datacatalog.entryOwner",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datacatalog.entries.list",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.entryGroupOwner",
    "roles/datacatalog.entryOwner",
    "roles/datacatalog.entryViewer",
    "roles/datacatalog.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datacatalog.entries.setIamPolicy",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.entryGroupOwner",
    "roles/datacatalog.entryOwner",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.entries.update",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.entryGroupOwner",
    "roles/datacatalog.entryOwner",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.entries.updateTag",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.entryGroupOwner",
    "roles/datacatalog.entryOwner",
    "roles/datacatalog.tagEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.entryGroups.create",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.entryGroupCreator",
    "roles/datacatalog.entryGroupOwner",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.entryGroups.delete",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.entryGroupOwner",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.entryGroups.get",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.entryGroupCreator",
    "roles/datacatalog.entryGroupOwner",
    "roles/datacatalog.entryOwner",
    "roles/datacatalog.entryViewer",
    "roles/datacatalog.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datacatalog.entryGroups.getIamPolicy",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.entryGroupOwner",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datacatalog.entryGroups.list",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.entryGroupCreator",
    "roles/datacatalog.entryGroupOwner",
    "roles/datacatalog.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datacatalog.entryGroups.setIamPolicy",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.entryGroupOwner",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.entryGroups.update",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.entryGroupOwner",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.tagTemplates.create",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.tagTemplateCreator",
    "roles/datacatalog.tagTemplateOwner",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.tagTemplates.delete",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.tagTemplateOwner",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.tagTemplates.get",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.tagTemplateCreator",
    "roles/datacatalog.tagTemplateOwner",
    "roles/datacatalog.tagTemplateUser",
    "roles/datacatalog.tagTemplateViewer",
    "roles/datacatalog.viewer",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datacatalog.tagTemplates.getIamPolicy",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.tagTemplateOwner",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datacatalog.tagTemplates.getTag",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.tagTemplateOwner",
    "roles/datacatalog.tagTemplateUser",
    "roles/datacatalog.tagTemplateViewer",
    "roles/datacatalog.viewer",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datacatalog.tagTemplates.setIamPolicy",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.tagTemplateOwner",
    "roles/dlp.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.tagTemplates.update",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.tagTemplateOwner",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.tagTemplates.use",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.tagTemplateOwner",
    "roles/datacatalog.tagTemplateUser",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.taxonomies.create",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.categoryAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.taxonomies.delete",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.categoryAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.taxonomies.get",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.categoryAdmin",
    "roles/datacatalog.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datacatalog.taxonomies.getIamPolicy",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.categoryAdmin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datacatalog.taxonomies.list",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.categoryAdmin",
    "roles/datacatalog.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datacatalog.taxonomies.setIamPolicy",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.categoryAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.taxonomies.update",
   "roles": [
    "roles/datacatalog.admin",
    "roles/datacatalog.categoryAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datacatalog.categories.fineGrainedGet",
   "roles": [
    "roles/datacatalog.categoryFineGrainedReader"
   ]
  },
  {
   "name": "clientauthconfig.clients.list",
   "roles": [
    "roles/cloudfunctions.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.managementServiceAgent",
    "roles/firebase.sdkProvisioningServiceAgent",
    "roles/oauthconfig.editor",
    "roles/iam.securityAdmin",
    "roles/oauthconfig.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "firebasedatabase.instances.get",
   "roles": [
    "roles/cloudfunctions.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasedatabase.admin",
    "roles/firebase.viewer",
    "roles/firebasedatabase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasedatabase.instances.update",
   "roles": [
    "roles/cloudfunctions.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasedatabase.admin",
    "roles/owner"
   ]
  },
  {
   "name": "vpcaccess.connectors.get",
   "roles": [
    "roles/cloudfunctions.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.user",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent",
    "roles/vpcaccess.viewer",
    "roles/vpcaccess.admin"
   ]
  },
  {
   "name": "vpcaccess.connectors.use",
   "roles": [
    "roles/cloudfunctions.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.user",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent",
    "roles/vpcaccess.admin"
   ]
  },
  {
   "name": "cloudconfig.configs.update",
   "roles": [
    "roles/cloudconfig.admin",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "cloudjobdiscovery.companies.create",
   "roles": [
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudjobdiscovery.companies.delete",
   "roles": [
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudjobdiscovery.companies.get",
   "roles": [
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/cloudjobdiscovery.jobsViewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudjobdiscovery.companies.list",
   "roles": [
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/cloudjobdiscovery.jobsViewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudjobdiscovery.companies.update",
   "roles": [
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudjobdiscovery.jobs.create",
   "roles": [
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudjobdiscovery.jobs.delete",
   "roles": [
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudjobdiscovery.jobs.get",
   "roles": [
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/cloudjobdiscovery.jobsViewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudjobdiscovery.jobs.search",
   "roles": [
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/cloudjobdiscovery.jobsViewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudjobdiscovery.jobs.update",
   "roles": [
    "roles/cloudjobdiscovery.jobsEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataflow.jobs.cancel",
   "roles": [
    "roles/dataflow.admin",
    "roles/dataflow.developer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataflow.jobs.create",
   "roles": [
    "roles/dataflow.admin",
    "roles/dataflow.developer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataflow.jobs.get",
   "roles": [
    "roles/dataflow.admin",
    "roles/dataflow.developer",
    "roles/dataflow.viewer",
    "roles/dataflow.worker",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataflow.jobs.list",
   "roles": [
    "roles/dataflow.admin",
    "roles/dataflow.developer",
    "roles/dataflow.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataflow.jobs.snapshot",
   "roles": [
    "roles/dataflow.admin",
    "roles/dataflow.developer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataflow.jobs.updateContents",
   "roles": [
    "roles/dataflow.admin",
    "roles/dataflow.developer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataflow.messages.list",
   "roles": [
    "roles/dataflow.admin",
    "roles/dataflow.developer",
    "roles/dataflow.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataflow.metrics.get",
   "roles": [
    "roles/dataflow.admin",
    "roles/dataflow.developer",
    "roles/dataflow.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataflow.snapshots.delete",
   "roles": [
    "roles/dataflow.admin",
    "roles/dataflow.developer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataflow.snapshots.get",
   "roles": [
    "roles/dataflow.admin",
    "roles/dataflow.developer",
    "roles/dataflow.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataflow.snapshots.list",
   "roles": [
    "roles/dataflow.admin",
    "roles/dataflow.developer",
    "roles/dataflow.viewer",
    "roles/dataprep.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datafusion.instances.create",
   "roles": [
    "roles/datafusion.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datafusion.instances.delete",
   "roles": [
    "roles/datafusion.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datafusion.instances.restart",
   "roles": [
    "roles/datafusion.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datafusion.instances.setIamPolicy",
   "roles": [
    "roles/datafusion.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datafusion.instances.update",
   "roles": [
    "roles/datafusion.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datafusion.instances.upgrade",
   "roles": [
    "roles/datafusion.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datafusion.operations.cancel",
   "roles": [
    "roles/datafusion.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datalabeling.annotateddatasets.delete",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datalabeling.annotateddatasets.label",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datalabeling.annotateddatasets.list",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datalabeling.annotationspecsets.create",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datalabeling.annotationspecsets.delete",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datalabeling.annotationspecsets.get",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datalabeling.annotationspecsets.list",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datalabeling.dataitems.get",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datalabeling.dataitems.list",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datalabeling.datasets.create",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datalabeling.datasets.delete",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datalabeling.datasets.import",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datalabeling.examples.get",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datalabeling.examples.list",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datalabeling.instructions.create",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datalabeling.instructions.delete",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datalabeling.instructions.get",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datalabeling.instructions.list",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datalabeling.operations.cancel",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datalabeling.operations.list",
   "roles": [
    "roles/datalabeling.admin",
    "roles/datalabeling.viewer",
    "roles/datalabeling.editor",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datastore.databases.export",
   "roles": [
    "roles/datastore.importExportAdmin",
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.databases.import",
   "roles": [
    "roles/datastore.importExportAdmin",
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.operations.cancel",
   "roles": [
    "roles/datastore.importExportAdmin",
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.operations.get",
   "roles": [
    "roles/datastore.importExportAdmin",
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.operations.list",
   "roles": [
    "roles/datastore.importExportAdmin",
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.indexes.create",
   "roles": [
    "roles/datastore.indexAdmin",
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.indexes.delete",
   "roles": [
    "roles/datastore.indexAdmin",
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.indexes.get",
   "roles": [
    "roles/datastore.indexAdmin",
    "roles/datastore.owner",
    "roles/datastore.viewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datastore.indexes.list",
   "roles": [
    "roles/datastore.indexAdmin",
    "roles/datastore.owner",
    "roles/datastore.user",
    "roles/datastore.viewer",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datastore.indexes.update",
   "roles": [
    "roles/datastore.indexAdmin",
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudonefs.isiloncloud.com/clusters.create",
   "roles": [
    "roles/dellemccloudonefs.user",
    "roles/dellemccloudonefs.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudonefs.isiloncloud.com/clusters.delete",
   "roles": [
    "roles/dellemccloudonefs.user",
    "roles/dellemccloudonefs.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudonefs.isiloncloud.com/clusters.get",
   "roles": [
    "roles/dellemccloudonefs.user",
    "roles/dellemccloudonefs.viewer",
    "roles/dellemccloudonefs.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudonefs.isiloncloud.com/clusters.list",
   "roles": [
    "roles/dellemccloudonefs.user",
    "roles/dellemccloudonefs.viewer",
    "roles/dellemccloudonefs.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudonefs.isiloncloud.com/clusters.update",
   "roles": [
    "roles/dellemccloudonefs.user",
    "roles/dellemccloudonefs.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudonefs.isiloncloud.com/fileshares.create",
   "roles": [
    "roles/dellemccloudonefs.user",
    "roles/dellemccloudonefs.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudonefs.isiloncloud.com/fileshares.delete",
   "roles": [
    "roles/dellemccloudonefs.user",
    "roles/dellemccloudonefs.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudonefs.isiloncloud.com/fileshares.get",
   "roles": [
    "roles/dellemccloudonefs.user",
    "roles/dellemccloudonefs.viewer",
    "roles/dellemccloudonefs.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudonefs.isiloncloud.com/fileshares.list",
   "roles": [
    "roles/dellemccloudonefs.user",
    "roles/dellemccloudonefs.viewer",
    "roles/dellemccloudonefs.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudonefs.isiloncloud.com/fileshares.update",
   "roles": [
    "roles/dellemccloudonefs.user",
    "roles/dellemccloudonefs.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.databases.create",
   "roles": [
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.databases.delete",
   "roles": [
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.databases.get",
   "roles": [
    "roles/datastore.owner",
    "roles/datastore.user",
    "roles/datastore.viewer",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datastore.databases.getIamPolicy",
   "roles": [
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datastore.databases.list",
   "roles": [
    "roles/datastore.owner",
    "roles/datastore.viewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datastore.databases.setIamPolicy",
   "roles": [
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.databases.update",
   "roles": [
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.entities.allocateIds",
   "roles": [
    "roles/datastore.owner",
    "roles/datastore.user",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.entities.create",
   "roles": [
    "roles/datastore.owner",
    "roles/datastore.user",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.entities.delete",
   "roles": [
    "roles/datastore.owner",
    "roles/datastore.user",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.entities.get",
   "roles": [
    "roles/datastore.owner",
    "roles/datastore.user",
    "roles/datastore.viewer",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datastore.entities.list",
   "roles": [
    "roles/datastore.owner",
    "roles/datastore.user",
    "roles/datastore.viewer",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datastore.entities.update",
   "roles": [
    "roles/datastore.owner",
    "roles/datastore.user",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.locations.get",
   "roles": [
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.locations.list",
   "roles": [
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.namespaces.get",
   "roles": [
    "roles/datastore.owner",
    "roles/datastore.user",
    "roles/datastore.viewer",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datastore.namespaces.getIamPolicy",
   "roles": [
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datastore.namespaces.list",
   "roles": [
    "roles/datastore.owner",
    "roles/datastore.user",
    "roles/datastore.viewer",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datastore.namespaces.setIamPolicy",
   "roles": [
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.operations.delete",
   "roles": [
    "roles/datastore.owner",
    "roles/firebase.admin",
    "roles/firebase.developAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datastore.statistics.get",
   "roles": [
    "roles/datastore.owner",
    "roles/datastore.user",
    "roles/datastore.viewer",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datastore.statistics.list",
   "roles": [
    "roles/datastore.owner",
    "roles/datastore.user",
    "roles/datastore.viewer",
    "roles/dlp.serviceAgent",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.operations.cancel",
   "roles": [
    "roles/dataproc.hubAgent",
    "roles/dataproc.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "logging.queries.create",
   "roles": [
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.queries.delete",
   "roles": [
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.queries.get",
   "roles": [
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.queries.list",
   "roles": [
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.queries.listShared",
   "roles": [
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "logging.queries.update",
   "roles": [
    "roles/dataproc.hubAgent",
    "roles/editor",
    "roles/logging.admin",
    "roles/logging.privateLogViewer",
    "roles/logging.viewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "dataproc.agents.create",
   "roles": [
    "roles/dataproc.worker",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.agents.delete",
   "roles": [
    "roles/dataproc.worker",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.agents.get",
   "roles": [
    "roles/dataproc.worker",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.agents.list",
   "roles": [
    "roles/dataproc.worker",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.agents.update",
   "roles": [
    "roles/dataproc.worker",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.tasks.lease",
   "roles": [
    "roles/dataproc.worker",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.tasks.listInvalidatedLeases",
   "roles": [
    "roles/dataproc.worker",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.tasks.reportStatus",
   "roles": [
    "roles/dataproc.worker",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.connectionprofiles.create",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.connectionprofiles.delete",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.connectionprofiles.get",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datamigration.connectionprofiles.getIamPolicy",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datamigration.connectionprofiles.list",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datamigration.connectionprofiles.setIamPolicy",
   "roles": [
    "roles/datamigration.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.connectionprofiles.update",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.locations.get",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datamigration.locations.list",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datamigration.migrationjobs.create",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.migrationjobs.delete",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.migrationjobs.generateSshScript",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.migrationjobs.get",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datamigration.migrationjobs.getIamPolicy",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datamigration.migrationjobs.list",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datamigration.migrationjobs.promote",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.migrationjobs.restart",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.migrationjobs.resume",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.migrationjobs.setIamPolicy",
   "roles": [
    "roles/datamigration.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.migrationjobs.start",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.migrationjobs.stop",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.migrationjobs.update",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.migrationjobs.verify",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datamigration.operations.cancel",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.operations.delete",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "datamigration.operations.get",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "datamigration.operations.list",
   "roles": [
    "roles/datamigration.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudonefs.isiloncloud.com/clusters.updateAdvancedSettings",
   "roles": [
    "roles/dellemccloudonefs.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.clusters.getIamPolicy",
   "roles": [
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.clusters.setIamPolicy",
   "roles": [
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.jobs.getIamPolicy",
   "roles": [
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.jobs.setIamPolicy",
   "roles": [
    "roles/dataproc.serviceAgent",
    "roles/dataproc.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "metastore.services.get",
   "roles": [
    "roles/dataproc.serviceAgent",
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/metastore.metadataOperator",
    "roles/metastore.user",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.autoscalingPolicies.getIamPolicy",
   "roles": [
    "roles/dataproc.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.autoscalingPolicies.setIamPolicy",
   "roles": [
    "roles/dataproc.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.operations.getIamPolicy",
   "roles": [
    "roles/dataproc.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.operations.setIamPolicy",
   "roles": [
    "roles/dataproc.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "dataproc.workflowTemplates.getIamPolicy",
   "roles": [
    "roles/dataproc.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataproc.workflowTemplates.setIamPolicy",
   "roles": [
    "roles/dataproc.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "dataprocessing.datasources.update",
   "roles": [
    "roles/dataprocessing.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dataprocessing.featurecontrols.list",
   "roles": [
    "roles/dataprocessing.admin",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dataprocessing.featurecontrols.update",
   "roles": [
    "roles/dataprocessing.admin",
    "roles/owner"
   ]
  },
  {
   "name": "dataprocessing.groupcontrols.update",
   "roles": [
    "roles/dataprocessing.admin",
    "roles/owner"
   ]
  },
  {
   "name": "dataprep.projects.use",
   "roles": [
    "roles/dataprep.projects.user",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "endpoints.portals.attachCustomDomain",
   "roles": [
    "roles/endpoints.portalAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "endpoints.portals.detachCustomDomain",
   "roles": [
    "roles/endpoints.portalAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "endpoints.portals.listCustomDomains",
   "roles": [
    "roles/endpoints.portalAdmin",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "endpoints.portals.update",
   "roles": [
    "roles/endpoints.portalAdmin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "servicemanagement.services.get",
   "roles": [
    "roles/endpoints.portalAdmin",
    "roles/endpoints.serviceAgent",
    "roles/endpointsportal.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/servicemanagement.configEditor",
    "roles/viewer",
    "roles/servicemanagement.serviceController",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "dlp.storedInfoTypes.create",
   "roles": [
    "roles/dlp.storedInfoTypesEditor",
    "roles/dlp.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.storedInfoTypes.delete",
   "roles": [
    "roles/dlp.storedInfoTypesEditor",
    "roles/dlp.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.storedInfoTypes.get",
   "roles": [
    "roles/dlp.storedInfoTypesEditor",
    "roles/dlp.admin",
    "roles/dlp.storedInfoTypesReader",
    "roles/dlp.reader",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dlp.storedInfoTypes.list",
   "roles": [
    "roles/dlp.storedInfoTypesEditor",
    "roles/dlp.admin",
    "roles/dlp.storedInfoTypesReader",
    "roles/dlp.reader",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dlp.storedInfoTypes.update",
   "roles": [
    "roles/dlp.storedInfoTypesEditor",
    "roles/dlp.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.inspectTemplates.get",
   "roles": [
    "roles/dialogflow.serviceAgent",
    "roles/dlp.admin",
    "roles/dlp.inspectTemplatesEditor",
    "roles/dlp.inspectTemplatesReader",
    "roles/dlp.reader",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dlp.inspectTemplates.list",
   "roles": [
    "roles/dialogflow.serviceAgent",
    "roles/dlp.admin",
    "roles/dlp.inspectTemplatesEditor",
    "roles/dlp.inspectTemplatesReader",
    "roles/dlp.reader",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dlp.analyzeRiskTemplates.create",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.analyzeRiskTemplatesEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.analyzeRiskTemplates.delete",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.analyzeRiskTemplatesEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.analyzeRiskTemplates.get",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.analyzeRiskTemplatesEditor",
    "roles/dlp.analyzeRiskTemplatesReader",
    "roles/dlp.reader",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dlp.analyzeRiskTemplates.list",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.analyzeRiskTemplatesEditor",
    "roles/dlp.analyzeRiskTemplatesReader",
    "roles/dlp.reader",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dlp.analyzeRiskTemplates.update",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.analyzeRiskTemplatesEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.deidentifyTemplates.create",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.deidentifyTemplatesEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.deidentifyTemplates.delete",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.deidentifyTemplatesEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.deidentifyTemplates.get",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.deidentifyTemplatesEditor",
    "roles/dlp.deidentifyTemplatesReader",
    "roles/dlp.reader",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dlp.deidentifyTemplates.list",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.deidentifyTemplatesEditor",
    "roles/dlp.deidentifyTemplatesReader",
    "roles/dlp.reader",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dlp.deidentifyTemplates.update",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.deidentifyTemplatesEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.inspectFindings.list",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.inspectFindingsReader",
    "roles/dlp.reader",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dlp.inspectTemplates.create",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.inspectTemplatesEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.inspectTemplates.delete",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.inspectTemplatesEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.inspectTemplates.update",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.inspectTemplatesEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.jobTriggers.create",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.jobTriggersEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.jobTriggers.delete",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.jobTriggersEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.jobTriggers.get",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.jobTriggersEditor",
    "roles/dlp.jobTriggersReader",
    "roles/dlp.reader",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dlp.jobTriggers.hybridInspect",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.jobTriggersEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.jobTriggers.list",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.jobTriggersEditor",
    "roles/dlp.jobTriggersReader",
    "roles/dlp.reader",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "dlp.jobTriggers.update",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.jobTriggersEditor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.jobs.cancel",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.jobsEditor",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.jobs.create",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.jobsEditor",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.jobs.delete",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.jobsEditor",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.jobs.get",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.jobsEditor",
    "roles/dlp.jobsReader",
    "roles/dlp.reader",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "dlp.jobs.hybridInspect",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.jobsEditor",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "dlp.jobs.list",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.jobsEditor",
    "roles/dlp.jobsReader",
    "roles/dlp.reader",
    "roles/dlp.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "dlp.kms.encrypt",
   "roles": [
    "roles/dlp.admin",
    "roles/dlp.user",
    "roles/dlp.jobsEditor",
    "roles/dlp.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "servicemanagement.services.check",
   "roles": [
    "roles/endpoints.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/servicemanagement.serviceController",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "servicemanagement.services.quota",
   "roles": [
    "roles/endpoints.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/servicemanagement.serviceController",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "servicemanagement.services.report",
   "roles": [
    "roles/endpoints.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/servicemanagement.reporter",
    "roles/servicemanagement.serviceController",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "documentai.evaluations.create",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "documentai.evaluations.get",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.evaluations.list",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.humanReviewConfigs.get",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.humanReviewConfigs.review",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.apiUser",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.humanReviewConfigs.update",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "documentai.labelerPools.create",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "documentai.labelerPools.delete",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "documentai.labelerPools.get",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.labelerPools.list",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.labelerPools.update",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "documentai.locations.get",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.locations.list",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.operations.getLegacy",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.apiUser",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.processorTypes.list",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.processorVersions.create",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "documentai.processorVersions.delete",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "documentai.processorVersions.get",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.processorVersions.list",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.processorVersions.processBatch",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.apiUser",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.processorVersions.processOnline",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.apiUser",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.processorVersions.update",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "documentai.processors.create",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "documentai.processors.delete",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "documentai.processors.fetchHumanReviewDetails",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.processors.get",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.processors.list",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.processors.processBatch",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.apiUser",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.processors.processOnline",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.apiUser",
    "roles/documentai.editor",
    "roles/documentai.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "documentai.processors.update",
   "roles": [
    "roles/documentai.admin",
    "roles/documentai.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "servicemanagement.services.list",
   "roles": [
    "roles/endpointsportal.serviceAgent",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "domains.locations.get",
   "roles": [
    "roles/domains.admin",
    "roles/domains.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "domains.locations.list",
   "roles": [
    "roles/domains.admin",
    "roles/domains.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "domains.operations.cancel",
   "roles": [
    "roles/domains.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "domains.operations.get",
   "roles": [
    "roles/domains.admin",
    "roles/domains.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "domains.operations.list",
   "roles": [
    "roles/domains.admin",
    "roles/domains.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "domains.registrations.configureContact",
   "roles": [
    "roles/domains.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "domains.registrations.configureDns",
   "roles": [
    "roles/domains.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "domains.registrations.configureManagement",
   "roles": [
    "roles/domains.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "domains.registrations.create",
   "roles": [
    "roles/domains.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "domains.registrations.delete",
   "roles": [
    "roles/domains.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "domains.registrations.get",
   "roles": [
    "roles/domains.admin",
    "roles/domains.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "domains.registrations.getIamPolicy",
   "roles": [
    "roles/domains.admin",
    "roles/domains.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "domains.registrations.list",
   "roles": [
    "roles/domains.admin",
    "roles/domains.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "domains.registrations.setIamPolicy",
   "roles": [
    "roles/domains.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "domains.registrations.update",
   "roles": [
    "roles/domains.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "errorreporting.applications.list",
   "roles": [
    "roles/errorreporting.admin",
    "roles/errorreporting.user",
    "roles/errorreporting.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "errorreporting.errorEvents.create",
   "roles": [
    "roles/errorreporting.admin",
    "roles/errorreporting.writer",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "errorreporting.errorEvents.delete",
   "roles": [
    "roles/errorreporting.admin",
    "roles/errorreporting.user",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "errorreporting.errorEvents.list",
   "roles": [
    "roles/errorreporting.admin",
    "roles/errorreporting.user",
    "roles/errorreporting.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "errorreporting.groupMetadata.get",
   "roles": [
    "roles/errorreporting.admin",
    "roles/errorreporting.user",
    "roles/errorreporting.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "errorreporting.groupMetadata.update",
   "roles": [
    "roles/errorreporting.admin",
    "roles/errorreporting.user",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "errorreporting.groups.list",
   "roles": [
    "roles/errorreporting.admin",
    "roles/errorreporting.user",
    "roles/errorreporting.viewer",
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "logging.notificationRules.create",
   "roles": [
    "roles/errorreporting.admin",
    "roles/logging.admin",
    "roles/owner"
   ]
  },
  {
   "name": "logging.notificationRules.delete",
   "roles": [
    "roles/errorreporting.admin",
    "roles/logging.admin",
    "roles/owner"
   ]
  },
  {
   "name": "logging.notificationRules.get",
   "roles": [
    "roles/errorreporting.admin",
    "roles/errorreporting.user",
    "roles/errorreporting.viewer",
    "roles/editor",
    "roles/logging.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "logging.notificationRules.list",
   "roles": [
    "roles/errorreporting.admin",
    "roles/errorreporting.user",
    "roles/errorreporting.viewer",
    "roles/editor",
    "roles/logging.admin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "logging.notificationRules.update",
   "roles": [
    "roles/errorreporting.admin",
    "roles/errorreporting.user",
    "roles/logging.admin",
    "roles/owner"
   ]
  },
  {
   "name": "essentialcontacts.contacts.create",
   "roles": [
    "roles/essentialcontacts.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "essentialcontacts.contacts.delete",
   "roles": [
    "roles/essentialcontacts.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "essentialcontacts.contacts.get",
   "roles": [
    "roles/essentialcontacts.admin",
    "roles/essentialcontacts.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "essentialcontacts.contacts.list",
   "roles": [
    "roles/essentialcontacts.admin",
    "roles/essentialcontacts.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "essentialcontacts.contacts.update",
   "roles": [
    "roles/essentialcontacts.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "eventarc.events.receiveAuditLogWritten",
   "roles": [
    "roles/eventarc.admin",
    "roles/eventarc.eventReceiver",
    "roles/owner"
   ]
  },
  {
   "name": "eventarc.locations.get",
   "roles": [
    "roles/eventarc.admin",
    "roles/eventarc.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "eventarc.locations.list",
   "roles": [
    "roles/eventarc.admin",
    "roles/eventarc.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "eventarc.operations.cancel",
   "roles": [
    "roles/eventarc.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "eventarc.operations.delete",
   "roles": [
    "roles/eventarc.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "eventarc.operations.get",
   "roles": [
    "roles/eventarc.admin",
    "roles/eventarc.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "eventarc.operations.list",
   "roles": [
    "roles/eventarc.admin",
    "roles/eventarc.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "eventarc.triggers.create",
   "roles": [
    "roles/eventarc.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "eventarc.triggers.delete",
   "roles": [
    "roles/eventarc.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "eventarc.triggers.get",
   "roles": [
    "roles/eventarc.admin",
    "roles/eventarc.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "eventarc.triggers.getIamPolicy",
   "roles": [
    "roles/eventarc.admin",
    "roles/eventarc.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "eventarc.triggers.list",
   "roles": [
    "roles/eventarc.admin",
    "roles/eventarc.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "eventarc.triggers.setIamPolicy",
   "roles": [
    "roles/eventarc.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "eventarc.triggers.undelete",
   "roles": [
    "roles/eventarc.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "eventarc.triggers.update",
   "roles": [
    "roles/eventarc.admin",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "earlyaccesscenter.campaigns.enroll",
   "roles": [
    "roles/earlyaccesscenter.admin",
    "roles/owner"
   ]
  },
  {
   "name": "earlyaccesscenter.campaigns.get",
   "roles": [
    "roles/earlyaccesscenter.admin",
    "roles/earlyaccesscenter.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "earlyaccesscenter.campaigns.list",
   "roles": [
    "roles/earlyaccesscenter.admin",
    "roles/earlyaccesscenter.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "earlyaccesscenter.customerAllowlists.get",
   "roles": [
    "roles/earlyaccesscenter.admin",
    "roles/earlyaccesscenter.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "earlyaccesscenter.customerAllowlists.list",
   "roles": [
    "roles/earlyaccesscenter.admin",
    "roles/earlyaccesscenter.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "run.services.get",
   "roles": [
    "roles/eventarc.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/run.admin",
    "roles/run.viewer"
   ]
  },
  {
   "name": "earthengine.assets.create",
   "roles": [
    "roles/earthengine.admin",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner"
   ]
  },
  {
   "name": "earthengine.assets.delete",
   "roles": [
    "roles/earthengine.admin",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner"
   ]
  },
  {
   "name": "earthengine.assets.get",
   "roles": [
    "roles/earthengine.admin",
    "roles/earthengine.viewer",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "earthengine.assets.getIamPolicy",
   "roles": [
    "roles/earthengine.admin",
    "roles/earthengine.viewer",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "earthengine.assets.list",
   "roles": [
    "roles/earthengine.admin",
    "roles/earthengine.viewer",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "earthengine.assets.setIamPolicy",
   "roles": [
    "roles/earthengine.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "earthengine.assets.update",
   "roles": [
    "roles/earthengine.admin",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner"
   ]
  },
  {
   "name": "earthengine.computations.create",
   "roles": [
    "roles/earthengine.admin",
    "roles/earthengine.viewer",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner"
   ]
  },
  {
   "name": "earthengine.exports.create",
   "roles": [
    "roles/earthengine.admin",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner"
   ]
  },
  {
   "name": "earthengine.filmstripthumbnails.create",
   "roles": [
    "roles/earthengine.admin",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner"
   ]
  },
  {
   "name": "earthengine.filmstripthumbnails.get",
   "roles": [
    "roles/earthengine.admin",
    "roles/earthengine.viewer",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "earthengine.imports.create",
   "roles": [
    "roles/earthengine.admin",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner"
   ]
  },
  {
   "name": "earthengine.maps.create",
   "roles": [
    "roles/earthengine.admin",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner"
   ]
  },
  {
   "name": "earthengine.maps.get",
   "roles": [
    "roles/earthengine.admin",
    "roles/earthengine.viewer",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "earthengine.operations.delete",
   "roles": [
    "roles/earthengine.admin",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner"
   ]
  },
  {
   "name": "earthengine.operations.get",
   "roles": [
    "roles/earthengine.admin",
    "roles/earthengine.viewer",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "earthengine.operations.list",
   "roles": [
    "roles/earthengine.admin",
    "roles/earthengine.viewer",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "earthengine.operations.update",
   "roles": [
    "roles/earthengine.admin",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner"
   ]
  },
  {
   "name": "earthengine.tables.create",
   "roles": [
    "roles/earthengine.admin",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner"
   ]
  },
  {
   "name": "earthengine.tables.get",
   "roles": [
    "roles/earthengine.admin",
    "roles/earthengine.viewer",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "earthengine.thumbnails.create",
   "roles": [
    "roles/earthengine.admin",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner"
   ]
  },
  {
   "name": "earthengine.thumbnails.get",
   "roles": [
    "roles/earthengine.admin",
    "roles/earthengine.viewer",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "earthengine.videothumbnails.create",
   "roles": [
    "roles/earthengine.admin",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner"
   ]
  },
  {
   "name": "earthengine.videothumbnails.get",
   "roles": [
    "roles/earthengine.admin",
    "roles/earthengine.viewer",
    "roles/editor",
    "roles/earthengine.writer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "source.repos.create",
   "roles": [
    "roles/exploreanthos.serviceAgent",
    "roles/owner",
    "roles/source.admin"
   ]
  },
  {
   "name": "source.repos.delete",
   "roles": [
    "roles/exploreanthos.serviceAgent",
    "roles/owner",
    "roles/source.admin"
   ]
  },
  {
   "name": "source.repos.update",
   "roles": [
    "roles/exploreanthos.serviceAgent",
    "roles/editor",
    "roles/owner",
    "roles/source.admin",
    "roles/source.writer"
   ]
  },
  {
   "name": "file.backups.create",
   "roles": [
    "roles/file.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "file.backups.delete",
   "roles": [
    "roles/file.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "file.backups.get",
   "roles": [
    "roles/file.editor",
    "roles/file.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "file.backups.list",
   "roles": [
    "roles/file.editor",
    "roles/file.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "file.backups.update",
   "roles": [
    "roles/file.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "file.instances.create",
   "roles": [
    "roles/file.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "file.instances.delete",
   "roles": [
    "roles/file.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "file.instances.get",
   "roles": [
    "roles/file.editor",
    "roles/file.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "file.instances.list",
   "roles": [
    "roles/file.editor",
    "roles/file.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "file.instances.restore",
   "roles": [
    "roles/file.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "file.instances.update",
   "roles": [
    "roles/file.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "file.locations.get",
   "roles": [
    "roles/file.editor",
    "roles/file.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "file.locations.list",
   "roles": [
    "roles/file.editor",
    "roles/file.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "file.operations.cancel",
   "roles": [
    "roles/file.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "file.operations.delete",
   "roles": [
    "roles/file.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "file.operations.get",
   "roles": [
    "roles/file.editor",
    "roles/file.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "file.operations.list",
   "roles": [
    "roles/file.editor",
    "roles/file.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "file.snapshots.create",
   "roles": [
    "roles/file.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "file.snapshots.delete",
   "roles": [
    "roles/file.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "file.snapshots.get",
   "roles": [
    "roles/file.editor",
    "roles/file.viewer",
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "file.snapshots.list",
   "roles": [
    "roles/file.editor",
    "roles/file.viewer",
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "file.snapshots.update",
   "roles": [
    "roles/file.editor",
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "apikeys.keys.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.managementServiceAgent",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/serviceusage.apiKeysAdmin",
    "roles/securitycenter.serviceAgent",
    "roles/serviceusage.apiKeysViewer"
   ]
  },
  {
   "name": "apikeys.keys.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.managementServiceAgent",
    "roles/firebase.sdkProvisioningServiceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/serviceusage.apiKeysAdmin",
    "roles/securitycenter.serviceAgent",
    "roles/serviceusage.apiKeysViewer"
   ]
  },
  {
   "name": "apikeys.keys.lookup",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/serviceusage.apiKeysAdmin",
    "roles/securitycenter.serviceAgent",
    "roles/serviceusage.apiKeysViewer"
   ]
  },
  {
   "name": "clientauthconfig.brands.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/oauthconfig.editor",
    "roles/oauthconfig.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "clientauthconfig.brands.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/oauthconfig.editor",
    "roles/iam.securityAdmin",
    "roles/oauthconfig.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "clientauthconfig.brands.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.managementServiceAgent",
    "roles/oauthconfig.editor",
    "roles/owner"
   ]
  },
  {
   "name": "clientauthconfig.clients.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/oauthconfig.editor",
    "roles/owner"
   ]
  },
  {
   "name": "clientauthconfig.clients.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/oauthconfig.editor",
    "roles/owner"
   ]
  },
  {
   "name": "clientauthconfig.clients.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.growthAdmin",
    "roles/oauthconfig.editor",
    "roles/oauthconfig.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "clientauthconfig.clients.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/oauthconfig.editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudmessaging.messages.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.sdkProvisioningServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "firebase.billingPlans.update",
   "roles": [
    "roles/firebase.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebase.clients.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.sdkProvisioningServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "firebase.clients.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "firebase.clients.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "firebase.links.create",
   "roles": [
    "roles/firebase.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebase.links.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebase.links.list",
   "roles": [
    "roles/firebase.admin",
    "roles/firebase.analyticsAdmin",
    "roles/editor",
    "roles/firebase.analyticsViewer",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebase.links.update",
   "roles": [
    "roles/firebase.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebase.projects.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/firebase.managementServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseabt.experimentresults.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebaseabt.viewer",
    "roles/firebase.viewer",
    "roles/firebaseabt.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseabt.experiments.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebaseabt.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseabt.experiments.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebaseabt.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseabt.experiments.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebaseabt.viewer",
    "roles/firebase.viewer",
    "roles/firebaseabt.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseabt.experiments.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebaseabt.viewer",
    "roles/firebase.viewer",
    "roles/firebaseabt.admin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseabt.experiments.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebaseabt.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseabt.projectmetadata.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebaseabt.viewer",
    "roles/firebase.viewer",
    "roles/firebaseabt.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseanalytics.resources.googleAnalyticsEdit",
   "roles": [
    "roles/firebase.admin",
    "roles/firebase.analyticsAdmin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
   "roles": [
    "roles/firebase.admin",
    "roles/firebase.analyticsAdmin",
    "roles/editor",
    "roles/firebase.analyticsViewer",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseappdistro.groups.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.appDistributionSdkServiceAgent",
    "roles/firebase.qualityAdmin",
    "roles/firebaseappdistro.viewer",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/firebaseappdistro.admin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseappdistro.groups.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.appDistributionSdkServiceAgent",
    "roles/firebase.qualityAdmin",
    "roles/firebaseappdistro.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseappdistro.releases.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.appDistributionSdkServiceAgent",
    "roles/firebase.qualityAdmin",
    "roles/firebaseappdistro.viewer",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/firebaseappdistro.admin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseappdistro.releases.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.appDistributionSdkServiceAgent",
    "roles/firebase.qualityAdmin",
    "roles/firebaseappdistro.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseappdistro.testers.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.appDistributionSdkServiceAgent",
    "roles/firebase.qualityAdmin",
    "roles/firebaseappdistro.viewer",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/firebaseappdistro.admin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseappdistro.testers.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.appDistributionSdkServiceAgent",
    "roles/firebase.qualityAdmin",
    "roles/firebaseappdistro.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseauth.configs.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/identityplatform.admin",
    "roles/firebase.managementServiceAgent",
    "roles/identitytoolkit.admin",
    "roles/firebaseauth.admin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseauth.configs.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/identityplatform.admin",
    "roles/identityplatform.viewer",
    "roles/firebase.managementServiceAgent",
    "roles/identitytoolkit.admin",
    "roles/firebaseauth.admin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/identitytoolkit.viewer",
    "roles/firebaseauth.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseauth.configs.getHashConfig",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/identityplatform.admin",
    "roles/identitytoolkit.admin",
    "roles/firebaseauth.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseauth.configs.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/identityplatform.admin",
    "roles/firebase.managementServiceAgent",
    "roles/identitytoolkit.admin",
    "roles/firebaseauth.admin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseauth.users.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/identityplatform.admin",
    "roles/identitytoolkit.admin",
    "roles/firebaseauth.admin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseauth.users.createSession",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/identityplatform.admin",
    "roles/identitytoolkit.admin",
    "roles/firebaseauth.admin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseauth.users.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/identityplatform.admin",
    "roles/identitytoolkit.admin",
    "roles/firebaseauth.admin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseauth.users.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/identityplatform.admin",
    "roles/identityplatform.viewer",
    "roles/identitytoolkit.admin",
    "roles/firebaseauth.admin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/identitytoolkit.viewer",
    "roles/firebaseauth.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseauth.users.sendEmail",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/identityplatform.admin",
    "roles/identitytoolkit.admin",
    "roles/firebaseauth.admin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseauth.users.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/identityplatform.admin",
    "roles/identitytoolkit.admin",
    "roles/firebaseauth.admin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "firebasecrash.issues.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.qualityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasecrash.reports.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.qualityAdmin",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasecrashlytics.config.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.qualityAdmin",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/firebasecrashlytics.admin",
    "roles/firebasecrashlytics.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasecrashlytics.config.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.qualityAdmin",
    "roles/firebasecrashlytics.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasecrashlytics.data.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.qualityAdmin",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/firebasecrashlytics.admin",
    "roles/firebasecrashlytics.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasecrashlytics.issues.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.qualityAdmin",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/firebasecrashlytics.admin",
    "roles/firebasecrashlytics.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasecrashlytics.issues.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.qualityAdmin",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/firebasecrashlytics.admin",
    "roles/firebasecrashlytics.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasecrashlytics.issues.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.qualityAdmin",
    "roles/firebasecrashlytics.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasecrashlytics.sessions.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.qualityAdmin",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/firebasecrashlytics.admin",
    "roles/firebasecrashlytics.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasedatabase.instances.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasedatabase.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasedatabase.instances.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasedatabase.admin",
    "roles/firebase.viewer",
    "roles/firebasedatabase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasedynamiclinks.destinations.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.viewer",
    "roles/firebasedynamiclinks.admin",
    "roles/firebasedynamiclinks.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasedynamiclinks.destinations.update",
   "roles": [
    "roles/firebase.admin",
    "roles/firebase.growthAdmin",
    "roles/firebasedynamiclinks.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasedynamiclinks.domains.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebasedynamiclinks.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasedynamiclinks.domains.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/firebase.growthAdmin",
    "roles/firebasedynamiclinks.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasedynamiclinks.domains.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.viewer",
    "roles/firebasedynamiclinks.admin",
    "roles/firebasedynamiclinks.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasedynamiclinks.domains.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.viewer",
    "roles/firebasedynamiclinks.admin",
    "roles/firebasedynamiclinks.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasedynamiclinks.domains.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebasedynamiclinks.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasedynamiclinks.links.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebasedynamiclinks.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasedynamiclinks.links.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.viewer",
    "roles/firebasedynamiclinks.admin",
    "roles/firebasedynamiclinks.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasedynamiclinks.links.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.viewer",
    "roles/firebasedynamiclinks.admin",
    "roles/firebasedynamiclinks.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasedynamiclinks.links.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebasedynamiclinks.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasedynamiclinks.stats.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.viewer",
    "roles/firebasedynamiclinks.admin",
    "roles/firebasedynamiclinks.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseextensions.configs.create",
   "roles": [
    "roles/firebase.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseextensions.configs.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseextensions.configs.list",
   "roles": [
    "roles/firebase.admin",
    "roles/firebase.analyticsAdmin",
    "roles/editor",
    "roles/firebase.analyticsViewer",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseextensions.configs.update",
   "roles": [
    "roles/firebase.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasehosting.sites.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasehosting.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasehosting.sites.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasehosting.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasehosting.sites.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebasehosting.admin",
    "roles/firebasehosting.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasehosting.sites.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebasehosting.admin",
    "roles/firebasehosting.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasehosting.sites.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasehosting.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseinappmessaging.campaigns.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebaseinappmessaging.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseinappmessaging.campaigns.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebaseinappmessaging.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseinappmessaging.campaigns.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.viewer",
    "roles/firebaseinappmessaging.admin",
    "roles/firebaseinappmessaging.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseinappmessaging.campaigns.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.viewer",
    "roles/firebaseinappmessaging.admin",
    "roles/firebaseinappmessaging.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseinappmessaging.campaigns.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebaseinappmessaging.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseml.compressionjobs.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebaseml.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseml.compressionjobs.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebaseml.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseml.compressionjobs.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebaseml.admin",
    "roles/firebaseml.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseml.compressionjobs.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebaseml.admin",
    "roles/firebaseml.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseml.compressionjobs.start",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebaseml.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseml.compressionjobs.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebaseml.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseml.models.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebaseml.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseml.models.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebaseml.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseml.models.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebaseml.admin",
    "roles/firebaseml.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseml.models.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebaseml.admin",
    "roles/firebaseml.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseml.modelversions.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebaseml.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseml.modelversions.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebaseml.admin",
    "roles/firebaseml.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseml.modelversions.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebaseml.admin",
    "roles/firebaseml.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaseml.modelversions.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebaseml.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasenotifications.messages.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasenotifications.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasenotifications.messages.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasenotifications.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasenotifications.messages.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebasenotifications.admin",
    "roles/firebasenotifications.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasenotifications.messages.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebasenotifications.admin",
    "roles/firebasenotifications.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasenotifications.messages.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebasenotifications.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseperformance.config.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.qualityAdmin",
    "roles/firebaseperformance.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseperformance.config.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.qualityAdmin",
    "roles/firebaseperformance.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseperformance.config.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.qualityAdmin",
    "roles/firebaseperformance.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaseperformance.data.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.qualityAdmin",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/firebaseperformance.admin",
    "roles/firebaseperformance.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasepredictions.predictions.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebasepredictions.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasepredictions.predictions.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebasepredictions.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasepredictions.predictions.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.viewer",
    "roles/firebasepredictions.admin",
    "roles/firebasepredictions.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasepredictions.predictions.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.growthAdmin",
    "roles/firebasepredictions.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaserules.releases.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.managementServiceAgent",
    "roles/firebaserules.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaserules.releases.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.managementServiceAgent",
    "roles/firebaserules.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaserules.releases.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.managementServiceAgent",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebaserules.admin",
    "roles/firebaserules.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaserules.releases.getExecutable",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebaserules.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaserules.releases.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/firebaserules.admin",
    "roles/firebaserules.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaserules.releases.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebaserules.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaserules.rulesets.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.managementServiceAgent",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebaserules.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaserules.rulesets.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebaserules.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebaserules.rulesets.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/firebaserules.admin",
    "roles/firebaserules.viewer",
    "roles/owner"
   ]
  },
  {
   "name": "firebaserules.rulesets.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/firebaserules.admin",
    "roles/firebaserules.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebaserules.rulesets.test",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebaserules.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasestorage.buckets.addFirebase",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebasestorage.admin",
    "roles/owner"
   ]
  },
  {
   "name": "firebasestorage.buckets.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/firebasestorage.admin",
    "roles/firebasestorage.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasestorage.buckets.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.viewer",
    "roles/firebasestorage.admin",
    "roles/firebasestorage.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "firebasestorage.buckets.removeFirebase",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebasestorage.admin",
    "roles/owner"
   ]
  },
  {
   "name": "runtimeconfig.configs.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.configs.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.configs.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/viewer",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.configs.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.configs.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.operations.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/viewer",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.operations.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.variables.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.variables.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.variables.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/viewer",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.variables.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.variables.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.variables.watch",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/viewer",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.waiters.create",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.waiters.delete",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.waiters.get",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/viewer",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.waiters.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.waiters.update",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/owner",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "serviceusage.operations.list",
   "roles": [
    "roles/firebase.admin",
    "roles/editor",
    "roles/firebase.developAdmin",
    "roles/firebase.developViewer",
    "roles/firebase.qualityAdmin",
    "roles/firebase.growthAdmin",
    "roles/firebase.growthViewer",
    "roles/firebase.qualityViewer",
    "roles/firebase.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/serviceusage.serviceUsageConsumer",
    "roles/serviceusage.serviceUsageViewer",
    "roles/viewer",
    "roles/serviceusage.serviceUsageAdmin"
   ]
  },
  {
   "name": "remotebuildexecution.actions.set",
   "roles": [
    "roles/remotebuildexecution.actionCacheWriter"
   ]
  },
  {
   "name": "remotebuildexecution.blobs.create",
   "roles": [
    "roles/remotebuildexecution.actionCacheWriter",
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.artifactCreator",
    "roles/remotebuildexecution.artifactAdmin",
    "roles/remotebuildexecution.serviceAgent",
    "roles/remotebuildexecution.worker"
   ]
  },
  {
   "name": "apikeys.keys.create",
   "roles": [
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/owner",
    "roles/serviceusage.apiKeysAdmin"
   ]
  },
  {
   "name": "apikeys.keys.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/serviceusage.apiKeysAdmin"
   ]
  },
  {
   "name": "apikeys.keys.update",
   "roles": [
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/owner",
    "roles/serviceusage.apiKeysAdmin"
   ]
  },
  {
   "name": "appengine.memcache.addKey",
   "roles": [
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "appengine.memcache.flush",
   "roles": [
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "appengine.memcache.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "appengine.memcache.getKey",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "appengine.memcache.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "appengine.memcache.update",
   "roles": [
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "billing.resourceCosts.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "clientauthconfig.brands.create",
   "roles": [
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/oauthconfig.editor",
    "roles/owner"
   ]
  },
  {
   "name": "clientauthconfig.brands.delete",
   "roles": [
    "roles/editor",
    "roles/oauthconfig.editor",
    "roles/owner"
   ]
  },
  {
   "name": "clientauthconfig.clients.createSecret",
   "roles": [
    "roles/editor",
    "roles/oauthconfig.editor",
    "roles/owner"
   ]
  },
  {
   "name": "clientauthconfig.clients.getWithSecret",
   "roles": [
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/oauthconfig.editor",
    "roles/owner"
   ]
  },
  {
   "name": "clientauthconfig.clients.listWithSecrets",
   "roles": [
    "roles/editor",
    "roles/oauthconfig.editor",
    "roles/owner"
   ]
  },
  {
   "name": "clientauthconfig.clients.undelete",
   "roles": [
    "roles/editor",
    "roles/oauthconfig.editor",
    "roles/owner"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/activeDirectories.create",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.admin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/activeDirectories.delete",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.admin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/activeDirectories.get",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.viewer",
    "roles/netappcloudvolumes.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.viewer",
    "roles/iam.securityAdmin",
    "roles/netappcloudvolumes.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/activeDirectories.update",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.admin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/ipRanges.list",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.viewer",
    "roles/iam.securityAdmin",
    "roles/netappcloudvolumes.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/jobs.get",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.viewer",
    "roles/netappcloudvolumes.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/jobs.list",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.viewer",
    "roles/iam.securityAdmin",
    "roles/netappcloudvolumes.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/regions.list",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.viewer",
    "roles/iam.securityAdmin",
    "roles/netappcloudvolumes.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.viewer",
    "roles/iam.securityAdmin",
    "roles/netappcloudvolumes.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/snapshots.create",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.admin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/snapshots.delete",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.admin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/snapshots.get",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.viewer",
    "roles/netappcloudvolumes.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/snapshots.list",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.viewer",
    "roles/iam.securityAdmin",
    "roles/netappcloudvolumes.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/snapshots.update",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.admin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/volumes.create",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.admin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/volumes.delete",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.admin",
    "roles/owner"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/volumes.get",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.viewer",
    "roles/netappcloudvolumes.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/volumes.list",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.viewer",
    "roles/iam.securityAdmin",
    "roles/netappcloudvolumes.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "cloudvolumesgcp-api.netapp.com/volumes.update",
   "roles": [
    "roles/editor",
    "roles/netappcloudvolumes.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gameservices.gameServerClusters.create",
   "roles": [
    "roles/editor",
    "roles/gameservices.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gameservices.gameServerClusters.delete",
   "roles": [
    "roles/editor",
    "roles/gameservices.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gameservices.gameServerClusters.get",
   "roles": [
    "roles/editor",
    "roles/gameservices.viewer",
    "roles/gameservices.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gameservices.gameServerClusters.list",
   "roles": [
    "roles/editor",
    "roles/gameservices.viewer",
    "roles/iam.securityAdmin",
    "roles/gameservices.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gameservices.gameServerClusters.update",
   "roles": [
    "roles/editor",
    "roles/gameservices.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gameservices.gameServerConfigs.create",
   "roles": [
    "roles/editor",
    "roles/gameservices.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gameservices.gameServerConfigs.delete",
   "roles": [
    "roles/editor",
    "roles/gameservices.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gameservices.gameServerConfigs.get",
   "roles": [
    "roles/editor",
    "roles/gameservices.viewer",
    "roles/gameservices.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gameservices.gameServerConfigs.list",
   "roles": [
    "roles/editor",
    "roles/gameservices.viewer",
    "roles/iam.securityAdmin",
    "roles/gameservices.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gameservices.gameServerDeployments.create",
   "roles": [
    "roles/editor",
    "roles/gameservices.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gameservices.gameServerDeployments.delete",
   "roles": [
    "roles/editor",
    "roles/gameservices.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gameservices.gameServerDeployments.get",
   "roles": [
    "roles/editor",
    "roles/gameservices.viewer",
    "roles/gameservices.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gameservices.gameServerDeployments.list",
   "roles": [
    "roles/editor",
    "roles/gameservices.viewer",
    "roles/iam.securityAdmin",
    "roles/gameservices.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gameservices.gameServerDeployments.rollout",
   "roles": [
    "roles/editor",
    "roles/gameservices.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gameservices.gameServerDeployments.update",
   "roles": [
    "roles/editor",
    "roles/gameservices.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gameservices.locations.get",
   "roles": [
    "roles/editor",
    "roles/gameservices.viewer",
    "roles/gameservices.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gameservices.locations.list",
   "roles": [
    "roles/editor",
    "roles/gameservices.viewer",
    "roles/iam.securityAdmin",
    "roles/gameservices.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gameservices.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/gameservices.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gameservices.operations.delete",
   "roles": [
    "roles/editor",
    "roles/gameservices.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gameservices.operations.get",
   "roles": [
    "roles/editor",
    "roles/gameservices.viewer",
    "roles/gameservices.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gameservices.operations.list",
   "roles": [
    "roles/editor",
    "roles/gameservices.viewer",
    "roles/iam.securityAdmin",
    "roles/gameservices.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gameservices.realms.create",
   "roles": [
    "roles/editor",
    "roles/gameservices.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gameservices.realms.delete",
   "roles": [
    "roles/editor",
    "roles/gameservices.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gameservices.realms.get",
   "roles": [
    "roles/editor",
    "roles/gameservices.viewer",
    "roles/gameservices.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gameservices.realms.list",
   "roles": [
    "roles/editor",
    "roles/gameservices.viewer",
    "roles/iam.securityAdmin",
    "roles/gameservices.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gameservices.realms.update",
   "roles": [
    "roles/editor",
    "roles/gameservices.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gcp.redisenterprise.com/databases.create",
   "roles": [
    "roles/editor",
    "roles/redisenterprisecloud.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gcp.redisenterprise.com/databases.delete",
   "roles": [
    "roles/editor",
    "roles/redisenterprisecloud.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gcp.redisenterprise.com/databases.get",
   "roles": [
    "roles/editor",
    "roles/redisenterprisecloud.viewer",
    "roles/redisenterprisecloud.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gcp.redisenterprise.com/databases.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/redisenterprisecloud.viewer",
    "roles/redisenterprisecloud.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gcp.redisenterprise.com/databases.update",
   "roles": [
    "roles/editor",
    "roles/redisenterprisecloud.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gcp.redisenterprise.com/subscriptions.create",
   "roles": [
    "roles/editor",
    "roles/redisenterprisecloud.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gcp.redisenterprise.com/subscriptions.delete",
   "roles": [
    "roles/editor",
    "roles/redisenterprisecloud.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gcp.redisenterprise.com/subscriptions.get",
   "roles": [
    "roles/editor",
    "roles/redisenterprisecloud.viewer",
    "roles/redisenterprisecloud.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gcp.redisenterprise.com/subscriptions.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/redisenterprisecloud.viewer",
    "roles/redisenterprisecloud.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gcp.redisenterprise.com/subscriptions.update",
   "roles": [
    "roles/editor",
    "roles/redisenterprisecloud.admin",
    "roles/owner"
   ]
  },
  {
   "name": "genomics.datasets.create",
   "roles": [
    "roles/editor",
    "roles/genomics.admin",
    "roles/genomics.editor",
    "roles/owner"
   ]
  },
  {
   "name": "genomics.datasets.delete",
   "roles": [
    "roles/editor",
    "roles/genomics.admin",
    "roles/genomics.editor",
    "roles/owner"
   ]
  },
  {
   "name": "genomics.datasets.get",
   "roles": [
    "roles/editor",
    "roles/genomics.viewer",
    "roles/genomics.admin",
    "roles/genomics.editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "genomics.datasets.list",
   "roles": [
    "roles/editor",
    "roles/genomics.viewer",
    "roles/genomics.admin",
    "roles/genomics.editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "genomics.datasets.update",
   "roles": [
    "roles/editor",
    "roles/genomics.admin",
    "roles/genomics.editor",
    "roles/owner"
   ]
  },
  {
   "name": "genomics.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/genomics.admin",
    "roles/genomics.editor",
    "roles/genomics.pipelinesRunner",
    "roles/owner"
   ]
  },
  {
   "name": "genomics.operations.create",
   "roles": [
    "roles/editor",
    "roles/genomics.admin",
    "roles/genomics.editor",
    "roles/genomics.pipelinesRunner",
    "roles/owner"
   ]
  },
  {
   "name": "genomics.operations.get",
   "roles": [
    "roles/editor",
    "roles/genomics.viewer",
    "roles/genomics.admin",
    "roles/genomics.editor",
    "roles/genomics.pipelinesRunner",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "genomics.operations.list",
   "roles": [
    "roles/editor",
    "roles/genomics.viewer",
    "roles/genomics.admin",
    "roles/genomics.editor",
    "roles/genomics.pipelinesRunner",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gkehub.features.create",
   "roles": [
    "roles/editor",
    "roles/gkehub.admin",
    "roles/gkehub.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "gkehub.features.delete",
   "roles": [
    "roles/editor",
    "roles/gkehub.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gkehub.features.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.admin",
    "roles/iam.securityAdmin",
    "roles/gkehub.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gkehub.features.list",
   "roles": [
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.admin",
    "roles/iam.securityAdmin",
    "roles/gkehub.serviceAgent",
    "roles/gkehub.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gkehub.features.update",
   "roles": [
    "roles/editor",
    "roles/gkehub.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gkehub.gateway.delete",
   "roles": [
    "roles/editor",
    "roles/gkehub.gatewayAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "gkehub.gateway.get",
   "roles": [
    "roles/editor",
    "roles/gkehub.gatewayAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gkehub.gateway.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/gkehub.gatewayAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gkehub.gateway.patch",
   "roles": [
    "roles/editor",
    "roles/gkehub.gatewayAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "gkehub.gateway.post",
   "roles": [
    "roles/editor",
    "roles/gkehub.gatewayAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "gkehub.gateway.put",
   "roles": [
    "roles/editor",
    "roles/gkehub.gatewayAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "gkehub.memberships.create",
   "roles": [
    "roles/editor",
    "roles/gkehub.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gkehub.memberships.delete",
   "roles": [
    "roles/editor",
    "roles/gkehub.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gkehub.memberships.generateConnectManifest",
   "roles": [
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.admin",
    "roles/gkehub.serviceAgent",
    "roles/gkehub.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gkehub.memberships.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.admin",
    "roles/iam.securityAdmin",
    "roles/gkehub.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gkehub.memberships.update",
   "roles": [
    "roles/editor",
    "roles/gkehub.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gkehub.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/gkehub.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gkehub.operations.delete",
   "roles": [
    "roles/editor",
    "roles/gkehub.admin",
    "roles/owner"
   ]
  },
  {
   "name": "gkehub.operations.get",
   "roles": [
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.admin",
    "roles/gkehub.serviceAgent",
    "roles/gkehub.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gkehub.operations.list",
   "roles": [
    "roles/editor",
    "roles/gameservices.serviceAgent",
    "roles/gkehub.admin",
    "roles/iam.securityAdmin",
    "roles/gkehub.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gsuiteaddons.authorizations.get",
   "roles": [
    "roles/editor",
    "roles/gsuiteaddons.reader",
    "roles/gsuiteaddons.developer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gsuiteaddons.deployments.create",
   "roles": [
    "roles/editor",
    "roles/gsuiteaddons.developer",
    "roles/owner"
   ]
  },
  {
   "name": "gsuiteaddons.deployments.delete",
   "roles": [
    "roles/editor",
    "roles/gsuiteaddons.developer",
    "roles/owner"
   ]
  },
  {
   "name": "gsuiteaddons.deployments.execute",
   "roles": [
    "roles/editor",
    "roles/gsuiteaddons.developer",
    "roles/gsuiteaddons.tester",
    "roles/owner"
   ]
  },
  {
   "name": "gsuiteaddons.deployments.get",
   "roles": [
    "roles/editor",
    "roles/gsuiteaddons.reader",
    "roles/gsuiteaddons.developer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gsuiteaddons.deployments.install",
   "roles": [
    "roles/editor",
    "roles/gsuiteaddons.developer",
    "roles/gsuiteaddons.tester",
    "roles/owner"
   ]
  },
  {
   "name": "gsuiteaddons.deployments.installStatus",
   "roles": [
    "roles/editor",
    "roles/gsuiteaddons.developer",
    "roles/gsuiteaddons.tester",
    "roles/owner"
   ]
  },
  {
   "name": "gsuiteaddons.deployments.list",
   "roles": [
    "roles/editor",
    "roles/gsuiteaddons.reader",
    "roles/gsuiteaddons.developer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "gsuiteaddons.deployments.uninstall",
   "roles": [
    "roles/editor",
    "roles/gsuiteaddons.developer",
    "roles/gsuiteaddons.tester",
    "roles/owner"
   ]
  },
  {
   "name": "gsuiteaddons.deployments.update",
   "roles": [
    "roles/editor",
    "roles/gsuiteaddons.developer",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.annotationStores.create",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.annotationStores.delete",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.annotationStores.evaluate",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationStoreAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.annotationStores.export",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationStoreAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.annotationStores.get",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationEditor",
    "roles/healthcare.annotationReader",
    "roles/healthcare.annotationStoreAdmin",
    "roles/healthcare.annotationStoreViewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.annotationStores.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/healthcare.annotationStoreAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.annotationStores.import",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.annotationStores.list",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationEditor",
    "roles/iam.securityAdmin",
    "roles/healthcare.annotationReader",
    "roles/healthcare.annotationStoreAdmin",
    "roles/healthcare.annotationStoreViewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.annotationStores.update",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.annotations.create",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.annotations.delete",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.annotations.get",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationEditor",
    "roles/healthcare.annotationReader",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.annotations.list",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationEditor",
    "roles/iam.securityAdmin",
    "roles/healthcare.annotationReader",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.annotations.update",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.attributeDefinitions.create",
   "roles": [
    "roles/editor",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.attributeDefinitions.delete",
   "roles": [
    "roles/editor",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.attributeDefinitions.get",
   "roles": [
    "roles/editor",
    "roles/healthcare.attributeDefinitionReader",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.attributeDefinitions.list",
   "roles": [
    "roles/editor",
    "roles/healthcare.attributeDefinitionReader",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.attributeDefinitions.update",
   "roles": [
    "roles/editor",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.consentArtifacts.create",
   "roles": [
    "roles/editor",
    "roles/healthcare.consentArtifactAdmin",
    "roles/healthcare.consentArtifactEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.consentArtifacts.delete",
   "roles": [
    "roles/editor",
    "roles/healthcare.consentArtifactAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.consentArtifacts.get",
   "roles": [
    "roles/editor",
    "roles/healthcare.consentArtifactAdmin",
    "roles/healthcare.consentArtifactEditor",
    "roles/healthcare.consentArtifactReader",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.consentArtifacts.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/healthcare.consentArtifactAdmin",
    "roles/healthcare.consentArtifactEditor",
    "roles/healthcare.consentArtifactReader",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.consentStores.checkDataAccess",
   "roles": [
    "roles/editor",
    "roles/healthcare.attributeDefinitionReader",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/healthcare.consentStoreViewer",
    "roles/healthcare.consentArtifactAdmin",
    "roles/healthcare.consentArtifactEditor",
    "roles/healthcare.consentArtifactReader",
    "roles/healthcare.consentEditor",
    "roles/healthcare.consentReader",
    "roles/healthcare.consentStoreAdmin",
    "roles/healthcare.userDataMappingEditor",
    "roles/healthcare.userDataMappingReader",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.consentStores.create",
   "roles": [
    "roles/editor",
    "roles/healthcare.consentStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.consentStores.delete",
   "roles": [
    "roles/editor",
    "roles/healthcare.consentStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.consentStores.evaluateUserConsents",
   "roles": [
    "roles/editor",
    "roles/healthcare.attributeDefinitionReader",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/healthcare.consentStoreViewer",
    "roles/healthcare.consentArtifactAdmin",
    "roles/healthcare.consentArtifactEditor",
    "roles/healthcare.consentArtifactReader",
    "roles/healthcare.consentEditor",
    "roles/healthcare.consentReader",
    "roles/healthcare.consentStoreAdmin",
    "roles/healthcare.userDataMappingEditor",
    "roles/healthcare.userDataMappingReader",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.consentStores.get",
   "roles": [
    "roles/editor",
    "roles/healthcare.attributeDefinitionReader",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/healthcare.consentStoreViewer",
    "roles/healthcare.consentArtifactAdmin",
    "roles/healthcare.consentArtifactEditor",
    "roles/healthcare.consentArtifactReader",
    "roles/healthcare.consentEditor",
    "roles/healthcare.consentReader",
    "roles/healthcare.consentStoreAdmin",
    "roles/healthcare.userDataMappingEditor",
    "roles/healthcare.userDataMappingReader",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.consentStores.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/healthcare.consentStoreAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.consentStores.list",
   "roles": [
    "roles/editor",
    "roles/healthcare.attributeDefinitionReader",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/healthcare.consentStoreViewer",
    "roles/iam.securityAdmin",
    "roles/healthcare.consentArtifactAdmin",
    "roles/healthcare.consentArtifactEditor",
    "roles/healthcare.consentArtifactReader",
    "roles/healthcare.consentEditor",
    "roles/healthcare.consentReader",
    "roles/healthcare.consentStoreAdmin",
    "roles/healthcare.userDataMappingEditor",
    "roles/healthcare.userDataMappingReader",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.consentStores.queryAccessibleData",
   "roles": [
    "roles/editor",
    "roles/healthcare.attributeDefinitionReader",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/healthcare.consentStoreViewer",
    "roles/healthcare.consentArtifactAdmin",
    "roles/healthcare.consentArtifactEditor",
    "roles/healthcare.consentArtifactReader",
    "roles/healthcare.consentEditor",
    "roles/healthcare.consentReader",
    "roles/healthcare.consentStoreAdmin",
    "roles/healthcare.userDataMappingEditor",
    "roles/healthcare.userDataMappingReader",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.consentStores.update",
   "roles": [
    "roles/editor",
    "roles/healthcare.consentStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.consents.activate",
   "roles": [
    "roles/editor",
    "roles/healthcare.consentEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.consents.create",
   "roles": [
    "roles/editor",
    "roles/healthcare.consentEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.consents.delete",
   "roles": [
    "roles/editor",
    "roles/healthcare.consentEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.consents.get",
   "roles": [
    "roles/editor",
    "roles/healthcare.consentEditor",
    "roles/healthcare.consentReader",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.consents.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/healthcare.consentEditor",
    "roles/healthcare.consentReader",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.consents.reject",
   "roles": [
    "roles/editor",
    "roles/healthcare.consentEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.consents.revoke",
   "roles": [
    "roles/editor",
    "roles/healthcare.consentEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.consents.update",
   "roles": [
    "roles/editor",
    "roles/healthcare.consentEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.datasets.create",
   "roles": [
    "roles/editor",
    "roles/healthcare.datasetAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.datasets.deidentify",
   "roles": [
    "roles/editor",
    "roles/healthcare.datasetAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.datasets.delete",
   "roles": [
    "roles/editor",
    "roles/healthcare.datasetAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.datasets.get",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationEditor",
    "roles/healthcare.attributeDefinitionReader",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/healthcare.consentStoreViewer",
    "roles/healthcare.datasetAdmin",
    "roles/healthcare.dicomViewer",
    "roles/healthcare.fhirStoreViewer",
    "roles/healthcare.annotationReader",
    "roles/healthcare.annotationStoreAdmin",
    "roles/healthcare.annotationStoreViewer",
    "roles/healthcare.consentArtifactAdmin",
    "roles/healthcare.consentArtifactEditor",
    "roles/healthcare.consentArtifactReader",
    "roles/healthcare.consentEditor",
    "roles/healthcare.consentReader",
    "roles/healthcare.consentStoreAdmin",
    "roles/healthcare.datasetViewer",
    "roles/healthcare.dicomEditor",
    "roles/healthcare.dicomStoreAdmin",
    "roles/healthcare.dicomStoreViewer",
    "roles/healthcare.fhirResourceEditor",
    "roles/healthcare.fhirResourceReader",
    "roles/healthcare.fhirStoreAdmin",
    "roles/healthcare.hl7V2Consumer",
    "roles/healthcare.hl7V2Editor",
    "roles/healthcare.hl7V2Ingest",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/healthcare.hl7V2StoreViewer",
    "roles/healthcare.userDataMappingEditor",
    "roles/healthcare.userDataMappingReader",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.datasets.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/healthcare.datasetAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.datasets.list",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationEditor",
    "roles/healthcare.attributeDefinitionReader",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/healthcare.consentStoreViewer",
    "roles/healthcare.datasetAdmin",
    "roles/healthcare.dicomViewer",
    "roles/healthcare.fhirStoreViewer",
    "roles/iam.securityAdmin",
    "roles/healthcare.annotationReader",
    "roles/healthcare.annotationStoreAdmin",
    "roles/healthcare.annotationStoreViewer",
    "roles/healthcare.consentArtifactAdmin",
    "roles/healthcare.consentArtifactEditor",
    "roles/healthcare.consentArtifactReader",
    "roles/healthcare.consentEditor",
    "roles/healthcare.consentReader",
    "roles/healthcare.consentStoreAdmin",
    "roles/healthcare.datasetViewer",
    "roles/healthcare.dicomEditor",
    "roles/healthcare.dicomStoreAdmin",
    "roles/healthcare.dicomStoreViewer",
    "roles/healthcare.fhirResourceEditor",
    "roles/healthcare.fhirResourceReader",
    "roles/healthcare.fhirStoreAdmin",
    "roles/healthcare.hl7V2Consumer",
    "roles/healthcare.hl7V2Editor",
    "roles/healthcare.hl7V2Ingest",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/healthcare.hl7V2StoreViewer",
    "roles/healthcare.userDataMappingEditor",
    "roles/healthcare.userDataMappingReader",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.datasets.update",
   "roles": [
    "roles/editor",
    "roles/healthcare.datasetAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.dicomStores.create",
   "roles": [
    "roles/editor",
    "roles/healthcare.dicomStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.dicomStores.deidentify",
   "roles": [
    "roles/editor",
    "roles/healthcare.dicomStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.dicomStores.delete",
   "roles": [
    "roles/editor",
    "roles/healthcare.dicomStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.dicomStores.dicomWebDelete",
   "roles": [
    "roles/editor",
    "roles/healthcare.dicomEditor",
    "roles/healthcare.dicomStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.dicomStores.dicomWebRead",
   "roles": [
    "roles/editor",
    "roles/healthcare.dicomViewer",
    "roles/healthcare.dicomEditor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.dicomStores.dicomWebWrite",
   "roles": [
    "roles/editor",
    "roles/healthcare.dicomEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.dicomStores.export",
   "roles": [
    "roles/editor",
    "roles/healthcare.dicomViewer",
    "roles/healthcare.dicomEditor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.dicomStores.get",
   "roles": [
    "roles/editor",
    "roles/healthcare.dicomViewer",
    "roles/healthcare.dicomEditor",
    "roles/healthcare.dicomStoreAdmin",
    "roles/healthcare.dicomStoreViewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.dicomStores.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/healthcare.dicomStoreAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.dicomStores.import",
   "roles": [
    "roles/editor",
    "roles/healthcare.dicomEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.dicomStores.list",
   "roles": [
    "roles/editor",
    "roles/healthcare.dicomViewer",
    "roles/iam.securityAdmin",
    "roles/healthcare.dicomEditor",
    "roles/healthcare.dicomStoreAdmin",
    "roles/healthcare.dicomStoreViewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.dicomStores.update",
   "roles": [
    "roles/editor",
    "roles/healthcare.dicomStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.fhirResources.create",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirResourceEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.fhirResources.delete",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirResourceEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.fhirResources.get",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirResourceEditor",
    "roles/healthcare.fhirResourceReader",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.fhirResources.patch",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirResourceEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.fhirResources.purge",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.fhirResources.translateConceptMap",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirResourceEditor",
    "roles/healthcare.fhirResourceReader",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.fhirResources.update",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirResourceEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.fhirStores.create",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.fhirStores.deidentify",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.fhirStores.delete",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.fhirStores.executeBundle",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirResourceEditor",
    "roles/healthcare.fhirResourceReader",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.fhirStores.export",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirStoreAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.fhirStores.get",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirStoreViewer",
    "roles/healthcare.fhirResourceEditor",
    "roles/healthcare.fhirResourceReader",
    "roles/healthcare.fhirStoreAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.fhirStores.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/healthcare.fhirStoreAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.fhirStores.import",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.fhirStores.list",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirStoreViewer",
    "roles/iam.securityAdmin",
    "roles/healthcare.fhirResourceEditor",
    "roles/healthcare.fhirResourceReader",
    "roles/healthcare.fhirStoreAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.fhirStores.searchResources",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirResourceEditor",
    "roles/healthcare.fhirResourceReader",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.fhirStores.update",
   "roles": [
    "roles/editor",
    "roles/healthcare.fhirStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.hl7V2Messages.create",
   "roles": [
    "roles/editor",
    "roles/healthcare.hl7V2Consumer",
    "roles/healthcare.hl7V2Editor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.hl7V2Messages.delete",
   "roles": [
    "roles/editor",
    "roles/healthcare.hl7V2Editor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.hl7V2Messages.get",
   "roles": [
    "roles/editor",
    "roles/healthcare.hl7V2Consumer",
    "roles/healthcare.hl7V2Editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.hl7V2Messages.ingest",
   "roles": [
    "roles/editor",
    "roles/healthcare.hl7V2Editor",
    "roles/healthcare.hl7V2Ingest",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.hl7V2Messages.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/healthcare.hl7V2Consumer",
    "roles/healthcare.hl7V2Editor",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.hl7V2Messages.update",
   "roles": [
    "roles/editor",
    "roles/healthcare.hl7V2Consumer",
    "roles/healthcare.hl7V2Editor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.hl7V2Stores.create",
   "roles": [
    "roles/editor",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.hl7V2Stores.delete",
   "roles": [
    "roles/editor",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.hl7V2Stores.get",
   "roles": [
    "roles/editor",
    "roles/healthcare.hl7V2Consumer",
    "roles/healthcare.hl7V2Editor",
    "roles/healthcare.hl7V2Ingest",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/healthcare.hl7V2StoreViewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.hl7V2Stores.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.hl7V2Stores.import",
   "roles": [
    "roles/editor",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.hl7V2Stores.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/healthcare.hl7V2Consumer",
    "roles/healthcare.hl7V2Editor",
    "roles/healthcare.hl7V2Ingest",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/healthcare.hl7V2StoreViewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.hl7V2Stores.update",
   "roles": [
    "roles/editor",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.locations.get",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationEditor",
    "roles/healthcare.attributeDefinitionReader",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/healthcare.consentStoreViewer",
    "roles/healthcare.datasetAdmin",
    "roles/healthcare.dicomViewer",
    "roles/healthcare.fhirStoreViewer",
    "roles/healthcare.nlpServiceViewer",
    "roles/healthcare.annotationReader",
    "roles/healthcare.annotationStoreAdmin",
    "roles/healthcare.annotationStoreViewer",
    "roles/healthcare.consentArtifactAdmin",
    "roles/healthcare.consentArtifactEditor",
    "roles/healthcare.consentArtifactReader",
    "roles/healthcare.consentEditor",
    "roles/healthcare.consentReader",
    "roles/healthcare.consentStoreAdmin",
    "roles/healthcare.datasetViewer",
    "roles/healthcare.dicomEditor",
    "roles/healthcare.dicomStoreAdmin",
    "roles/healthcare.dicomStoreViewer",
    "roles/healthcare.fhirResourceEditor",
    "roles/healthcare.fhirResourceReader",
    "roles/healthcare.fhirStoreAdmin",
    "roles/healthcare.hl7V2Consumer",
    "roles/healthcare.hl7V2Editor",
    "roles/healthcare.hl7V2Ingest",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/healthcare.hl7V2StoreViewer",
    "roles/healthcare.userDataMappingEditor",
    "roles/healthcare.userDataMappingReader",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.locations.list",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationEditor",
    "roles/healthcare.attributeDefinitionReader",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/healthcare.consentStoreViewer",
    "roles/healthcare.datasetAdmin",
    "roles/healthcare.dicomViewer",
    "roles/healthcare.fhirStoreViewer",
    "roles/healthcare.nlpServiceViewer",
    "roles/iam.securityAdmin",
    "roles/healthcare.annotationReader",
    "roles/healthcare.annotationStoreAdmin",
    "roles/healthcare.annotationStoreViewer",
    "roles/healthcare.consentArtifactAdmin",
    "roles/healthcare.consentArtifactEditor",
    "roles/healthcare.consentArtifactReader",
    "roles/healthcare.consentEditor",
    "roles/healthcare.consentReader",
    "roles/healthcare.consentStoreAdmin",
    "roles/healthcare.datasetViewer",
    "roles/healthcare.dicomEditor",
    "roles/healthcare.dicomStoreAdmin",
    "roles/healthcare.dicomStoreViewer",
    "roles/healthcare.fhirResourceEditor",
    "roles/healthcare.fhirResourceReader",
    "roles/healthcare.fhirStoreAdmin",
    "roles/healthcare.hl7V2Consumer",
    "roles/healthcare.hl7V2Editor",
    "roles/healthcare.hl7V2Ingest",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/healthcare.hl7V2StoreViewer",
    "roles/healthcare.userDataMappingEditor",
    "roles/healthcare.userDataMappingReader",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.nlpservice.analyzeEntities",
   "roles": [
    "roles/editor",
    "roles/healthcare.nlpServiceViewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/healthcare.datasetAdmin",
    "roles/healthcare.dicomEditor",
    "roles/healthcare.dicomStoreAdmin",
    "roles/healthcare.fhirResourceEditor",
    "roles/healthcare.fhirStoreAdmin",
    "roles/healthcare.hl7V2Editor",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.operations.get",
   "roles": [
    "roles/editor",
    "roles/healthcare.annotationEditor",
    "roles/healthcare.attributeDefinitionReader",
    "roles/healthcare.attributeDefinitionEditor",
    "roles/healthcare.consentStoreViewer",
    "roles/healthcare.datasetAdmin",
    "roles/healthcare.dicomViewer",
    "roles/healthcare.fhirStoreViewer",
    "roles/healthcare.annotationReader",
    "roles/healthcare.annotationStoreAdmin",
    "roles/healthcare.annotationStoreViewer",
    "roles/healthcare.consentArtifactAdmin",
    "roles/healthcare.consentArtifactEditor",
    "roles/healthcare.consentArtifactReader",
    "roles/healthcare.consentEditor",
    "roles/healthcare.consentReader",
    "roles/healthcare.consentStoreAdmin",
    "roles/healthcare.datasetViewer",
    "roles/healthcare.dicomEditor",
    "roles/healthcare.dicomStoreAdmin",
    "roles/healthcare.dicomStoreViewer",
    "roles/healthcare.fhirResourceEditor",
    "roles/healthcare.fhirResourceReader",
    "roles/healthcare.fhirStoreAdmin",
    "roles/healthcare.hl7V2Consumer",
    "roles/healthcare.hl7V2Editor",
    "roles/healthcare.hl7V2Ingest",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/healthcare.hl7V2StoreViewer",
    "roles/healthcare.userDataMappingEditor",
    "roles/healthcare.userDataMappingReader",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.operations.list",
   "roles": [
    "roles/editor",
    "roles/healthcare.datasetAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.userDataMappings.archive",
   "roles": [
    "roles/editor",
    "roles/healthcare.userDataMappingEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.userDataMappings.create",
   "roles": [
    "roles/editor",
    "roles/healthcare.userDataMappingEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.userDataMappings.delete",
   "roles": [
    "roles/editor",
    "roles/healthcare.userDataMappingEditor",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.userDataMappings.get",
   "roles": [
    "roles/editor",
    "roles/healthcare.userDataMappingEditor",
    "roles/healthcare.userDataMappingReader",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.userDataMappings.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/healthcare.userDataMappingEditor",
    "roles/healthcare.userDataMappingReader",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "healthcare.userDataMappings.update",
   "roles": [
    "roles/editor",
    "roles/healthcare.userDataMappingEditor",
    "roles/owner"
   ]
  },
  {
   "name": "iam.googleapis.com/workloadIdentityPoolProviders.create",
   "roles": [
    "roles/editor",
    "roles/iam.workloadIdentityPoolAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.googleapis.com/workloadIdentityPoolProviders.delete",
   "roles": [
    "roles/editor",
    "roles/iam.workloadIdentityPoolAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.googleapis.com/workloadIdentityPoolProviders.get",
   "roles": [
    "roles/editor",
    "roles/iam.workloadIdentityPoolAdmin",
    "roles/iam.workloadIdentityPoolViewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "iam.googleapis.com/workloadIdentityPoolProviders.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.workloadIdentityPoolAdmin",
    "roles/iam.workloadIdentityPoolViewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "iam.googleapis.com/workloadIdentityPoolProviders.undelete",
   "roles": [
    "roles/editor",
    "roles/iam.workloadIdentityPoolAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.googleapis.com/workloadIdentityPoolProviders.update",
   "roles": [
    "roles/editor",
    "roles/iam.workloadIdentityPoolAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.googleapis.com/workloadIdentityPools.create",
   "roles": [
    "roles/editor",
    "roles/iam.workloadIdentityPoolAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.googleapis.com/workloadIdentityPools.delete",
   "roles": [
    "roles/editor",
    "roles/iam.workloadIdentityPoolAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.googleapis.com/workloadIdentityPools.get",
   "roles": [
    "roles/editor",
    "roles/iam.workloadIdentityPoolAdmin",
    "roles/iam.workloadIdentityPoolViewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "iam.googleapis.com/workloadIdentityPools.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.workloadIdentityPoolAdmin",
    "roles/iam.workloadIdentityPoolViewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "iam.googleapis.com/workloadIdentityPools.undelete",
   "roles": [
    "roles/editor",
    "roles/iam.workloadIdentityPoolAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.googleapis.com/workloadIdentityPools.update",
   "roles": [
    "roles/editor",
    "roles/iam.workloadIdentityPoolAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.roles.get",
   "roles": [
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/iam.organizationRoleAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/iam.organizationRoleViewer",
    "roles/iam.roleAdmin",
    "roles/iam.roleViewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "iam.roles.list",
   "roles": [
    "roles/editor",
    "roles/iam.organizationRoleAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/iam.organizationRoleViewer",
    "roles/iam.roleAdmin",
    "roles/iam.roleViewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "iam.serviceAccountKeys.create",
   "roles": [
    "roles/editor",
    "roles/iam.serviceAccountKeyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.serviceAccountKeys.delete",
   "roles": [
    "roles/editor",
    "roles/iam.serviceAccountKeyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.serviceAccountKeys.get",
   "roles": [
    "roles/editor",
    "roles/iam.serviceAccountKeyAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "iam.serviceAccountKeys.list",
   "roles": [
    "roles/editor",
    "roles/iam.serviceAccountKeyAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "iam.serviceAccounts.create",
   "roles": [
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/iam.serviceAccountCreator",
    "roles/iam.serviceAccountAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.serviceAccounts.delete",
   "roles": [
    "roles/editor",
    "roles/iam.serviceAccountDeleter",
    "roles/iam.serviceAccountAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.serviceAccounts.disable",
   "roles": [
    "roles/editor",
    "roles/iam.serviceAccountAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.serviceAccounts.enable",
   "roles": [
    "roles/editor",
    "roles/iam.serviceAccountAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.serviceAccounts.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/iam.serviceAccountAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "iam.serviceAccounts.update",
   "roles": [
    "roles/editor",
    "roles/iam.serviceAccountAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.projects.getSettings",
   "roles": [
    "roles/editor",
    "roles/iap.settingsAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "iap.projects.updateSettings",
   "roles": [
    "roles/editor",
    "roles/iap.settingsAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.web.getSettings",
   "roles": [
    "roles/editor",
    "roles/iap.settingsAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "iap.web.updateSettings",
   "roles": [
    "roles/editor",
    "roles/iap.settingsAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.webServiceVersions.getSettings",
   "roles": [
    "roles/editor",
    "roles/iap.settingsAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "iap.webServiceVersions.updateSettings",
   "roles": [
    "roles/editor",
    "roles/iap.settingsAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.webServices.getSettings",
   "roles": [
    "roles/editor",
    "roles/iap.settingsAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "iap.webServices.updateSettings",
   "roles": [
    "roles/editor",
    "roles/iap.settingsAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.webTypes.getSettings",
   "roles": [
    "roles/editor",
    "roles/iap.settingsAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "iap.webTypes.updateSettings",
   "roles": [
    "roles/editor",
    "roles/iap.settingsAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "identityplatform.workloadPoolProviders.create",
   "roles": [
    "roles/editor",
    "roles/identityplatform.admin",
    "roles/owner"
   ]
  },
  {
   "name": "identityplatform.workloadPoolProviders.delete",
   "roles": [
    "roles/editor",
    "roles/identityplatform.admin",
    "roles/owner"
   ]
  },
  {
   "name": "identityplatform.workloadPoolProviders.get",
   "roles": [
    "roles/editor",
    "roles/identityplatform.admin",
    "roles/identityplatform.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "identityplatform.workloadPoolProviders.list",
   "roles": [
    "roles/editor",
    "roles/identityplatform.admin",
    "roles/identityplatform.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "identityplatform.workloadPoolProviders.undelete",
   "roles": [
    "roles/editor",
    "roles/identityplatform.admin",
    "roles/owner"
   ]
  },
  {
   "name": "identityplatform.workloadPoolProviders.update",
   "roles": [
    "roles/editor",
    "roles/identityplatform.admin",
    "roles/owner"
   ]
  },
  {
   "name": "identityplatform.workloadPools.create",
   "roles": [
    "roles/editor",
    "roles/identityplatform.admin",
    "roles/owner"
   ]
  },
  {
   "name": "identityplatform.workloadPools.delete",
   "roles": [
    "roles/editor",
    "roles/identityplatform.admin",
    "roles/owner"
   ]
  },
  {
   "name": "identityplatform.workloadPools.get",
   "roles": [
    "roles/editor",
    "roles/identityplatform.admin",
    "roles/identityplatform.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "identityplatform.workloadPools.list",
   "roles": [
    "roles/editor",
    "roles/identityplatform.admin",
    "roles/identityplatform.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "identityplatform.workloadPools.undelete",
   "roles": [
    "roles/editor",
    "roles/identityplatform.admin",
    "roles/owner"
   ]
  },
  {
   "name": "identityplatform.workloadPools.update",
   "roles": [
    "roles/editor",
    "roles/identityplatform.admin",
    "roles/owner"
   ]
  },
  {
   "name": "lifesciences.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/lifesciences.admin",
    "roles/lifesciences.workflowsRunner",
    "roles/lifesciences.editor",
    "roles/owner"
   ]
  },
  {
   "name": "lifesciences.operations.get",
   "roles": [
    "roles/editor",
    "roles/lifesciences.viewer",
    "roles/lifesciences.admin",
    "roles/lifesciences.workflowsRunner",
    "roles/lifesciences.editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "lifesciences.operations.list",
   "roles": [
    "roles/editor",
    "roles/lifesciences.viewer",
    "roles/lifesciences.admin",
    "roles/lifesciences.workflowsRunner",
    "roles/lifesciences.editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "lifesciences.workflows.run",
   "roles": [
    "roles/editor",
    "roles/lifesciences.admin",
    "roles/lifesciences.workflowsRunner",
    "roles/lifesciences.editor",
    "roles/owner"
   ]
  },
  {
   "name": "logging.logEntries.download",
   "roles": [
    "roles/editor",
    "roles/logging.viewAccessor",
    "roles/logging.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "logging.logs.delete",
   "roles": [
    "roles/editor",
    "roles/logging.admin",
    "roles/owner"
   ]
  },
  {
   "name": "logging.views.listLogs",
   "roles": [
    "roles/editor",
    "roles/logging.viewAccessor",
    "roles/logging.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "logging.views.listResourceKeys",
   "roles": [
    "roles/editor",
    "roles/logging.viewAccessor",
    "roles/logging.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "logging.views.listResourceValues",
   "roles": [
    "roles/editor",
    "roles/logging.viewAccessor",
    "roles/logging.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "managedidentities.domains.attachTrust",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/managedidentities.domainAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "managedidentities.domains.create",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/owner"
   ]
  },
  {
   "name": "managedidentities.domains.delete",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/managedidentities.domainAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "managedidentities.domains.detachTrust",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/managedidentities.domainAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "managedidentities.domains.get",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/managedidentities.domainAdmin",
    "roles/managedidentities.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "managedidentities.domains.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/managedidentities.domainAdmin",
    "roles/managedidentities.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "managedidentities.domains.list",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/managedidentities.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "managedidentities.domains.reconfigureTrust",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/managedidentities.domainAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "managedidentities.domains.resetpassword",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/managedidentities.domainAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "managedidentities.domains.update",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/managedidentities.domainAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "managedidentities.domains.updateLDAPSSettings",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/managedidentities.domainAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "managedidentities.domains.validateTrust",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/managedidentities.domainAdmin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "managedidentities.locations.get",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/managedidentities.domainAdmin",
    "roles/managedidentities.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "managedidentities.locations.list",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/managedidentities.domainAdmin",
    "roles/managedidentities.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "managedidentities.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/owner"
   ]
  },
  {
   "name": "managedidentities.operations.delete",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/owner"
   ]
  },
  {
   "name": "managedidentities.operations.get",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/managedidentities.domainAdmin",
    "roles/managedidentities.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "managedidentities.operations.list",
   "roles": [
    "roles/editor",
    "roles/managedidentities.admin",
    "roles/managedidentities.domainAdmin",
    "roles/managedidentities.viewer",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "memcache.instances.applyParameters",
   "roles": [
    "roles/editor",
    "roles/memcache.editor",
    "roles/memcache.admin",
    "roles/owner"
   ]
  },
  {
   "name": "memcache.instances.applySoftwareUpdate",
   "roles": [
    "roles/editor",
    "roles/memcache.admin",
    "roles/owner"
   ]
  },
  {
   "name": "memcache.instances.create",
   "roles": [
    "roles/editor",
    "roles/memcache.admin",
    "roles/owner"
   ]
  },
  {
   "name": "memcache.instances.delete",
   "roles": [
    "roles/editor",
    "roles/memcache.admin",
    "roles/owner"
   ]
  },
  {
   "name": "memcache.instances.get",
   "roles": [
    "roles/editor",
    "roles/memcache.editor",
    "roles/memcache.viewer",
    "roles/memcache.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "memcache.instances.list",
   "roles": [
    "roles/editor",
    "roles/memcache.editor",
    "roles/memcache.viewer",
    "roles/iam.securityAdmin",
    "roles/memcache.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "memcache.instances.update",
   "roles": [
    "roles/editor",
    "roles/memcache.editor",
    "roles/memcache.admin",
    "roles/owner"
   ]
  },
  {
   "name": "memcache.instances.updateParameters",
   "roles": [
    "roles/editor",
    "roles/memcache.editor",
    "roles/memcache.admin",
    "roles/owner"
   ]
  },
  {
   "name": "memcache.locations.get",
   "roles": [
    "roles/editor",
    "roles/memcache.editor",
    "roles/memcache.viewer",
    "roles/memcache.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "memcache.locations.list",
   "roles": [
    "roles/editor",
    "roles/memcache.editor",
    "roles/memcache.viewer",
    "roles/iam.securityAdmin",
    "roles/memcache.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "memcache.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/memcache.editor",
    "roles/memcache.admin",
    "roles/owner"
   ]
  },
  {
   "name": "memcache.operations.delete",
   "roles": [
    "roles/editor",
    "roles/memcache.editor",
    "roles/memcache.admin",
    "roles/owner"
   ]
  },
  {
   "name": "memcache.operations.get",
   "roles": [
    "roles/editor",
    "roles/memcache.editor",
    "roles/memcache.viewer",
    "roles/memcache.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "memcache.operations.list",
   "roles": [
    "roles/editor",
    "roles/memcache.editor",
    "roles/memcache.viewer",
    "roles/iam.securityAdmin",
    "roles/memcache.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "metastore.imports.create",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/metastore.metadataOperator",
    "roles/owner"
   ]
  },
  {
   "name": "metastore.imports.get",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/metastore.metadataOperator",
    "roles/metastore.user",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "metastore.imports.list",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/metastore.metadataOperator",
    "roles/metastore.user",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "metastore.imports.update",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/metastore.metadataOperator",
    "roles/owner"
   ]
  },
  {
   "name": "metastore.locations.get",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/metastore.metadataOperator",
    "roles/metastore.user",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "metastore.locations.list",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/metastore.metadataOperator",
    "roles/metastore.user",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "metastore.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/owner"
   ]
  },
  {
   "name": "metastore.operations.delete",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/owner"
   ]
  },
  {
   "name": "metastore.operations.get",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/metastore.metadataOperator",
    "roles/metastore.user",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "metastore.operations.list",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/metastore.metadataOperator",
    "roles/metastore.user",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "metastore.services.create",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/owner"
   ]
  },
  {
   "name": "metastore.services.delete",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/owner"
   ]
  },
  {
   "name": "metastore.services.export",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/metastore.metadataOperator",
    "roles/metastore.user",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "metastore.services.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/metastore.metadataOperator",
    "roles/metastore.user",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "metastore.services.list",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/metastore.metadataOperator",
    "roles/metastore.user",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "metastore.services.restore",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/metastore.metadataOperator",
    "roles/owner"
   ]
  },
  {
   "name": "metastore.services.update",
   "roles": [
    "roles/editor",
    "roles/metastore.admin",
    "roles/metastore.editor",
    "roles/owner"
   ]
  },
  {
   "name": "ml.jobs.cancel",
   "roles": [
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.jobOwner",
    "roles/owner"
   ]
  },
  {
   "name": "ml.jobs.update",
   "roles": [
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.jobOwner",
    "roles/owner"
   ]
  },
  {
   "name": "ml.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/ml.admin",
    "roles/ml.operationOwner",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.alertPolicies.create",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.alertPolicyEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.alertPolicies.delete",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.alertPolicyEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.alertPolicies.update",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.alertPolicyEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.dashboards.create",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.dashboardEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.dashboards.delete",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.dashboardEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.dashboards.update",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.dashboardEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.groups.create",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.groups.delete",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.groups.update",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.metricDescriptors.delete",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.notificationChannels.create",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.notificationChannelEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.notificationChannels.delete",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.notificationChannelEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.notificationChannels.sendVerificationCode",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.notificationChannelEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.notificationChannels.update",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.notificationChannelEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.notificationChannels.verify",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.notificationChannelEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.publicWidgets.create",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.publicWidgets.delete",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.publicWidgets.update",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.services.create",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.servicesEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.services.delete",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.servicesEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.services.update",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.servicesEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.slos.create",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.servicesEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.slos.delete",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.servicesEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.slos.update",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/monitoring.servicesEditor",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.uptimeCheckConfigs.create",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.uptimeCheckConfigEditor",
    "roles/monitoring.admin",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.uptimeCheckConfigs.delete",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.uptimeCheckConfigEditor",
    "roles/monitoring.admin",
    "roles/owner"
   ]
  },
  {
   "name": "monitoring.uptimeCheckConfigs.update",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.uptimeCheckConfigEditor",
    "roles/monitoring.admin",
    "roles/owner"
   ]
  },
  {
   "name": "networkmanagement.connectivitytests.create",
   "roles": [
    "roles/editor",
    "roles/networkmanagement.admin",
    "roles/owner"
   ]
  },
  {
   "name": "networkmanagement.connectivitytests.delete",
   "roles": [
    "roles/editor",
    "roles/networkmanagement.admin",
    "roles/owner"
   ]
  },
  {
   "name": "networkmanagement.connectivitytests.get",
   "roles": [
    "roles/editor",
    "roles/networkmanagement.admin",
    "roles/networkmanagement.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkmanagement.connectivitytests.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.admin",
    "roles/networkmanagement.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkmanagement.connectivitytests.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.admin",
    "roles/networkmanagement.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkmanagement.connectivitytests.rerun",
   "roles": [
    "roles/editor",
    "roles/networkmanagement.admin",
    "roles/owner"
   ]
  },
  {
   "name": "networkmanagement.connectivitytests.update",
   "roles": [
    "roles/editor",
    "roles/networkmanagement.admin",
    "roles/owner"
   ]
  },
  {
   "name": "networkmanagement.locations.get",
   "roles": [
    "roles/editor",
    "roles/networkmanagement.admin",
    "roles/networkmanagement.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkmanagement.locations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.admin",
    "roles/networkmanagement.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkmanagement.operations.get",
   "roles": [
    "roles/editor",
    "roles/networkmanagement.admin",
    "roles/networkmanagement.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "networkmanagement.operations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/networkmanagement.admin",
    "roles/networkmanagement.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.environments.create",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.environments.delete",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.environments.get",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.environments.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.environments.list",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.executions.create",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.executions.delete",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.executions.get",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.executions.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.executions.list",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.instances.checkUpgradability",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.instances.create",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.instances.delete",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.instances.get",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.instances.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.instances.list",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.instances.reset",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.instances.setAccelerator",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.instances.setLabels",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.instances.setMachineType",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.instances.start",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.instances.stop",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.instances.update",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.instances.updateConfig",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.instances.updateShieldInstanceConfig",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.instances.upgrade",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.instances.use",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.locations.get",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.locations.list",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.operations.delete",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.operations.get",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.operations.list",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.schedules.create",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.schedules.delete",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.schedules.get",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.schedules.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "notebooks.schedules.list",
   "roles": [
    "roles/editor",
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.legacyViewer",
    "roles/notebooks.runner",
    "roles/notebooks.serviceAgent",
    "roles/notebooks.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "oauthconfig.clientpolicy.get",
   "roles": [
    "roles/editor",
    "roles/oauthconfig.editor",
    "roles/oauthconfig.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "oauthconfig.testusers.get",
   "roles": [
    "roles/editor",
    "roles/oauthconfig.editor",
    "roles/oauthconfig.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "oauthconfig.testusers.update",
   "roles": [
    "roles/editor",
    "roles/oauthconfig.editor",
    "roles/owner"
   ]
  },
  {
   "name": "oauthconfig.verification.get",
   "roles": [
    "roles/editor",
    "roles/oauthconfig.editor",
    "roles/oauthconfig.viewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "oauthconfig.verification.submit",
   "roles": [
    "roles/editor",
    "roles/oauthconfig.editor",
    "roles/owner"
   ]
  },
  {
   "name": "oauthconfig.verification.update",
   "roles": [
    "roles/editor",
    "roles/oauthconfig.editor",
    "roles/owner"
   ]
  },
  {
   "name": "ondemandscanning.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/ondemandscanning.admin",
    "roles/owner"
   ]
  },
  {
   "name": "ondemandscanning.operations.delete",
   "roles": [
    "roles/editor",
    "roles/ondemandscanning.admin",
    "roles/owner"
   ]
  },
  {
   "name": "ondemandscanning.operations.get",
   "roles": [
    "roles/editor",
    "roles/ondemandscanning.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ondemandscanning.operations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/ondemandscanning.admin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ondemandscanning.operations.wait",
   "roles": [
    "roles/editor",
    "roles/ondemandscanning.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ondemandscanning.scans.analyzePackages",
   "roles": [
    "roles/editor",
    "roles/ondemandscanning.admin",
    "roles/owner"
   ]
  },
  {
   "name": "ondemandscanning.scans.listVulnerabilities",
   "roles": [
    "roles/editor",
    "roles/ondemandscanning.admin",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "ondemandscanning.scans.scan",
   "roles": [
    "roles/editor",
    "roles/ondemandscanning.admin",
    "roles/owner"
   ]
  },
  {
   "name": "opsconfigmonitoring.resourceMetadata.write",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/opsconfigmonitoring.resourceMetadata.writer",
    "roles/owner"
   ]
  },
  {
   "name": "osconfig.guestPolicies.create",
   "roles": [
    "roles/editor",
    "roles/osconfig.guestPolicyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "osconfig.guestPolicies.delete",
   "roles": [
    "roles/editor",
    "roles/osconfig.guestPolicyAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "osconfig.guestPolicies.get",
   "roles": [
    "roles/editor",
    "roles/osconfig.guestPolicyAdmin",
    "roles/osconfig.guestPolicyEditor",
    "roles/osconfig.guestPolicyViewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "osconfig.guestPolicies.list",
   "roles": [
    "roles/editor",
    "roles/osconfig.guestPolicyAdmin",
    "roles/osconfig.guestPolicyEditor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/osconfig.guestPolicyViewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "osconfig.guestPolicies.update",
   "roles": [
    "roles/editor",
    "roles/osconfig.guestPolicyAdmin",
    "roles/osconfig.guestPolicyEditor",
    "roles/owner"
   ]
  },
  {
   "name": "osconfig.patchDeployments.create",
   "roles": [
    "roles/editor",
    "roles/osconfig.patchDeploymentAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "osconfig.patchDeployments.delete",
   "roles": [
    "roles/editor",
    "roles/osconfig.patchDeploymentAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "osconfig.patchDeployments.execute",
   "roles": [
    "roles/editor",
    "roles/osconfig.patchDeploymentAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "osconfig.patchDeployments.get",
   "roles": [
    "roles/editor",
    "roles/osconfig.patchDeploymentAdmin",
    "roles/osconfig.patchDeploymentViewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "osconfig.patchDeployments.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/osconfig.patchDeploymentAdmin",
    "roles/iam.securityReviewer",
    "roles/osconfig.patchDeploymentViewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "osconfig.patchDeployments.update",
   "roles": [
    "roles/editor",
    "roles/osconfig.patchDeploymentAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "osconfig.patchJobs.exec",
   "roles": [
    "roles/editor",
    "roles/osconfig.patchJobExecutor",
    "roles/owner"
   ]
  },
  {
   "name": "osconfig.patchJobs.get",
   "roles": [
    "roles/editor",
    "roles/osconfig.patchJobExecutor",
    "roles/osconfig.patchJobViewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "osconfig.patchJobs.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/osconfig.patchJobExecutor",
    "roles/osconfig.patchJobViewer",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "policysimulator.replayResults.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/policysimulator.admin",
    "roles/viewer"
   ]
  },
  {
   "name": "policysimulator.replays.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/policysimulator.admin",
    "roles/viewer"
   ]
  },
  {
   "name": "policysimulator.replays.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/policysimulator.admin",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.certificateAuthorities.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.caManager"
   ]
  },
  {
   "name": "privateca.certificateAuthorities.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.caManager"
   ]
  },
  {
   "name": "privateca.certificateAuthorities.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.certificateAuthorities.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.certificateAuthorities.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.certificateAuthorities.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.caManager"
   ]
  },
  {
   "name": "privateca.certificateRevocationLists.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin"
   ]
  },
  {
   "name": "privateca.certificateRevocationLists.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.certificateRevocationLists.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.certificateRevocationLists.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.certificateRevocationLists.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.caManager"
   ]
  },
  {
   "name": "privateca.certificates.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.certificateManager",
    "roles/privateca.certificateRequester"
   ]
  },
  {
   "name": "privateca.certificates.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.certificates.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.certificates.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.certificates.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.caManager"
   ]
  },
  {
   "name": "privateca.locations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.locations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin"
   ]
  },
  {
   "name": "privateca.operations.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin"
   ]
  },
  {
   "name": "privateca.operations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.operations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.reusableConfigs.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.caManager"
   ]
  },
  {
   "name": "privateca.reusableConfigs.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.caManager"
   ]
  },
  {
   "name": "privateca.reusableConfigs.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.reusableConfigs.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.reusableConfigs.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.auditor",
    "roles/privateca.caManager",
    "roles/privateca.certificateManager",
    "roles/viewer"
   ]
  },
  {
   "name": "privateca.reusableConfigs.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/privateca.admin",
    "roles/privateca.caManager"
   ]
  },
  {
   "name": "proximitybeacon.attachments.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/proximitybeacon.attachmentEditor"
   ]
  },
  {
   "name": "proximitybeacon.attachments.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/proximitybeacon.attachmentEditor"
   ]
  },
  {
   "name": "proximitybeacon.attachments.get",
   "roles": [
    "roles/editor",
    "roles/proximitybeacon.attachmentViewer",
    "roles/owner",
    "roles/proximitybeacon.attachmentEditor",
    "roles/viewer"
   ]
  },
  {
   "name": "proximitybeacon.attachments.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/proximitybeacon.attachmentViewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/proximitybeacon.attachmentEditor",
    "roles/viewer"
   ]
  },
  {
   "name": "proximitybeacon.beacons.attach",
   "roles": [
    "roles/editor",
    "roles/proximitybeacon.attachmentPublisher",
    "roles/owner"
   ]
  },
  {
   "name": "proximitybeacon.beacons.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/proximitybeacon.beaconEditor"
   ]
  },
  {
   "name": "proximitybeacon.beacons.get",
   "roles": [
    "roles/editor",
    "roles/proximitybeacon.attachmentPublisher",
    "roles/owner",
    "roles/proximitybeacon.attachmentEditor",
    "roles/proximitybeacon.beaconEditor",
    "roles/viewer"
   ]
  },
  {
   "name": "proximitybeacon.beacons.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/proximitybeacon.attachmentPublisher",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/proximitybeacon.attachmentEditor",
    "roles/proximitybeacon.beaconEditor",
    "roles/viewer"
   ]
  },
  {
   "name": "proximitybeacon.beacons.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/proximitybeacon.beaconEditor"
   ]
  },
  {
   "name": "proximitybeacon.namespaces.create",
   "roles": [
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "proximitybeacon.namespaces.delete",
   "roles": [
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "proximitybeacon.namespaces.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "proximitybeacon.namespaces.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/proximitybeacon.attachmentEditor",
    "roles/viewer"
   ]
  },
  {
   "name": "proximitybeacon.namespaces.update",
   "roles": [
    "roles/editor",
    "roles/owner"
   ]
  },
  {
   "name": "pubsublite.subscriptions.create",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/owner"
   ]
  },
  {
   "name": "pubsublite.subscriptions.delete",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/owner"
   ]
  },
  {
   "name": "pubsublite.subscriptions.get",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/owner",
    "roles/pubsublite.viewer",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsublite.subscriptions.getCursor",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/pubsublite.subscriber",
    "roles/owner",
    "roles/pubsublite.viewer",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsublite.subscriptions.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/pubsublite.viewer",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsublite.subscriptions.setCursor",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/pubsublite.subscriber",
    "roles/owner"
   ]
  },
  {
   "name": "pubsublite.subscriptions.subscribe",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/pubsublite.subscriber",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsublite.subscriptions.update",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/owner"
   ]
  },
  {
   "name": "pubsublite.topics.computeMessageStats",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/pubsublite.subscriber",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsublite.topics.create",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/owner"
   ]
  },
  {
   "name": "pubsublite.topics.delete",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/owner"
   ]
  },
  {
   "name": "pubsublite.topics.get",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/owner",
    "roles/pubsublite.viewer",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsublite.topics.getPartitions",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/pubsublite.publisher",
    "roles/pubsublite.subscriber",
    "roles/owner",
    "roles/pubsublite.viewer",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsublite.topics.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/pubsublite.viewer",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsublite.topics.listSubscriptions",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/owner",
    "roles/pubsublite.viewer",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsublite.topics.publish",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/pubsublite.publisher",
    "roles/owner"
   ]
  },
  {
   "name": "pubsublite.topics.subscribe",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/pubsublite.subscriber",
    "roles/owner",
    "roles/viewer"
   ]
  },
  {
   "name": "pubsublite.topics.update",
   "roles": [
    "roles/editor",
    "roles/pubsublite.admin",
    "roles/pubsublite.editor",
    "roles/owner"
   ]
  },
  {
   "name": "recaptchaenterprise.assessments.annotate",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recaptchaenterprise.agent"
   ]
  },
  {
   "name": "recaptchaenterprise.assessments.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recaptchaenterprise.agent"
   ]
  },
  {
   "name": "recaptchaenterprise.keys.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recaptchaenterprise.admin"
   ]
  },
  {
   "name": "recaptchaenterprise.keys.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recaptchaenterprise.admin"
   ]
  },
  {
   "name": "recaptchaenterprise.keys.get",
   "roles": [
    "roles/editor",
    "roles/recaptchaenterprise.viewer",
    "roles/owner",
    "roles/recaptchaenterprise.admin",
    "roles/viewer"
   ]
  },
  {
   "name": "recaptchaenterprise.keys.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/recaptchaenterprise.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recaptchaenterprise.admin",
    "roles/viewer"
   ]
  },
  {
   "name": "recaptchaenterprise.keys.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recaptchaenterprise.admin"
   ]
  },
  {
   "name": "recaptchaenterprise.metrics.get",
   "roles": [
    "roles/editor",
    "roles/recaptchaenterprise.viewer",
    "roles/owner",
    "roles/recaptchaenterprise.admin",
    "roles/viewer"
   ]
  },
  {
   "name": "recaptchaenterprise.projectmetadata.get",
   "roles": [
    "roles/editor",
    "roles/recaptchaenterprise.viewer",
    "roles/owner",
    "roles/recaptchaenterprise.admin",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeAddressIdleResourceInsights.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeAddressIdleResourceInsights.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeAddressIdleResourceInsights.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin"
   ]
  },
  {
   "name": "recommender.computeAddressIdleResourceRecommendations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeAddressIdleResourceRecommendations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeAddressIdleResourceRecommendations.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin"
   ]
  },
  {
   "name": "recommender.computeDiskIdleResourceInsights.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeDiskIdleResourceInsights.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeDiskIdleResourceInsights.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin"
   ]
  },
  {
   "name": "recommender.computeDiskIdleResourceRecommendations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeDiskIdleResourceRecommendations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeDiskIdleResourceRecommendations.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin"
   ]
  },
  {
   "name": "recommender.computeFirewallInsights.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.firewallAdmin",
    "roles/recommender.firewallViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeFirewallInsights.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.firewallAdmin",
    "roles/recommender.firewallViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeFirewallInsights.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.firewallAdmin"
   ]
  },
  {
   "name": "recommender.computeImageIdleResourceInsights.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeImageIdleResourceInsights.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeImageIdleResourceInsights.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin"
   ]
  },
  {
   "name": "recommender.computeImageIdleResourceRecommendations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeImageIdleResourceRecommendations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeImageIdleResourceRecommendations.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin"
   ]
  },
  {
   "name": "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeInstanceGroupManagerMachineTypeRecommendations.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin"
   ]
  },
  {
   "name": "recommender.computeInstanceIdleResourceRecommendations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeInstanceIdleResourceRecommendations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeInstanceIdleResourceRecommendations.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin"
   ]
  },
  {
   "name": "recommender.computeInstanceMachineTypeRecommendations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeInstanceMachineTypeRecommendations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.computeAdmin",
    "roles/recommender.computeViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.computeInstanceMachineTypeRecommendations.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.computeAdmin"
   ]
  },
  {
   "name": "recommender.iamPolicyInsights.get",
   "roles": [
    "roles/editor",
    "roles/recommender.iamViewer",
    "roles/owner",
    "roles/recommender.iamAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.iamPolicyInsights.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/recommender.iamViewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.iamAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.iamPolicyInsights.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.iamAdmin"
   ]
  },
  {
   "name": "recommender.iamPolicyRecommendations.get",
   "roles": [
    "roles/editor",
    "roles/recommender.iamViewer",
    "roles/owner",
    "roles/recommender.iamAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.iamPolicyRecommendations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/recommender.iamViewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.iamAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.iamPolicyRecommendations.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.iamAdmin"
   ]
  },
  {
   "name": "recommender.iamServiceAccountInsights.get",
   "roles": [
    "roles/editor",
    "roles/recommender.iamViewer",
    "roles/owner",
    "roles/recommender.iamAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.iamServiceAccountInsights.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/recommender.iamViewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.iamAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.iamServiceAccountInsights.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.iamAdmin"
   ]
  },
  {
   "name": "recommender.loggingProductSuggestionContainerInsights.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.productSuggestionAdmin",
    "roles/recommender.productSuggestionViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.loggingProductSuggestionContainerInsights.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.productSuggestionAdmin",
    "roles/recommender.productSuggestionViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.loggingProductSuggestionContainerInsights.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.productSuggestionAdmin"
   ]
  },
  {
   "name": "recommender.loggingProductSuggestionContainerRecommendations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.productSuggestionAdmin",
    "roles/recommender.productSuggestionViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.loggingProductSuggestionContainerRecommendations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.productSuggestionAdmin",
    "roles/recommender.productSuggestionViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.loggingProductSuggestionContainerRecommendations.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.productSuggestionAdmin"
   ]
  },
  {
   "name": "recommender.monitoringProductSuggestionComputeInsights.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.productSuggestionAdmin",
    "roles/recommender.productSuggestionViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.monitoringProductSuggestionComputeInsights.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.productSuggestionAdmin",
    "roles/recommender.productSuggestionViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.monitoringProductSuggestionComputeInsights.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.productSuggestionAdmin"
   ]
  },
  {
   "name": "recommender.monitoringProductSuggestionComputeRecommendations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.productSuggestionAdmin",
    "roles/recommender.productSuggestionViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.monitoringProductSuggestionComputeRecommendations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/recommender.productSuggestionAdmin",
    "roles/recommender.productSuggestionViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "recommender.monitoringProductSuggestionComputeRecommendations.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/recommender.productSuggestionAdmin"
   ]
  },
  {
   "name": "redis.instances.create",
   "roles": [
    "roles/editor",
    "roles/redis.admin",
    "roles/owner"
   ]
  },
  {
   "name": "redis.instances.delete",
   "roles": [
    "roles/editor",
    "roles/redis.admin",
    "roles/owner"
   ]
  },
  {
   "name": "redis.instances.export",
   "roles": [
    "roles/editor",
    "roles/redis.admin",
    "roles/owner"
   ]
  },
  {
   "name": "redis.instances.failover",
   "roles": [
    "roles/editor",
    "roles/redis.admin",
    "roles/owner",
    "roles/redis.editor"
   ]
  },
  {
   "name": "redis.instances.get",
   "roles": [
    "roles/editor",
    "roles/redis.admin",
    "roles/redis.viewer",
    "roles/owner",
    "roles/redis.editor",
    "roles/viewer"
   ]
  },
  {
   "name": "redis.instances.getAuthString",
   "roles": [
    "roles/editor",
    "roles/redis.admin",
    "roles/owner"
   ]
  },
  {
   "name": "redis.instances.import",
   "roles": [
    "roles/editor",
    "roles/redis.admin",
    "roles/owner"
   ]
  },
  {
   "name": "redis.instances.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/redis.admin",
    "roles/redis.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/redis.editor",
    "roles/viewer"
   ]
  },
  {
   "name": "redis.instances.update",
   "roles": [
    "roles/editor",
    "roles/redis.admin",
    "roles/owner",
    "roles/redis.editor"
   ]
  },
  {
   "name": "redis.instances.updateAuth",
   "roles": [
    "roles/editor",
    "roles/redis.admin",
    "roles/owner"
   ]
  },
  {
   "name": "redis.instances.upgrade",
   "roles": [
    "roles/editor",
    "roles/redis.admin",
    "roles/owner"
   ]
  },
  {
   "name": "redis.locations.get",
   "roles": [
    "roles/editor",
    "roles/redis.admin",
    "roles/redis.viewer",
    "roles/owner",
    "roles/redis.editor",
    "roles/viewer"
   ]
  },
  {
   "name": "redis.locations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/redis.admin",
    "roles/redis.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/redis.editor",
    "roles/viewer"
   ]
  },
  {
   "name": "redis.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/redis.admin",
    "roles/owner",
    "roles/redis.editor"
   ]
  },
  {
   "name": "redis.operations.delete",
   "roles": [
    "roles/editor",
    "roles/redis.admin",
    "roles/owner",
    "roles/redis.editor"
   ]
  },
  {
   "name": "redis.operations.get",
   "roles": [
    "roles/editor",
    "roles/redis.admin",
    "roles/redis.viewer",
    "roles/owner",
    "roles/redis.editor",
    "roles/viewer"
   ]
  },
  {
   "name": "redis.operations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/redis.admin",
    "roles/redis.viewer",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/redis.editor",
    "roles/viewer"
   ]
  },
  {
   "name": "remotebuildexecution.actions.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.artifactCreator",
    "roles/remotebuildexecution.artifactAdmin",
    "roles/remotebuildexecution.reservationAdmin"
   ]
  },
  {
   "name": "remotebuildexecution.actions.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.artifactAdmin",
    "roles/remotebuildexecution.reservationAdmin"
   ]
  },
  {
   "name": "remotebuildexecution.actions.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.artifactCreator",
    "roles/remotebuildexecution.artifactAdmin",
    "roles/remotebuildexecution.artifactViewer",
    "roles/remotebuildexecution.reservationAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "remotebuildexecution.actions.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.serviceAgent",
    "roles/remotebuildexecution.worker"
   ]
  },
  {
   "name": "remotebuildexecution.botsessions.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.serviceAgent",
    "roles/remotebuildexecution.worker"
   ]
  },
  {
   "name": "remotebuildexecution.botsessions.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.serviceAgent",
    "roles/remotebuildexecution.worker"
   ]
  },
  {
   "name": "remotebuildexecution.instances.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.configurationAdmin"
   ]
  },
  {
   "name": "remotebuildexecution.instances.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.configurationAdmin",
    "roles/remotebuildexecution.configurationViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "remotebuildexecution.instances.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/remotebuildexecution.configurationAdmin",
    "roles/remotebuildexecution.configurationViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "remotebuildexecution.logstreams.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.artifactCreator",
    "roles/remotebuildexecution.artifactAdmin",
    "roles/remotebuildexecution.serviceAgent",
    "roles/remotebuildexecution.worker",
    "roles/remotebuildexecution.logstreamWriter"
   ]
  },
  {
   "name": "remotebuildexecution.logstreams.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.artifactCreator",
    "roles/remotebuildexecution.artifactAdmin",
    "roles/remotebuildexecution.artifactViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "remotebuildexecution.logstreams.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.artifactCreator",
    "roles/remotebuildexecution.artifactAdmin",
    "roles/remotebuildexecution.serviceAgent",
    "roles/remotebuildexecution.worker",
    "roles/remotebuildexecution.logstreamWriter"
   ]
  },
  {
   "name": "remotebuildexecution.workerpools.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.configurationAdmin"
   ]
  },
  {
   "name": "remotebuildexecution.workerpools.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.configurationAdmin",
    "roles/remotebuildexecution.configurationViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "remotebuildexecution.workerpools.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/remotebuildexecution.configurationAdmin",
    "roles/remotebuildexecution.configurationViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "remotebuildexecution.workerpools.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/remotebuildexecution.configurationAdmin"
   ]
  },
  {
   "name": "resourcemanager.projects.move",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/resourcemanager.projectMover",
    "roles/resourcemanager.folderMover",
    "roles/resourcemanager.folderAdmin"
   ]
  },
  {
   "name": "resourcemanager.projects.update",
   "roles": [
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/firebase.sdkAdminServiceAgent",
    "roles/owner",
    "roles/resourcemanager.projectMover"
   ]
  },
  {
   "name": "resourcemanager.resourceTagBindings.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/resourcemanager.tagUser"
   ]
  },
  {
   "name": "resourcemanager.resourceTagBindings.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/resourcemanager.tagUser"
   ]
  },
  {
   "name": "resourcemanager.resourceTagBindings.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/resourcemanager.tagUser",
    "roles/resourcemanager.tagViewer"
   ]
  },
  {
   "name": "resourcemanager.tagKeys.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/resourcemanager.tagAdmin"
   ]
  },
  {
   "name": "resourcemanager.tagKeys.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/resourcemanager.tagAdmin"
   ]
  },
  {
   "name": "resourcemanager.tagKeys.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/resourcemanager.tagAdmin",
    "roles/resourcemanager.tagViewer"
   ]
  },
  {
   "name": "resourcemanager.tagKeys.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/resourcemanager.tagAdmin"
   ]
  },
  {
   "name": "resourcemanager.tagKeys.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/resourcemanager.tagAdmin",
    "roles/resourcemanager.tagUser",
    "roles/resourcemanager.tagViewer"
   ]
  },
  {
   "name": "resourcemanager.tagKeys.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/resourcemanager.tagAdmin"
   ]
  },
  {
   "name": "resourcemanager.tagValueBindings.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/resourcemanager.tagUser"
   ]
  },
  {
   "name": "resourcemanager.tagValueBindings.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/resourcemanager.tagUser"
   ]
  },
  {
   "name": "resourcemanager.tagValues.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/resourcemanager.tagAdmin"
   ]
  },
  {
   "name": "resourcemanager.tagValues.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/resourcemanager.tagAdmin"
   ]
  },
  {
   "name": "resourcemanager.tagValues.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/resourcemanager.tagAdmin",
    "roles/resourcemanager.tagUser",
    "roles/resourcemanager.tagViewer"
   ]
  },
  {
   "name": "resourcemanager.tagValues.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/resourcemanager.tagAdmin"
   ]
  },
  {
   "name": "resourcemanager.tagValues.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/resourcemanager.tagAdmin",
    "roles/resourcemanager.tagUser",
    "roles/resourcemanager.tagViewer"
   ]
  },
  {
   "name": "resourcemanager.tagValues.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/resourcemanager.tagAdmin"
   ]
  },
  {
   "name": "run.configurations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/run.admin",
    "roles/run.viewer"
   ]
  },
  {
   "name": "run.configurations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/run.admin",
    "roles/run.viewer"
   ]
  },
  {
   "name": "run.locations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/run.admin",
    "roles/run.viewer"
   ]
  },
  {
   "name": "run.revisions.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/run.admin"
   ]
  },
  {
   "name": "run.revisions.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/run.admin",
    "roles/run.viewer"
   ]
  },
  {
   "name": "run.revisions.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/run.admin",
    "roles/run.viewer"
   ]
  },
  {
   "name": "run.routes.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/run.admin",
    "roles/run.viewer"
   ]
  },
  {
   "name": "run.routes.invoke",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/run.admin",
    "roles/run.invoker",
    "roles/run.serviceAgent",
    "roles/serverless.serviceAgent"
   ]
  },
  {
   "name": "run.routes.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/run.admin",
    "roles/run.viewer"
   ]
  },
  {
   "name": "run.services.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/run.admin"
   ]
  },
  {
   "name": "run.services.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/run.admin"
   ]
  },
  {
   "name": "run.services.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/firebasemods.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/run.admin",
    "roles/run.viewer"
   ]
  },
  {
   "name": "run.services.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/run.admin",
    "roles/run.viewer"
   ]
  },
  {
   "name": "run.services.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/run.admin"
   ]
  },
  {
   "name": "secretmanager.locations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/secretmanager.admin",
    "roles/secretmanager.viewer"
   ]
  },
  {
   "name": "secretmanager.locations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/secretmanager.admin",
    "roles/secretmanager.viewer"
   ]
  },
  {
   "name": "secretmanager.secrets.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/secretmanager.admin"
   ]
  },
  {
   "name": "secretmanager.secrets.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/secretmanager.admin"
   ]
  },
  {
   "name": "secretmanager.secrets.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/secretmanager.admin",
    "roles/secretmanager.viewer"
   ]
  },
  {
   "name": "secretmanager.secrets.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/secretmanager.admin",
    "roles/secretmanager.viewer"
   ]
  },
  {
   "name": "secretmanager.secrets.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/secretmanager.admin",
    "roles/secretmanager.viewer"
   ]
  },
  {
   "name": "secretmanager.secrets.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/secretmanager.admin"
   ]
  },
  {
   "name": "secretmanager.versions.add",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/secretmanager.admin",
    "roles/secretmanager.secretVersionAdder",
    "roles/secretmanager.secretVersionManager"
   ]
  },
  {
   "name": "secretmanager.versions.destroy",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/secretmanager.admin",
    "roles/secretmanager.secretVersionManager"
   ]
  },
  {
   "name": "secretmanager.versions.disable",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/secretmanager.admin",
    "roles/secretmanager.secretVersionManager"
   ]
  },
  {
   "name": "secretmanager.versions.enable",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/secretmanager.admin",
    "roles/secretmanager.secretVersionManager"
   ]
  },
  {
   "name": "secretmanager.versions.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/secretmanager.admin",
    "roles/secretmanager.secretVersionManager",
    "roles/secretmanager.viewer"
   ]
  },
  {
   "name": "secretmanager.versions.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/secretmanager.admin",
    "roles/secretmanager.secretVersionManager",
    "roles/secretmanager.viewer"
   ]
  },
  {
   "name": "securitycenter.assets.group",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.assetsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.assets.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/securitycenter.assetsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.assets.listAssetPropertyNames",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.assetsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.assets.runDiscovery",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.assetsDiscoveryRunner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "securitycenter.assetsecuritymarks.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.assetSecurityMarksWriter",
    "roles/securedlandingzone.serviceAgent",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "securitycenter.containerthreatdetectionsettings.calculate",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.settingsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.containerthreatdetectionsettings.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.settingsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.containerthreatdetectionsettings.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.admin",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor"
   ]
  },
  {
   "name": "securitycenter.eventthreatdetectionsettings.calculate",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.settingsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.eventthreatdetectionsettings.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.settingsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.eventthreatdetectionsettings.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.admin",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor"
   ]
  },
  {
   "name": "securitycenter.findings.group",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.findingsEditor",
    "roles/securitycenter.findingsViewer",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.findings.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/securedlandingzone.serviceAgent",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.findingsEditor",
    "roles/securitycenter.findingsViewer",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.findings.listFindingPropertyNames",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.findingsEditor",
    "roles/securitycenter.findingsViewer",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.findings.setState",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.findingsEditor",
    "roles/securitycenter.findingsStateSetter",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "securitycenter.findings.setWorkflowState",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.findingsWorkflowStateSetter",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "securitycenter.findings.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securedlandingzone.serviceAgent",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.findingsEditor",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "securitycenter.findingsecuritymarks.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.findingSecurityMarksWriter",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent"
   ]
  },
  {
   "name": "securitycenter.notificationconfig.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.notificationConfigEditor",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor"
   ]
  },
  {
   "name": "securitycenter.notificationconfig.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.notificationConfigEditor",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor"
   ]
  },
  {
   "name": "securitycenter.notificationconfig.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.notificationConfigViewer",
    "roles/securitycenter.settingsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.notificationConfigEditor",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.notificationconfig.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/securitycenter.notificationConfigViewer",
    "roles/securitycenter.settingsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.notificationConfigEditor",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.notificationconfig.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.notificationConfigEditor",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor"
   ]
  },
  {
   "name": "securitycenter.organizationsettings.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.settingsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.organizationsettings.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.admin",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor"
   ]
  },
  {
   "name": "securitycenter.securitycentersettings.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.settingsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.securitycentersettings.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.admin",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor"
   ]
  },
  {
   "name": "securitycenter.securityhealthanalyticssettings.calculate",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.settingsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.securityhealthanalyticssettings.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.settingsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.securityhealthanalyticssettings.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.admin",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor"
   ]
  },
  {
   "name": "securitycenter.sources.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.sourcesAdmin",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.findingsEditor",
    "roles/securitycenter.findingsViewer",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.sourcesEditor",
    "roles/securitycenter.sourcesViewer",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.sources.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/securitycenter.sourcesAdmin",
    "roles/securitycenter.admin",
    "roles/viewer"
   ]
  },
  {
   "name": "securitycenter.sources.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/securitycenter.sourcesAdmin",
    "roles/securedlandingzone.serviceAgent",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.findingsEditor",
    "roles/securitycenter.findingsViewer",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.sourcesEditor",
    "roles/securitycenter.sourcesViewer",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.sources.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.sourcesAdmin",
    "roles/securedlandingzone.serviceAgent",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.sourcesEditor"
   ]
  },
  {
   "name": "securitycenter.subscription.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.settingsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.websecurityscannersettings.calculate",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.settingsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.websecurityscannersettings.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.settingsViewer",
    "roles/securitycenter.adminEditor",
    "roles/securitycenter.admin",
    "roles/viewer",
    "roles/securitycenter.controlServiceAgent",
    "roles/securitycenter.securityHealthAnalyticsServiceAgent",
    "roles/securitycenter.serviceAgent",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor",
    "roles/securitycenter.adminViewer"
   ]
  },
  {
   "name": "securitycenter.websecurityscannersettings.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/securitycenter.admin",
    "roles/securitycenter.settingsAdmin",
    "roles/securitycenter.settingsEditor"
   ]
  },
  {
   "name": "servicebroker.bindingoperations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.bindingoperations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.bindings.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.bindings.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.bindings.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.bindings.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicebroker.admin"
   ]
  },
  {
   "name": "servicebroker.bindings.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.catalogs.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.catalogs.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.catalogs.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.catalogs.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicebroker.admin"
   ]
  },
  {
   "name": "servicebroker.catalogs.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.instanceoperations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.instanceoperations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.instances.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.instances.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.instances.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.instances.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicebroker.admin"
   ]
  },
  {
   "name": "servicebroker.instances.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "servicebroker.instances.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicebroker.admin",
    "roles/servicebroker.operator"
   ]
  },
  {
   "name": "serviceconsumermanagement.consumers.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "serviceconsumermanagement.quota.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "serviceconsumermanagement.quota.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "serviceconsumermanagement.tenancyu.addResource",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/serviceconsumermanagement.tenancyUnitsAdmin",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "serviceconsumermanagement.tenancyu.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/serviceconsumermanagement.tenancyUnitsAdmin",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "serviceconsumermanagement.tenancyu.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/serviceconsumermanagement.tenancyUnitsAdmin",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "serviceconsumermanagement.tenancyu.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/serviceconsumermanagement.tenancyUnitsAdmin",
    "roles/serviceconsumermanagement.tenancyUnitsViewer",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "serviceconsumermanagement.tenancyu.removeResource",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/serviceconsumermanagement.tenancyUnitsAdmin",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "servicedirectory.endpoints.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor"
   ]
  },
  {
   "name": "servicedirectory.endpoints.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor"
   ]
  },
  {
   "name": "servicedirectory.endpoints.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor",
    "roles/servicedirectory.viewer"
   ]
  },
  {
   "name": "servicedirectory.endpoints.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor",
    "roles/servicedirectory.viewer"
   ]
  },
  {
   "name": "servicedirectory.endpoints.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor",
    "roles/servicedirectory.viewer"
   ]
  },
  {
   "name": "servicedirectory.endpoints.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor"
   ]
  },
  {
   "name": "servicedirectory.locations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor",
    "roles/servicedirectory.viewer"
   ]
  },
  {
   "name": "servicedirectory.locations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor",
    "roles/servicedirectory.viewer"
   ]
  },
  {
   "name": "servicedirectory.namespaces.associatePrivateZone",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor"
   ]
  },
  {
   "name": "servicedirectory.namespaces.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor"
   ]
  },
  {
   "name": "servicedirectory.namespaces.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor"
   ]
  },
  {
   "name": "servicedirectory.namespaces.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor",
    "roles/servicedirectory.viewer"
   ]
  },
  {
   "name": "servicedirectory.namespaces.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor",
    "roles/servicedirectory.viewer"
   ]
  },
  {
   "name": "servicedirectory.namespaces.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor",
    "roles/servicedirectory.viewer"
   ]
  },
  {
   "name": "servicedirectory.namespaces.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor"
   ]
  },
  {
   "name": "servicedirectory.services.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor"
   ]
  },
  {
   "name": "servicedirectory.services.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor"
   ]
  },
  {
   "name": "servicedirectory.services.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor",
    "roles/servicedirectory.viewer"
   ]
  },
  {
   "name": "servicedirectory.services.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor",
    "roles/servicedirectory.viewer"
   ]
  },
  {
   "name": "servicedirectory.services.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor",
    "roles/servicedirectory.viewer"
   ]
  },
  {
   "name": "servicedirectory.services.resolve",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor",
    "roles/servicedirectory.viewer"
   ]
  },
  {
   "name": "servicedirectory.services.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicedirectory.admin",
    "roles/servicedirectory.editor"
   ]
  },
  {
   "name": "servicemanagement.consumerSettings.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicemanagement.quotaAdmin",
    "roles/servicemanagement.quotaViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "servicemanagement.consumerSettings.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/servicemanagement.quotaAdmin",
    "roles/servicemanagement.quotaViewer",
    "roles/viewer"
   ]
  },
  {
   "name": "servicemanagement.consumerSettings.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicemanagement.quotaAdmin"
   ]
  },
  {
   "name": "servicemanagement.services.bind",
   "roles": [
    "roles/editor",
    "roles/firebase.managementServiceAgent",
    "roles/firebase.sdkProvisioningServiceAgent",
    "roles/owner",
    "roles/servicemanagement.serviceConsumer",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "servicemanagement.services.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "servicemanagement.services.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "servicemanagement.services.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicemanagement.configEditor",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "servicenetworking.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicenetworking.networksAdmin"
   ]
  },
  {
   "name": "servicenetworking.operations.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicenetworking.networksAdmin"
   ]
  },
  {
   "name": "servicenetworking.operations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/servicenetworking.networksAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "servicenetworking.services.addSubnetwork",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicenetworking.networksAdmin"
   ]
  },
  {
   "name": "serviceusage.apiKeys.regenerate",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/serviceusage.apiKeysAdmin"
   ]
  },
  {
   "name": "serviceusage.apiKeys.revert",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/serviceusage.apiKeysAdmin"
   ]
  },
  {
   "name": "serviceusage.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/serviceusage.serviceUsageAdmin"
   ]
  },
  {
   "name": "serviceusage.operations.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/serviceusage.serviceUsageAdmin"
   ]
  },
  {
   "name": "serviceusage.quotas.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/servicemanagement.quotaAdmin",
    "roles/serviceusage.serviceUsageAdmin"
   ]
  },
  {
   "name": "source.repos.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/source.admin"
   ]
  },
  {
   "name": "spanner.backupOperations.cancel",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin"
   ]
  },
  {
   "name": "spanner.backupOperations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin",
    "roles/spanner.backupWriter"
   ]
  },
  {
   "name": "spanner.backupOperations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin",
    "roles/spanner.backupWriter"
   ]
  },
  {
   "name": "spanner.backups.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin",
    "roles/spanner.backupWriter"
   ]
  },
  {
   "name": "spanner.backups.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin"
   ]
  },
  {
   "name": "spanner.backups.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/spanner.restoreAdmin",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin",
    "roles/spanner.backupWriter"
   ]
  },
  {
   "name": "spanner.backups.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin"
   ]
  },
  {
   "name": "spanner.backups.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/spanner.restoreAdmin",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin",
    "roles/spanner.backupWriter"
   ]
  },
  {
   "name": "spanner.backups.restoreDatabase",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/spanner.restoreAdmin",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "spanner.backups.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin"
   ]
  },
  {
   "name": "spanner.databases.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/spanner.restoreAdmin",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "spanner.databases.createBackup",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin",
    "roles/spanner.backupWriter"
   ]
  },
  {
   "name": "spanner.databases.drop",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "spanner.databases.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.restoreAdmin",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin",
    "roles/spanner.backupWriter"
   ]
  },
  {
   "name": "spanner.databases.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "spanner.databases.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "spanner.instanceOperations.cancel",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "spanner.instanceOperations.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "spanner.instanceOperations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "spanner.instanceOperations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "spanner.instances.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "spanner.instances.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "spanner.instances.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/viewer",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "spanner.instances.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "stackdriver.resourceMetadata.write",
   "roles": [
    "roles/editor",
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/owner",
    "roles/stackdriver.resourceMetadata.writer"
   ]
  },
  {
   "name": "storage.hmacKeys.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/storage.hmacKeyAdmin"
   ]
  },
  {
   "name": "storage.hmacKeys.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/storage.hmacKeyAdmin"
   ]
  },
  {
   "name": "storage.hmacKeys.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/storage.hmacKeyAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "storage.hmacKeys.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/storage.hmacKeyAdmin",
    "roles/viewer"
   ]
  },
  {
   "name": "storage.hmacKeys.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/storage.hmacKeyAdmin"
   ]
  },
  {
   "name": "storagetransfer.jobs.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/storagetransfer.admin",
    "roles/storagetransfer.user"
   ]
  },
  {
   "name": "storagetransfer.jobs.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/storagetransfer.admin"
   ]
  },
  {
   "name": "storagetransfer.jobs.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/storagetransfer.admin",
    "roles/storagetransfer.user",
    "roles/storagetransfer.viewer"
   ]
  },
  {
   "name": "storagetransfer.jobs.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/storagetransfer.admin",
    "roles/storagetransfer.user",
    "roles/storagetransfer.viewer"
   ]
  },
  {
   "name": "storagetransfer.jobs.run",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/storagetransfer.admin",
    "roles/storagetransfer.user"
   ]
  },
  {
   "name": "storagetransfer.jobs.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/storagetransfer.admin",
    "roles/storagetransfer.user"
   ]
  },
  {
   "name": "storagetransfer.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/storagetransfer.admin",
    "roles/storagetransfer.user"
   ]
  },
  {
   "name": "storagetransfer.operations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/storagetransfer.admin",
    "roles/storagetransfer.user",
    "roles/storagetransfer.viewer"
   ]
  },
  {
   "name": "storagetransfer.operations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/storagetransfer.admin",
    "roles/storagetransfer.user",
    "roles/storagetransfer.viewer"
   ]
  },
  {
   "name": "storagetransfer.operations.pause",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/storagetransfer.admin",
    "roles/storagetransfer.user"
   ]
  },
  {
   "name": "storagetransfer.operations.resume",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/storagetransfer.admin",
    "roles/storagetransfer.user"
   ]
  },
  {
   "name": "storagetransfer.projects.getServiceAccount",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/storagetransfer.admin",
    "roles/storagetransfer.user",
    "roles/storagetransfer.viewer"
   ]
  },
  {
   "name": "subscribewithgoogledeveloper.tools.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/subscribewithgoogledeveloper.developer"
   ]
  },
  {
   "name": "tpu.acceleratortypes.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/tpu.admin",
    "roles/tpu.viewer"
   ]
  },
  {
   "name": "tpu.acceleratortypes.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/tpu.admin",
    "roles/tpu.viewer"
   ]
  },
  {
   "name": "tpu.nodes.reimage",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/tpu.admin"
   ]
  },
  {
   "name": "tpu.nodes.reset",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/tpu.admin"
   ]
  },
  {
   "name": "tpu.nodes.start",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/tpu.admin"
   ]
  },
  {
   "name": "tpu.nodes.stop",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/tpu.admin"
   ]
  },
  {
   "name": "tpu.tensorflowversions.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/tpu.admin",
    "roles/tpu.viewer"
   ]
  },
  {
   "name": "tpu.tensorflowversions.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/tpu.admin",
    "roles/tpu.viewer"
   ]
  },
  {
   "name": "transcoder.jobTemplates.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/transcoder.admin"
   ]
  },
  {
   "name": "transcoder.jobTemplates.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/transcoder.admin"
   ]
  },
  {
   "name": "transcoder.jobTemplates.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/transcoder.admin",
    "roles/transcoder.viewer"
   ]
  },
  {
   "name": "transcoder.jobTemplates.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/transcoder.admin",
    "roles/transcoder.viewer"
   ]
  },
  {
   "name": "transcoder.jobs.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/transcoder.admin"
   ]
  },
  {
   "name": "transcoder.jobs.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/transcoder.admin"
   ]
  },
  {
   "name": "transcoder.jobs.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/transcoder.admin",
    "roles/transcoder.viewer"
   ]
  },
  {
   "name": "transcoder.jobs.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/transcoder.admin",
    "roles/transcoder.viewer"
   ]
  },
  {
   "name": "vmmigration.deployments.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/vmmigration.admin"
   ]
  },
  {
   "name": "vmmigration.deployments.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/vmmigration.admin",
    "roles/vmmigration.viewer"
   ]
  },
  {
   "name": "vmmigration.deployments.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vmmigration.admin",
    "roles/vmmigration.viewer"
   ]
  },
  {
   "name": "vmwareengine.services.use",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/vmwareengine.vmwareengineAdmin"
   ]
  },
  {
   "name": "vmwareengine.services.view",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/vmwareengine.vmwareengineAdmin",
    "roles/vmwareengine.vmwareengineViewer"
   ]
  },
  {
   "name": "vpcaccess.connectors.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/vpcaccess.admin"
   ]
  },
  {
   "name": "vpcaccess.connectors.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/vpcaccess.admin"
   ]
  },
  {
   "name": "vpcaccess.connectors.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.user",
    "roles/vpcaccess.viewer",
    "roles/vpcaccess.admin"
   ]
  },
  {
   "name": "vpcaccess.locations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.user",
    "roles/vpcaccess.viewer",
    "roles/vpcaccess.admin"
   ]
  },
  {
   "name": "vpcaccess.operations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.user",
    "roles/vpcaccess.viewer",
    "roles/vpcaccess.admin"
   ]
  },
  {
   "name": "vpcaccess.operations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/viewer",
    "roles/vpcaccess.user",
    "roles/vpcaccess.viewer",
    "roles/vpcaccess.admin"
   ]
  },
  {
   "name": "workflows.executions.cancel",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/workflows.admin",
    "roles/workflows.editor",
    "roles/workflows.invoker"
   ]
  },
  {
   "name": "workflows.executions.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/workflows.admin",
    "roles/workflows.editor",
    "roles/workflows.invoker"
   ]
  },
  {
   "name": "workflows.executions.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/workflows.viewer",
    "roles/viewer",
    "roles/workflows.admin",
    "roles/workflows.editor",
    "roles/workflows.invoker"
   ]
  },
  {
   "name": "workflows.executions.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/workflows.viewer",
    "roles/viewer",
    "roles/workflows.admin",
    "roles/workflows.editor",
    "roles/workflows.invoker"
   ]
  },
  {
   "name": "workflows.locations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/workflows.viewer",
    "roles/viewer",
    "roles/workflows.admin",
    "roles/workflows.editor"
   ]
  },
  {
   "name": "workflows.locations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/workflows.viewer",
    "roles/viewer",
    "roles/workflows.admin",
    "roles/workflows.editor"
   ]
  },
  {
   "name": "workflows.operations.cancel",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/workflows.admin",
    "roles/workflows.editor"
   ]
  },
  {
   "name": "workflows.operations.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/workflows.viewer",
    "roles/viewer",
    "roles/workflows.admin",
    "roles/workflows.editor"
   ]
  },
  {
   "name": "workflows.operations.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/workflows.viewer",
    "roles/viewer",
    "roles/workflows.admin",
    "roles/workflows.editor"
   ]
  },
  {
   "name": "workflows.workflows.create",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/workflows.admin",
    "roles/workflows.editor"
   ]
  },
  {
   "name": "workflows.workflows.delete",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/workflows.admin",
    "roles/workflows.editor"
   ]
  },
  {
   "name": "workflows.workflows.get",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/workflows.viewer",
    "roles/viewer",
    "roles/workflows.admin",
    "roles/workflows.editor"
   ]
  },
  {
   "name": "workflows.workflows.getIamPolicy",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/workflows.viewer",
    "roles/viewer",
    "roles/workflows.admin",
    "roles/workflows.editor"
   ]
  },
  {
   "name": "workflows.workflows.list",
   "roles": [
    "roles/editor",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/workflows.viewer",
    "roles/viewer",
    "roles/workflows.admin",
    "roles/workflows.editor"
   ]
  },
  {
   "name": "workflows.workflows.update",
   "roles": [
    "roles/editor",
    "roles/owner",
    "roles/workflows.admin",
    "roles/workflows.editor"
   ]
  },
  {
   "name": "iap.tunnelInstances.accessViaIAP",
   "roles": [
    "roles/iap.tunnelResourceAccessor",
    "roles/owner"
   ]
  },
  {
   "name": "logging.views.access",
   "roles": [
    "roles/logging.viewAccessor",
    "roles/logging.admin",
    "roles/owner"
   ]
  },
  {
   "name": "logging.queries.share",
   "roles": [
    "roles/logging.admin",
    "roles/owner"
   ]
  },
  {
   "name": "logging.queries.updateShared",
   "roles": [
    "roles/logging.admin",
    "roles/owner"
   ]
  },
  {
   "name": "logging.buckets.write",
   "roles": [
    "roles/logging.bucketWriter"
   ]
  },
  {
   "name": "managedidentities.domains.setIamPolicy",
   "roles": [
    "roles/managedidentities.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "gkehub.features.setIamPolicy",
   "roles": [
    "roles/gkehub.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "gkehub.memberships.setIamPolicy",
   "roles": [
    "roles/gkehub.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "stackdriver.projects.edit",
   "roles": [
    "roles/monitoring.editor",
    "roles/monitoring.admin",
    "roles/owner",
    "roles/stackdriver.accounts.editor"
   ]
  },
  {
   "name": "run.services.setIamPolicy",
   "roles": [
    "roles/firebasemods.serviceAgent",
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/run.admin"
   ]
  },
  {
   "name": "healthcare.datasets.setIamPolicy",
   "roles": [
    "roles/healthcare.datasetAdmin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "metastore.services.setIamPolicy",
   "roles": [
    "roles/metastore.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "genomics.datasets.getIamPolicy",
   "roles": [
    "roles/genomics.admin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner"
   ]
  },
  {
   "name": "genomics.datasets.setIamPolicy",
   "roles": [
    "roles/genomics.admin",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.environments.setIamPolicy",
   "roles": [
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.executions.setIamPolicy",
   "roles": [
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.instances.setIamPolicy",
   "roles": [
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "notebooks.schedules.setIamPolicy",
   "roles": [
    "roles/notebooks.admin",
    "roles/iam.securityAdmin",
    "roles/notebooks.legacyAdmin",
    "roles/notebooks.serviceAgent",
    "roles/owner"
   ]
  },
  {
   "name": "ml.jobs.setIamPolicy",
   "roles": [
    "roles/ml.admin",
    "roles/ml.jobOwner",
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.roles.create",
   "roles": [
    "roles/iam.organizationRoleAdmin",
    "roles/iam.roleAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.roles.delete",
   "roles": [
    "roles/iam.organizationRoleAdmin",
    "roles/iam.roleAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.roles.undelete",
   "roles": [
    "roles/iam.organizationRoleAdmin",
    "roles/iam.roleAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.roles.update",
   "roles": [
    "roles/iam.organizationRoleAdmin",
    "roles/iam.roleAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "resourcemanager.organizations.getIamPolicy",
   "roles": [
    "roles/iam.organizationRoleAdmin",
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/iam.organizationRoleViewer",
    "roles/resourcemanager.organizationAdmin"
   ]
  },
  {
   "name": "deploymentmanager.deployments.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner"
   ]
  },
  {
   "name": "deploymentmanager.deployments.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "dns.policies.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner"
   ]
  },
  {
   "name": "dns.policies.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "gkehub.gateway.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/gkehub.gatewayAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.annotationStores.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/healthcare.annotationStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.consentStores.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/healthcare.consentStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.dicomStores.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/healthcare.dicomStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.fhirStores.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/healthcare.fhirStoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "healthcare.hl7V2Stores.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/healthcare.hl7V2StoreAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.serviceAccounts.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.serviceAccountAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.tunnel.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/iap.admin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.tunnel.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iap.admin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.tunnelInstances.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/iap.admin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.tunnelInstances.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iap.admin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.tunnelZones.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/iap.admin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.tunnelZones.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iap.admin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.web.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/iap.admin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.web.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iap.admin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.webServiceVersions.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/iap.admin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.webServiceVersions.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iap.admin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.webServices.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/iap.admin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.webServices.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iap.admin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.webTypes.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/iap.admin",
    "roles/owner"
   ]
  },
  {
   "name": "iap.webTypes.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iap.admin",
    "roles/owner"
   ]
  },
  {
   "name": "networkmanagement.connectivitytests.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/networkmanagement.admin",
    "roles/owner"
   ]
  },
  {
   "name": "privateca.certificateAuthorities.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/privateca.admin"
   ]
  },
  {
   "name": "privateca.certificateRevocationLists.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/privateca.admin"
   ]
  },
  {
   "name": "privateca.certificates.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/privateca.admin"
   ]
  },
  {
   "name": "privateca.reusableConfigs.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/privateca.admin"
   ]
  },
  {
   "name": "proximitybeacon.beacons.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner"
   ]
  },
  {
   "name": "proximitybeacon.beacons.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "proximitybeacon.namespaces.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner"
   ]
  },
  {
   "name": "proximitybeacon.namespaces.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "resourcemanager.folders.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/resourcemanager.folderEditor",
    "roles/resourcemanager.folderIamAdmin",
    "roles/resourcemanager.folderAdmin",
    "roles/resourcemanager.organizationAdmin"
   ]
  },
  {
   "name": "resourcemanager.folders.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/resourcemanager.folderIamAdmin",
    "roles/resourcemanager.folderAdmin",
    "roles/resourcemanager.organizationAdmin"
   ]
  },
  {
   "name": "resourcemanager.organizations.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/resourcemanager.organizationAdmin"
   ]
  },
  {
   "name": "resourcemanager.tagKeys.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/resourcemanager.tagAdmin"
   ]
  },
  {
   "name": "resourcemanager.tagValues.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/resourcemanager.tagAdmin"
   ]
  },
  {
   "name": "runtimeconfig.configs.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.configs.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.variables.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.variables.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.waiters.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "runtimeconfig.waiters.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/runtimeconfig.admin"
   ]
  },
  {
   "name": "secretmanager.secrets.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/secretmanager.admin"
   ]
  },
  {
   "name": "securitycenter.sources.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/securitycenter.sourcesAdmin",
    "roles/securitycenter.admin"
   ]
  },
  {
   "name": "servicebroker.bindings.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/servicebroker.admin"
   ]
  },
  {
   "name": "servicebroker.catalogs.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/servicebroker.admin"
   ]
  },
  {
   "name": "servicebroker.instances.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/servicebroker.admin"
   ]
  },
  {
   "name": "servicedirectory.endpoints.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/servicedirectory.admin"
   ]
  },
  {
   "name": "servicedirectory.namespaces.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/servicedirectory.admin"
   ]
  },
  {
   "name": "servicedirectory.services.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/servicedirectory.admin"
   ]
  },
  {
   "name": "servicemanagement.consumerSettings.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/servicemanagement.quotaAdmin",
    "roles/servicemanagement.quotaViewer"
   ]
  },
  {
   "name": "servicemanagement.consumerSettings.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/servicemanagement.quotaAdmin"
   ]
  },
  {
   "name": "servicemanagement.services.getIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/iam.securityReviewer",
    "roles/owner",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "servicemanagement.services.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/servicemanagement.admin"
   ]
  },
  {
   "name": "source.repos.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/source.admin"
   ]
  },
  {
   "name": "spanner.backups.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/spanner.admin",
    "roles/spanner.backupAdmin"
   ]
  },
  {
   "name": "spanner.databases.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/spanner.databaseAdmin",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "spanner.instances.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/spanner.admin"
   ]
  },
  {
   "name": "workflows.workflows.setIamPolicy",
   "roles": [
    "roles/iam.securityAdmin",
    "roles/owner",
    "roles/workflows.admin"
   ]
  },
  {
   "name": "iap.webServiceVersions.accessViaIAP",
   "roles": [
    "roles/iap.httpsResourceAccessor"
   ]
  },
  {
   "name": "monitoring.notificationChannels.getVerificationCode",
   "roles": [
    "roles/monitoring.admin",
    "roles/owner"
   ]
  },
  {
   "name": "iam.serviceAccounts.undelete",
   "roles": [
    "roles/iam.serviceAccountAdmin",
    "roles/owner"
   ]
  },
  {
   "name": "policysimulator.replays.create",
   "roles": [
    "roles/owner",
    "roles/policysimulator.admin"
   ]
  },
  {
   "name": "policysimulator.replays.run",
   "roles": [
    "roles/owner",
    "roles/policysimulator.admin"
   ]
  },
  {
   "name": "remotebuildexecution.instances.delete",
   "roles": [
    "roles/owner",
    "roles/remotebuildexecution.configurationAdmin"
   ]
  },
  {
   "name": "remotebuildexecution.workerpools.delete",
   "roles": [
    "roles/owner",
    "roles/remotebuildexecution.configurationAdmin"
   ]
  },
  {
   "name": "resourcemanager.projects.delete",
   "roles": [
    "roles/owner",
    "roles/resourcemanager.projectDeleter"
   ]
  },
  {
   "name": "resourcemanager.projects.undelete",
   "roles": [
    "roles/owner"
   ]
  },
  {
   "name": "resourcemanager.projects.updateLiens",
   "roles": [
    "roles/owner",
    "roles/resourcemanager.lienModifier"
   ]
  },
  {
   "name": "secretmanager.versions.access",
   "roles": [
    "roles/owner",
    "roles/secretmanager.admin",
    "roles/secretmanager.secretAccessor"
   ]
  },
  {
   "name": "servicebroker.catalogs.validate",
   "roles": [
    "roles/owner",
    "roles/servicebroker.admin"
   ]
  },
  {
   "name": "source.repos.getProjectConfig",
   "roles": [
    "roles/owner",
    "roles/source.admin"
   ]
  },
  {
   "name": "source.repos.updateProjectConfig",
   "roles": [
    "roles/owner",
    "roles/source.admin"
   ]
  },
  {
   "name": "source.repos.updateRepoConfig",
   "roles": [
    "roles/owner",
    "roles/source.admin"
   ]
  },
  {
   "name": "threatdetection.detectorSettings.clear",
   "roles": [
    "roles/owner",
    "roles/threatdetection.editor"
   ]
  },
  {
   "name": "threatdetection.detectorSettings.get",
   "roles": [
    "roles/owner",
    "roles/threatdetection.editor",
    "roles/threatdetection.viewer"
   ]
  },
  {
   "name": "threatdetection.detectorSettings.update",
   "roles": [
    "roles/owner",
    "roles/threatdetection.editor"
   ]
  },
  {
   "name": "threatdetection.sinkSettings.get",
   "roles": [
    "roles/owner",
    "roles/threatdetection.editor",
    "roles/threatdetection.viewer"
   ]
  },
  {
   "name": "threatdetection.sinkSettings.update",
   "roles": [
    "roles/owner",
    "roles/threatdetection.editor"
   ]
  },
  {
   "name": "threatdetection.sourceSettings.get",
   "roles": [
    "roles/owner",
    "roles/threatdetection.editor",
    "roles/threatdetection.viewer"
   ]
  },
  {
   "name": "threatdetection.sourceSettings.update",
   "roles": [
    "roles/owner",
    "roles/threatdetection.editor"
   ]
  },
  {
   "name": "resourcemanager.folders.create",
   "roles": [
    "roles/resourcemanager.folderCreator",
    "roles/resourcemanager.folderAdmin"
   ]
  },
  {
   "name": "resourcemanager.folders.delete",
   "roles": [
    "roles/resourcemanager.folderEditor",
    "roles/resourcemanager.folderAdmin"
   ]
  },
  {
   "name": "resourcemanager.folders.undelete",
   "roles": [
    "roles/resourcemanager.folderEditor",
    "roles/resourcemanager.folderAdmin"
   ]
  },
  {
   "name": "resourcemanager.folders.update",
   "roles": [
    "roles/resourcemanager.folderEditor",
    "roles/resourcemanager.folderAdmin"
   ]
  },
  {
   "name": "resourcemanager.folders.move",
   "roles": [
    "roles/resourcemanager.folderMover",
    "roles/resourcemanager.folderAdmin"
   ]
  }
 ]
}